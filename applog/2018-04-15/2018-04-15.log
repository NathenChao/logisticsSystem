2018-04-15 10:19:12 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 3136 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 10:19:12 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 10:19:12 -The following profiles are active: dev
2018-04-15 10:19:12 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 10:19:12 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 10:19:12 CST 2018]; root of context hierarchy
2018-04-15 10:19:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 10:19:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1e4fb03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$943e29aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 10:19:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 10:19:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:19:17 -Tomcat initialized with port(s): 80 (http)
2018-04-15 10:19:17 -Starting service [Tomcat]
2018-04-15 10:19:17 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 10:19:17 -Initializing Spring embedded WebApplicationContext
2018-04-15 10:19:17 -Root WebApplicationContext: initialization completed in 4784 ms
2018-04-15 10:19:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 10:19:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 10:19:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 10:19:17 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 10:19:17 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 10:19:17 -Filter xssFilter was not registered (disabled)
2018-04-15 10:19:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 10:19:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 10:19:17 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 10:19:17 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 10:19:17 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 10:19:12 CST 2018]; root of context hierarchy
2018-04-15 10:19:18 -{dataSource-1} inited
2018-04-15 10:19:20 -Using default implementation for ThreadExecutor
2018-04-15 10:19:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 10:19:20 -Quartz Scheduler v.2.2.1 created.
2018-04-15 10:19:20 -RAMJobStore initialized.
2018-04-15 10:19:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 10:19:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 10:19:20 -Quartz scheduler version: 2.2.1
2018-04-15 10:19:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@29c80149
2018-04-15 10:19:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 10:19:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 10:19:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 10:19:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 10:19:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 10:19:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 10:19:22 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 10:19:22 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 10:19:22 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 10:19:22 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 10:19:22 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 10:19:22 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 10:19:22 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 10:19:22 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 10:19:22 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 10:19:22 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 10:19:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 10:19:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 10:19:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 10:19:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 10:19:22 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 10:19:22 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 10:19:22 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 10:19:22 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 10:19:22 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 10:19:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 10:19:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 10:19:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 10:19:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 10:19:22 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 10:19:22 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 10:19:22 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 10:19:22 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 10:19:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 10:19:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 10:19:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 10:19:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 10:19:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 10:19:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 10:19:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 10:19:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 10:19:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 10:19:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 10:19:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 10:19:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:19:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 10:19:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 10:19:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 10:19:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 10:19:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 10:19:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 10:19:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 10:19:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 10:19:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 10:19:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 10:19:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 10:19:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 10:19:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 10:19:24 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 10:19:12 CST 2018]; root of context hierarchy
2018-04-15 10:19:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:19:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:19:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:19:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 10:19:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:19:26 -

Using default security password: 85327672-b94e-46df-af6a-54c3ff6864d4

2018-04-15 10:19:26 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 10:19:26 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@294bb6ae, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4172c967, org.springframework.security.web.context.SecurityContextPersistenceFilter@169d5567, org.springframework.security.web.header.HeaderWriterFilter@71ce19ee, org.springframework.security.web.csrf.CsrfFilter@92de794, org.springframework.security.web.authentication.logout.LogoutFilter@6efc9d3f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c2ae7d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c19bb2a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71ac5723, org.springframework.security.web.session.SessionManagementFilter@7841c990, org.springframework.security.web.access.ExceptionTranslationFilter@78805df3]
2018-04-15 10:19:27 -Registering beans for JMX exposure on startup
2018-04-15 10:19:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 10:19:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 10:19:27 -Starting beans in phase 2147483647
2018-04-15 10:19:27 -Context refreshed
2018-04-15 10:19:27 -Found 1 custom documentation plugin(s)
2018-04-15 10:19:27 -Scanning for api listing references
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_1
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_1
2018-04-15 10:19:28 -Generating unique operation named: addUsingGET_1
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_2
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_2
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_2
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_3
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingGET_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPUT_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 10:19:28 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 10:19:28 -Generating unique operation named: addUsingGET_2
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_3
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_3
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_4
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_5
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingGET_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPUT_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 10:19:28 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 10:19:28 -Generating unique operation named: addUsingGET_3
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_4
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_4
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_6
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_3
2018-04-15 10:19:28 -Generating unique operation named: treeUsingGET_1
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_4
2018-04-15 10:19:28 -Generating unique operation named: addUsingGET_4
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_5
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_5
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_7
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_8
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_4
2018-04-15 10:19:28 -Generating unique operation named: updateUsingGET_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_5
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPUT_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 10:19:28 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 10:19:28 -Generating unique operation named: addUsingGET_5
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_6
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_6
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_5
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_6
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_6
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_7
2018-04-15 10:19:28 -Generating unique operation named: listUsingHEAD_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingPOST_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingPUT_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingPATCH_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingDELETE_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 10:19:28 -Generating unique operation named: listUsingTRACE_1
2018-04-15 10:19:28 -Generating unique operation named: addUsingGET_6
2018-04-15 10:19:28 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 10:19:28 -Generating unique operation named: editUsingGET_7
2018-04-15 10:19:28 -Generating unique operation named: listUsingGET_8
2018-04-15 10:19:28 -Generating unique operation named: removeUsingPOST_9
2018-04-15 10:19:28 -Generating unique operation named: saveUsingPOST_7
2018-04-15 10:19:28 -Generating unique operation named: updateUsingPOST_7
2018-04-15 10:19:28 -Starting Quartz Scheduler now
2018-04-15 10:19:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 10:19:28 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 10:19:28 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 10:19:29 -Using a shared selector for servlet write/read
2018-04-15 10:19:29 -Tomcat started on port(s): 80 (http)
2018-04-15 10:19:29 -Started BootdoApplication in 17.564 seconds (JVM running for 18.245)
2018-04-15 10:20:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 10:20:06 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 10:20:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2018-04-15 10:20:06 -Enabling session validation scheduler...
2018-04-15 10:20:06 -请求地址 : http://localhost/login;JSESSIONID=f86025bc-ed30-4877-914f-cd00551ecdf3
2018-04-15 10:20:06 -HTTP METHOD : GET
2018-04-15 10:20:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:20:06 -参数 : []
2018-04-15 10:20:06 -耗时 : 3
2018-04-15 10:20:06 -返回值 : login
2018-04-15 10:20:06 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 10:20:06 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 10:20:06 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 10:20:06 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 10:20:06 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 10:20:06 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 10:20:06 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 10:20:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 10:20:10 -==> Parameters: admin(String)
2018-04-15 10:20:10 -<==      Total: 1
2018-04-15 10:20:10 -请求地址 : http://localhost/login
2018-04-15 10:20:10 -HTTP METHOD : POST
2018-04-15 10:20:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 10:20:10 -参数 : [admin, 123456]
2018-04-15 10:20:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 10:20:10 -==> Parameters: admin(String)
2018-04-15 10:20:10 -<==      Total: 1
2018-04-15 10:20:10 -耗时 : 17
2018-04-15 10:20:10 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:20:10 -请求地址 : http://localhost/index
2018-04-15 10:20:10 -HTTP METHOD : GET
2018-04-15 10:20:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 10:20:10 -参数 : [{}]
2018-04-15 10:20:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 10:20:10 -==> Parameters: 1(Long)
2018-04-15 10:20:10 -<==      Total: 15
2018-04-15 10:20:10 -耗时 : 121
2018-04-15 10:20:10 -返回值 : index_v1
2018-04-15 10:20:11 -请求地址 : http://localhost/main
2018-04-15 10:20:11 -HTTP METHOD : GET
2018-04-15 10:20:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 10:20:11 -参数 : []
2018-04-15 10:20:11 -耗时 : 1
2018-04-15 10:20:11 -返回值 : main
2018-04-15 10:20:11 -请求地址 : http://localhost/main
2018-04-15 10:20:11 -HTTP METHOD : GET
2018-04-15 10:20:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 10:20:11 -参数 : []
2018-04-15 10:20:11 -耗时 : 1
2018-04-15 10:20:11 -返回值 : main
2018-04-15 10:20:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-15 10:20:33 -==> Parameters: 1(Long)
2018-04-15 10:20:33 -<==      Total: 40
2018-04-15 10:20:33 -请求地址 : http://localhost/system/order/
2018-04-15 10:20:33 -HTTP METHOD : GET
2018-04-15 10:20:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-15 10:20:33 -参数 : []
2018-04-15 10:20:33 -耗时 : 1
2018-04-15 10:20:33 -返回值 : system/order/order
2018-04-15 10:20:33 -请求地址 : http://localhost/system/order/list
2018-04-15 10:20:33 -HTTP METHOD : GET
2018-04-15 10:20:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-15 10:20:33 -参数 : [{limit=10, offset=0}]
2018-04-15 10:20:33 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description` from t_order order by id desc limit ?, ? 
2018-04-15 10:20:33 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:20:34 -<==      Total: 1
2018-04-15 10:20:34 -==>  Preparing: select count(*) from t_order 
2018-04-15 10:20:34 -==> Parameters: 
2018-04-15 10:20:34 -<==      Total: 1
2018-04-15 10:20:34 -耗时 : 406
2018-04-15 10:20:34 -返回值 : com.bootdo.common.utils.PageUtils@54ab5a34
2018-04-15 10:20:37 -请求地址 : http://localhost/system/good
2018-04-15 10:20:37 -HTTP METHOD : GET
2018-04-15 10:20:37 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-15 10:20:37 -参数 : []
2018-04-15 10:20:37 -耗时 : 1
2018-04-15 10:20:37 -返回值 : system/good/good
2018-04-15 10:20:37 -请求地址 : http://localhost/system/good/list
2018-04-15 10:20:37 -HTTP METHOD : GET
2018-04-15 10:20:37 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 10:20:37 -参数 : [{limit=10, offset=0}]
2018-04-15 10:20:37 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 10:20:37 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:20:37 -<==      Total: 0
2018-04-15 10:20:37 -==>  Preparing: select count(*) from t_good 
2018-04-15 10:20:37 -==> Parameters: 
2018-04-15 10:20:37 -<==      Total: 1
2018-04-15 10:20:37 -耗时 : 14
2018-04-15 10:20:37 -返回值 : com.bootdo.common.utils.PageUtils@70fb3a5b
2018-04-15 10:20:38 -请求地址 : http://localhost/system/good/add
2018-04-15 10:20:38 -HTTP METHOD : GET
2018-04-15 10:20:38 -CLASS_METHOD : com.bootdo.system.controller.GoodController.add
2018-04-15 10:20:38 -参数 : []
2018-04-15 10:20:38 -耗时 : 1
2018-04-15 10:20:38 -返回值 : system/good/add
2018-04-15 10:21:34 -请求地址 : http://localhost/system/good/save
2018-04-15 10:21:34 -HTTP METHOD : POST
2018-04-15 10:21:34 -CLASS_METHOD : com.bootdo.system.controller.GoodController.save
2018-04-15 10:21:34 -参数 : [com.bootdo.system.domain.GoodDO@62e4a889]
2018-04-15 10:21:34 -==>  Preparing: insert into t_good ( `title`, `type`, `number`, `price`, `weight`, `place`, `img`, `imgmore`, `create_by`, `create_date`, `remark`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 10:21:34 -==> Parameters: 苹果(String), 水果(String), 1(Long), 5.0(Double), 5.0(Double), 山东(String), null, null, null, null, 红苹果，有大又甜(String), null
2018-04-15 10:21:34 -<==    Updates: 1
2018-04-15 10:21:34 -耗时 : 257
2018-04-15 10:21:34 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:21:34 -请求地址 : http://localhost/system/good/list
2018-04-15 10:21:34 -HTTP METHOD : GET
2018-04-15 10:21:34 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 10:21:34 -参数 : [{limit=10, offset=0}]
2018-04-15 10:21:34 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 10:21:34 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:21:34 -<==      Total: 1
2018-04-15 10:21:34 -==>  Preparing: select count(*) from t_good 
2018-04-15 10:21:34 -==> Parameters: 
2018-04-15 10:21:34 -<==      Total: 1
2018-04-15 10:21:34 -耗时 : 5
2018-04-15 10:21:34 -返回值 : com.bootdo.common.utils.PageUtils@55479df3
2018-04-15 10:25:23 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 1128 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 10:25:23 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 10:25:23 -The following profiles are active: dev
2018-04-15 10:25:23 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 10:25:23 CST 2018]; root of context hierarchy
2018-04-15 10:25:23 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 10:25:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 10:25:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2240eea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$149a1d4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 10:25:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 10:25:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 10:25:26 -Tomcat initialized with port(s): 80 (http)
2018-04-15 10:25:26 -Starting service [Tomcat]
2018-04-15 10:25:26 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 10:25:26 -Initializing Spring embedded WebApplicationContext
2018-04-15 10:25:26 -Root WebApplicationContext: initialization completed in 3172 ms
2018-04-15 10:25:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 10:25:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 10:25:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 10:25:27 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 10:25:27 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 10:25:27 -Filter xssFilter was not registered (disabled)
2018-04-15 10:25:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 10:25:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 10:25:27 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 10:25:27 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 10:25:27 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 10:25:23 CST 2018]; root of context hierarchy
2018-04-15 10:25:27 -{dataSource-1} inited
2018-04-15 10:25:28 -Using default implementation for ThreadExecutor
2018-04-15 10:25:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 10:25:28 -Quartz Scheduler v.2.2.1 created.
2018-04-15 10:25:28 -RAMJobStore initialized.
2018-04-15 10:25:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 10:25:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 10:25:28 -Quartz scheduler version: 2.2.1
2018-04-15 10:25:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1df9f7c6
2018-04-15 10:25:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 10:25:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 10:25:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 10:25:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 10:25:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 10:25:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 10:25:29 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 10:25:29 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 10:25:29 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 10:25:29 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 10:25:29 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 10:25:29 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 10:25:29 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 10:25:29 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 10:25:29 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 10:25:29 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 10:25:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 10:25:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 10:25:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 10:25:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 10:25:29 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 10:25:29 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 10:25:29 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 10:25:29 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 10:25:29 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 10:25:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 10:25:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 10:25:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 10:25:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 10:25:29 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 10:25:29 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 10:25:29 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 10:25:29 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 10:25:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 10:25:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 10:25:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 10:25:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 10:25:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 10:25:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 10:25:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 10:25:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 10:25:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 10:25:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 10:25:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 10:25:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 10:25:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 10:25:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 10:25:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 10:25:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 10:25:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 10:25:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 10:25:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 10:25:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 10:25:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 10:25:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 10:25:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 10:25:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 10:25:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 10:25:30 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 10:25:23 CST 2018]; root of context hierarchy
2018-04-15 10:25:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:25:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:25:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:25:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 10:25:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 10:25:32 -

Using default security password: 9a3eb124-ef26-4d40-bcac-f5eb9b9997f3

2018-04-15 10:25:32 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 10:25:32 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@1ac71b87, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6094ad4, org.springframework.security.web.context.SecurityContextPersistenceFilter@c3114ea, org.springframework.security.web.header.HeaderWriterFilter@8d23cd8, org.springframework.security.web.csrf.CsrfFilter@5c28009f, org.springframework.security.web.authentication.logout.LogoutFilter@24ac87a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@255d4d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@752180c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3986b9e9, org.springframework.security.web.session.SessionManagementFilter@173b24c4, org.springframework.security.web.access.ExceptionTranslationFilter@138d978e]
2018-04-15 10:25:33 -Registering beans for JMX exposure on startup
2018-04-15 10:25:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 10:25:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 10:25:33 -Starting beans in phase 2147483647
2018-04-15 10:25:33 -Context refreshed
2018-04-15 10:25:33 -Found 1 custom documentation plugin(s)
2018-04-15 10:25:33 -Scanning for api listing references
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_1
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_1
2018-04-15 10:25:34 -Generating unique operation named: addUsingGET_1
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_2
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_2
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_2
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_3
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingGET_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPUT_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 10:25:34 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 10:25:34 -Generating unique operation named: addUsingGET_2
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_3
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_3
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_4
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_5
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingGET_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPUT_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 10:25:34 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 10:25:34 -Generating unique operation named: addUsingGET_3
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_4
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_4
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_6
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_3
2018-04-15 10:25:34 -Generating unique operation named: treeUsingGET_1
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_4
2018-04-15 10:25:34 -Generating unique operation named: addUsingGET_4
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_5
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_5
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_7
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_8
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_4
2018-04-15 10:25:34 -Generating unique operation named: updateUsingGET_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_5
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPUT_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 10:25:34 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 10:25:34 -Generating unique operation named: addUsingGET_5
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_6
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_6
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_5
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_6
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_6
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_7
2018-04-15 10:25:34 -Generating unique operation named: listUsingHEAD_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingPOST_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingPUT_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingPATCH_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingDELETE_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 10:25:34 -Generating unique operation named: listUsingTRACE_1
2018-04-15 10:25:34 -Generating unique operation named: addUsingGET_6
2018-04-15 10:25:34 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 10:25:34 -Generating unique operation named: editUsingGET_7
2018-04-15 10:25:34 -Generating unique operation named: listUsingGET_8
2018-04-15 10:25:34 -Generating unique operation named: removeUsingPOST_9
2018-04-15 10:25:34 -Generating unique operation named: saveUsingPOST_7
2018-04-15 10:25:34 -Generating unique operation named: updateUsingPOST_7
2018-04-15 10:25:34 -Starting Quartz Scheduler now
2018-04-15 10:25:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 10:25:34 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 10:25:34 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 10:25:34 -Using a shared selector for servlet write/read
2018-04-15 10:25:34 -Tomcat started on port(s): 80 (http)
2018-04-15 10:25:34 -Started BootdoApplication in 12.155 seconds (JVM running for 12.61)
2018-04-15 10:25:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 10:25:40 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 10:25:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-15 10:25:40 -Enabling session validation scheduler...
2018-04-15 10:25:40 -请求地址 : http://localhost/login;JSESSIONID=0a61bdc1-b8ff-4807-888d-31364c9415f5
2018-04-15 10:25:40 -HTTP METHOD : GET
2018-04-15 10:25:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:25:40 -参数 : []
2018-04-15 10:25:40 -耗时 : 2
2018-04-15 10:25:40 -返回值 : login
2018-04-15 10:25:40 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 10:25:40 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 10:25:40 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 10:25:40 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 10:25:40 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 10:25:40 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 10:25:40 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 10:25:41 -请求地址 : http://localhost/login
2018-04-15 10:25:41 -HTTP METHOD : GET
2018-04-15 10:25:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:25:41 -参数 : []
2018-04-15 10:25:41 -耗时 : 0
2018-04-15 10:25:41 -返回值 : login
2018-04-15 10:25:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 10:25:42 -==> Parameters: admin(String)
2018-04-15 10:25:42 -<==      Total: 1
2018-04-15 10:25:42 -请求地址 : http://localhost/login
2018-04-15 10:25:42 -HTTP METHOD : POST
2018-04-15 10:25:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 10:25:42 -参数 : [admin, 123456]
2018-04-15 10:25:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 10:25:42 -==> Parameters: admin(String)
2018-04-15 10:25:42 -<==      Total: 1
2018-04-15 10:25:42 -耗时 : 11
2018-04-15 10:25:42 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:25:42 -请求地址 : http://localhost/index
2018-04-15 10:25:42 -HTTP METHOD : GET
2018-04-15 10:25:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 10:25:42 -参数 : [{}]
2018-04-15 10:25:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 10:25:42 -==> Parameters: 1(Long)
2018-04-15 10:25:42 -<==      Total: 15
2018-04-15 10:25:42 -耗时 : 48
2018-04-15 10:25:42 -返回值 : index_v1
2018-04-15 10:25:43 -请求地址 : http://localhost/main
2018-04-15 10:25:43 -HTTP METHOD : GET
2018-04-15 10:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 10:25:43 -参数 : []
2018-04-15 10:25:43 -耗时 : 1
2018-04-15 10:25:43 -返回值 : main
2018-04-15 10:25:43 -请求地址 : http://localhost/main
2018-04-15 10:25:43 -HTTP METHOD : GET
2018-04-15 10:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 10:25:43 -参数 : []
2018-04-15 10:25:43 -耗时 : 0
2018-04-15 10:25:43 -返回值 : main
2018-04-15 10:25:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-15 10:25:48 -==> Parameters: 1(Long)
2018-04-15 10:25:48 -<==      Total: 40
2018-04-15 10:25:48 -请求地址 : http://localhost/system/good
2018-04-15 10:25:48 -HTTP METHOD : GET
2018-04-15 10:25:48 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-15 10:25:48 -参数 : []
2018-04-15 10:25:48 -耗时 : 1
2018-04-15 10:25:48 -返回值 : system/good/good
2018-04-15 10:25:48 -请求地址 : http://localhost/system/good/list
2018-04-15 10:25:48 -HTTP METHOD : GET
2018-04-15 10:25:48 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 10:25:48 -参数 : [{limit=10, offset=0}]
2018-04-15 10:25:48 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 10:25:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:25:48 -<==      Total: 1
2018-04-15 10:25:48 -==>  Preparing: select count(*) from t_good 
2018-04-15 10:25:48 -==> Parameters: 
2018-04-15 10:25:48 -<==      Total: 1
2018-04-15 10:25:48 -耗时 : 20
2018-04-15 10:25:48 -返回值 : com.bootdo.common.utils.PageUtils@46a004ec
2018-04-15 10:26:09 -请求地址 : http://localhost/system/good
2018-04-15 10:26:09 -HTTP METHOD : GET
2018-04-15 10:26:09 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-15 10:26:09 -参数 : []
2018-04-15 10:26:09 -耗时 : 1
2018-04-15 10:26:09 -返回值 : system/good/good
2018-04-15 10:26:10 -请求地址 : http://localhost/system/good/list
2018-04-15 10:26:10 -HTTP METHOD : GET
2018-04-15 10:26:10 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 10:26:10 -参数 : [{limit=10, offset=0}]
2018-04-15 10:26:10 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 10:26:10 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:26:10 -<==      Total: 1
2018-04-15 10:26:10 -==>  Preparing: select count(*) from t_good 
2018-04-15 10:26:10 -==> Parameters: 
2018-04-15 10:26:10 -<==      Total: 1
2018-04-15 10:26:10 -耗时 : 7
2018-04-15 10:26:10 -返回值 : com.bootdo.common.utils.PageUtils@453542bf
2018-04-15 10:26:14 -请求地址 : http://localhost/system/good/edit/1
2018-04-15 10:26:14 -HTTP METHOD : GET
2018-04-15 10:26:14 -CLASS_METHOD : com.bootdo.system.controller.GoodController.edit
2018-04-15 10:26:14 -参数 : [1, {}]
2018-04-15 10:26:14 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good where id = ? 
2018-04-15 10:26:14 -==> Parameters: 1(Long)
2018-04-15 10:26:14 -<==      Total: 1
2018-04-15 10:26:14 -耗时 : 5
2018-04-15 10:26:14 -返回值 : system/good/edit
2018-04-15 10:26:22 -请求地址 : http://localhost/system/good/add
2018-04-15 10:26:22 -HTTP METHOD : GET
2018-04-15 10:26:22 -CLASS_METHOD : com.bootdo.system.controller.GoodController.add
2018-04-15 10:26:22 -参数 : []
2018-04-15 10:26:22 -耗时 : 1
2018-04-15 10:26:22 -返回值 : system/good/add
2018-04-15 10:26:59 -请求地址 : http://localhost/system/good/save
2018-04-15 10:26:59 -HTTP METHOD : POST
2018-04-15 10:26:59 -CLASS_METHOD : com.bootdo.system.controller.GoodController.save
2018-04-15 10:26:59 -参数 : [com.bootdo.system.domain.GoodDO@7a4d324c]
2018-04-15 10:26:59 -==>  Preparing: insert into t_good ( `title`, `type`, `number`, `price`, `weight`, `place`, `img`, `imgmore`, `create_by`, `create_date`, `remark`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 10:26:59 -==> Parameters: 香蕉(String), 水果(String), 0002(String), 6.0(Double), 6.0(Double), 海南(String), null, null, null, 2018-04-15 10:26:59.551(Timestamp), 海南大香蕉(String), 0(Integer)
2018-04-15 10:26:59 -<==    Updates: 1
2018-04-15 10:26:59 -耗时 : 196
2018-04-15 10:26:59 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:26:59 -请求地址 : http://localhost/system/good/list
2018-04-15 10:26:59 -HTTP METHOD : GET
2018-04-15 10:26:59 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 10:26:59 -参数 : [{limit=10, offset=0}]
2018-04-15 10:26:59 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 10:26:59 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:26:59 -<==      Total: 2
2018-04-15 10:26:59 -==>  Preparing: select count(*) from t_good 
2018-04-15 10:26:59 -==> Parameters: 
2018-04-15 10:26:59 -<==      Total: 1
2018-04-15 10:26:59 -耗时 : 7
2018-04-15 10:26:59 -返回值 : com.bootdo.common.utils.PageUtils@62199926
2018-04-15 10:27:17 -请求地址 : http://localhost/system/car
2018-04-15 10:27:17 -HTTP METHOD : GET
2018-04-15 10:27:17 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-15 10:27:17 -参数 : []
2018-04-15 10:27:17 -耗时 : 0
2018-04-15 10:27:17 -返回值 : system/car/car
2018-04-15 10:27:18 -请求地址 : http://localhost/system/car/list
2018-04-15 10:27:18 -HTTP METHOD : GET
2018-04-15 10:27:18 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-15 10:27:18 -参数 : [{limit=10, offset=0}]
2018-04-15 10:27:18 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-15 10:27:18 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:27:18 -<==      Total: 0
2018-04-15 10:27:18 -==>  Preparing: select count(*) from t_car 
2018-04-15 10:27:18 -==> Parameters: 
2018-04-15 10:27:18 -<==      Total: 1
2018-04-15 10:27:18 -耗时 : 25
2018-04-15 10:27:18 -返回值 : com.bootdo.common.utils.PageUtils@2ac9ff87
2018-04-15 10:27:40 -请求地址 : http://localhost/system/car/add
2018-04-15 10:27:40 -HTTP METHOD : GET
2018-04-15 10:27:40 -CLASS_METHOD : com.bootdo.system.controller.CarController.add
2018-04-15 10:27:40 -参数 : []
2018-04-15 10:27:40 -耗时 : 0
2018-04-15 10:27:40 -返回值 : system/car/add
2018-04-15 10:29:35 -请求地址 : http://localhost/system/car/save
2018-04-15 10:29:35 -HTTP METHOD : POST
2018-04-15 10:29:35 -CLASS_METHOD : com.bootdo.system.controller.CarController.save
2018-04-15 10:29:35 -参数 : [com.bootdo.system.domain.CarDO@f45deac]
2018-04-15 10:29:35 -==>  Preparing: insert into t_car ( `type`, `name`, `no`, `driver_name`, `driver_telephone`, `driver_age`, `car_age`, `weight` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 10:29:35 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double)
2018-04-15 10:29:36 -<==    Updates: 1
2018-04-15 10:29:36 -耗时 : 185
2018-04-15 10:29:36 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:29:36 -请求地址 : http://localhost/system/car/list
2018-04-15 10:29:36 -HTTP METHOD : GET
2018-04-15 10:29:36 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-15 10:29:36 -参数 : [{limit=10, offset=0}]
2018-04-15 10:29:36 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-15 10:29:36 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:29:36 -<==      Total: 1
2018-04-15 10:29:36 -==>  Preparing: select count(*) from t_car 
2018-04-15 10:29:36 -==> Parameters: 
2018-04-15 10:29:36 -<==      Total: 1
2018-04-15 10:29:36 -耗时 : 6
2018-04-15 10:29:36 -返回值 : com.bootdo.common.utils.PageUtils@7b78c113
2018-04-15 10:29:40 -请求地址 : http://localhost/system/car/edit/1
2018-04-15 10:29:40 -HTTP METHOD : GET
2018-04-15 10:29:40 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-15 10:29:40 -参数 : [1, {}]
2018-04-15 10:29:40 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car where id = ? 
2018-04-15 10:29:40 -==> Parameters: 1(Long)
2018-04-15 10:29:40 -<==      Total: 1
2018-04-15 10:29:40 -耗时 : 8
2018-04-15 10:29:40 -返回值 : system/car/edit
2018-04-15 10:29:44 -请求地址 : http://localhost/system/car/update
2018-04-15 10:29:44 -HTTP METHOD : POST
2018-04-15 10:29:44 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-15 10:29:44 -参数 : [com.bootdo.system.domain.CarDO@7fd75e38]
2018-04-15 10:29:44 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ? where id = ? 
2018-04-15 10:29:44 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 1(Long)
2018-04-15 10:29:44 -<==    Updates: 1
2018-04-15 10:29:44 -耗时 : 89
2018-04-15 10:29:44 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:29:44 -请求地址 : http://localhost/system/car/list
2018-04-15 10:29:44 -HTTP METHOD : GET
2018-04-15 10:29:44 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-15 10:29:44 -参数 : [{limit=10, offset=0}]
2018-04-15 10:29:44 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-15 10:29:44 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:29:44 -<==      Total: 1
2018-04-15 10:29:44 -==>  Preparing: select count(*) from t_car 
2018-04-15 10:29:44 -==> Parameters: 
2018-04-15 10:29:44 -<==      Total: 1
2018-04-15 10:29:44 -耗时 : 6
2018-04-15 10:29:44 -返回值 : com.bootdo.common.utils.PageUtils@32e85b15
2018-04-15 10:29:47 -请求地址 : http://localhost/system/logistics
2018-04-15 10:29:47 -HTTP METHOD : GET
2018-04-15 10:29:47 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-15 10:29:47 -参数 : []
2018-04-15 10:29:47 -耗时 : 1
2018-04-15 10:29:47 -返回值 : system/logistics/logistics
2018-04-15 10:29:47 -请求地址 : http://localhost/system/logistics/list
2018-04-15 10:29:47 -HTTP METHOD : GET
2018-04-15 10:29:47 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-15 10:29:47 -参数 : [{limit=10, offset=0}]
2018-04-15 10:29:47 -==>  Preparing: select `id`,`no`,`good_id`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-15 10:29:47 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:29:47 -<==      Total: 0
2018-04-15 10:29:47 -==>  Preparing: select count(*) from t_logistics 
2018-04-15 10:29:47 -==> Parameters: 
2018-04-15 10:29:47 -<==      Total: 1
2018-04-15 10:29:47 -耗时 : 15
2018-04-15 10:29:47 -返回值 : com.bootdo.common.utils.PageUtils@560b3cea
2018-04-15 10:29:52 -请求地址 : http://localhost/system/logistics/add
2018-04-15 10:29:52 -HTTP METHOD : GET
2018-04-15 10:29:52 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-15 10:29:52 -参数 : []
2018-04-15 10:29:52 -耗时 : 1
2018-04-15 10:29:52 -返回值 : system/logistics/add
2018-04-15 10:30:02 -请求地址 : http://localhost/system/logistics/add
2018-04-15 10:30:02 -HTTP METHOD : GET
2018-04-15 10:30:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-15 10:30:02 -参数 : []
2018-04-15 10:30:02 -耗时 : 1
2018-04-15 10:30:02 -返回值 : system/logistics/add
2018-04-15 10:36:54 -请求地址 : http://localhost/index
2018-04-15 10:36:54 -HTTP METHOD : GET
2018-04-15 10:36:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 10:36:54 -参数 : [{}]
2018-04-15 10:36:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 10:36:54 -==> Parameters: 1(Long)
2018-04-15 10:36:54 -<==      Total: 15
2018-04-15 10:36:54 -耗时 : 10
2018-04-15 10:36:54 -返回值 : index_v1
2018-04-15 10:36:54 -请求地址 : http://localhost/main
2018-04-15 10:36:54 -HTTP METHOD : GET
2018-04-15 10:36:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 10:36:54 -参数 : []
2018-04-15 10:36:54 -耗时 : 1
2018-04-15 10:36:54 -返回值 : main
2018-04-15 10:36:54 -请求地址 : http://localhost/main
2018-04-15 10:36:54 -HTTP METHOD : GET
2018-04-15 10:36:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 10:36:54 -参数 : []
2018-04-15 10:36:54 -耗时 : 0
2018-04-15 10:36:54 -返回值 : main
2018-04-15 10:36:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-15 10:36:57 -==> Parameters: 1(Long)
2018-04-15 10:36:57 -<==      Total: 40
2018-04-15 10:36:57 -请求地址 : http://localhost/system/good
2018-04-15 10:36:57 -HTTP METHOD : GET
2018-04-15 10:36:57 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-15 10:36:57 -参数 : []
2018-04-15 10:36:57 -耗时 : 0
2018-04-15 10:36:57 -返回值 : system/good/good
2018-04-15 10:36:57 -请求地址 : http://localhost/system/good/list
2018-04-15 10:36:57 -HTTP METHOD : GET
2018-04-15 10:36:57 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 10:36:57 -参数 : [{limit=10, offset=0}]
2018-04-15 10:36:57 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 10:36:57 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:36:57 -<==      Total: 2
2018-04-15 10:36:57 -==>  Preparing: select count(*) from t_good 
2018-04-15 10:36:57 -==> Parameters: 
2018-04-15 10:36:57 -<==      Total: 1
2018-04-15 10:36:57 -耗时 : 5
2018-04-15 10:36:57 -返回值 : com.bootdo.common.utils.PageUtils@38f764f2
2018-04-15 10:37:00 -请求地址 : http://localhost/system/logistics
2018-04-15 10:37:00 -HTTP METHOD : GET
2018-04-15 10:37:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-15 10:37:00 -参数 : []
2018-04-15 10:37:00 -耗时 : 0
2018-04-15 10:37:00 -返回值 : system/logistics/logistics
2018-04-15 10:37:00 -请求地址 : http://localhost/system/logistics/list
2018-04-15 10:37:00 -HTTP METHOD : GET
2018-04-15 10:37:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-15 10:37:00 -参数 : [{limit=10, offset=0}]
2018-04-15 10:37:00 -==>  Preparing: select `id`,`no`,`good_id`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-15 10:37:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:37:00 -<==      Total: 0
2018-04-15 10:37:00 -==>  Preparing: select count(*) from t_logistics 
2018-04-15 10:37:00 -==> Parameters: 
2018-04-15 10:37:00 -<==      Total: 1
2018-04-15 10:37:00 -耗时 : 5
2018-04-15 10:37:00 -返回值 : com.bootdo.common.utils.PageUtils@25d52d93
2018-04-15 10:37:02 -请求地址 : http://localhost/system/logistics/add
2018-04-15 10:37:02 -HTTP METHOD : GET
2018-04-15 10:37:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-15 10:37:02 -参数 : []
2018-04-15 10:37:02 -耗时 : 0
2018-04-15 10:37:02 -返回值 : system/logistics/add
2018-04-15 10:38:52 -请求地址 : http://localhost/system/logistics/save
2018-04-15 10:38:52 -HTTP METHOD : POST
2018-04-15 10:38:52 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.save
2018-04-15 10:38:52 -参数 : [com.bootdo.system.domain.LogisticsDO@3ee81af1]
2018-04-15 10:38:52 -==>  Preparing: insert into t_logistics ( `no`, `good_id`, `send_name`, `send_address`, `send_telephone`, `send_province`, `send_city`, `send_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `arrive_province`, `arrive_city`, `arrive_date` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 10:38:52 -==> Parameters: 0312456(String), null, 张三(String), 广东省(String), 12345678901(String), 广东省(String), 广州(String), 2018-04-15 00:00:00.0(Timestamp), 李四(String), 山东青岛(String), 12345678901(String), 山东(String), 青岛(String), 2018-04-16 00:00:00.0(Timestamp)
2018-04-15 10:38:53 -<==    Updates: 1
2018-04-15 10:38:53 -耗时 : 238
2018-04-15 10:38:53 -返回值 : {msg=操作成功, code=0}
2018-04-15 10:38:53 -请求地址 : http://localhost/system/logistics/list
2018-04-15 10:38:53 -HTTP METHOD : GET
2018-04-15 10:38:53 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-15 10:38:53 -参数 : [{limit=10, offset=0}]
2018-04-15 10:38:53 -==>  Preparing: select `id`,`no`,`good_id`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-15 10:38:53 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:38:53 -<==      Total: 1
2018-04-15 10:38:53 -==>  Preparing: select count(*) from t_logistics 
2018-04-15 10:38:53 -==> Parameters: 
2018-04-15 10:38:53 -<==      Total: 1
2018-04-15 10:38:53 -耗时 : 6
2018-04-15 10:38:53 -返回值 : com.bootdo.common.utils.PageUtils@1856516b
2018-04-15 10:39:05 -请求地址 : http://localhost/system/logistics/edit/1
2018-04-15 10:39:05 -HTTP METHOD : GET
2018-04-15 10:39:05 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2018-04-15 10:39:05 -参数 : [1, {}]
2018-04-15 10:39:05 -==>  Preparing: select `id`,`no`,`good_id`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics where id = ? 
2018-04-15 10:39:05 -==> Parameters: 1(Long)
2018-04-15 10:39:05 -<==      Total: 1
2018-04-15 10:39:05 -耗时 : 5
2018-04-15 10:39:05 -返回值 : system/logistics/edit
2018-04-15 10:39:58 -请求地址 : http://localhost/system/order/
2018-04-15 10:39:58 -HTTP METHOD : GET
2018-04-15 10:39:58 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-15 10:39:58 -参数 : []
2018-04-15 10:39:58 -耗时 : 0
2018-04-15 10:39:58 -返回值 : system/order/order
2018-04-15 10:39:58 -请求地址 : http://localhost/system/order/list
2018-04-15 10:39:58 -HTTP METHOD : GET
2018-04-15 10:39:58 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-15 10:39:58 -参数 : [{limit=10, offset=0}]
2018-04-15 10:39:58 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description` from t_order order by id desc limit ?, ? 
2018-04-15 10:39:58 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:39:58 -<==      Total: 1
2018-04-15 10:39:58 -==>  Preparing: select count(*) from t_order 
2018-04-15 10:39:58 -==> Parameters: 
2018-04-15 10:39:58 -<==      Total: 1
2018-04-15 10:39:58 -耗时 : 14
2018-04-15 10:39:58 -返回值 : com.bootdo.common.utils.PageUtils@742ee8f6
2018-04-15 10:40:06 -请求地址 : http://localhost/system/order/edit/1
2018-04-15 10:40:06 -HTTP METHOD : GET
2018-04-15 10:40:06 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2018-04-15 10:40:06 -参数 : [1, {}]
2018-04-15 10:40:06 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description` from t_order where id = ? 
2018-04-15 10:40:06 -==> Parameters: 1(Long)
2018-04-15 10:40:06 -<==      Total: 1
2018-04-15 10:40:06 -耗时 : 4
2018-04-15 10:40:06 -返回值 : system/order/edit
2018-04-15 10:40:23 -请求地址 : http://localhost/system/car
2018-04-15 10:40:23 -HTTP METHOD : GET
2018-04-15 10:40:23 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-15 10:40:23 -参数 : []
2018-04-15 10:40:23 -耗时 : 0
2018-04-15 10:40:23 -返回值 : system/car/car
2018-04-15 10:40:23 -请求地址 : http://localhost/system/car/list
2018-04-15 10:40:23 -HTTP METHOD : GET
2018-04-15 10:40:23 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-15 10:40:23 -参数 : [{limit=10, offset=0}]
2018-04-15 10:40:23 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-15 10:40:23 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 10:40:23 -<==      Total: 1
2018-04-15 10:40:23 -==>  Preparing: select count(*) from t_car 
2018-04-15 10:40:23 -==> Parameters: 
2018-04-15 10:40:23 -<==      Total: 1
2018-04-15 10:40:23 -耗时 : 6
2018-04-15 10:40:23 -返回值 : com.bootdo.common.utils.PageUtils@75f6a06d
2018-04-15 10:47:48 -请求地址 : http://localhost/
2018-04-15 10:47:48 -HTTP METHOD : GET
2018-04-15 10:47:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-15 10:47:48 -参数 : [{}]
2018-04-15 10:47:48 -耗时 : 1
2018-04-15 10:47:48 -返回值 : redirect:/login
2018-04-15 10:47:48 -请求地址 : http://localhost/login
2018-04-15 10:47:48 -HTTP METHOD : GET
2018-04-15 10:47:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:47:48 -参数 : []
2018-04-15 10:47:48 -耗时 : 1
2018-04-15 10:47:48 -返回值 : login
2018-04-15 10:48:57 -请求地址 : http://localhost/login
2018-04-15 10:48:57 -HTTP METHOD : GET
2018-04-15 10:48:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:57 -参数 : []
2018-04-15 10:48:57 -耗时 : 0
2018-04-15 10:48:57 -返回值 : login
2018-04-15 10:48:57 -请求地址 : http://localhost/login;JSESSIONID=a859774d-4f6e-49c0-992b-e2549046ae38
2018-04-15 10:48:57 -HTTP METHOD : GET
2018-04-15 10:48:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:57 -参数 : []
2018-04-15 10:48:57 -耗时 : 0
2018-04-15 10:48:57 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 1
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 1
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 1
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 0
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 0
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 1
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 0
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:48:59 -请求地址 : http://localhost/login
2018-04-15 10:48:59 -HTTP METHOD : GET
2018-04-15 10:48:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:48:59 -参数 : []
2018-04-15 10:48:59 -耗时 : 0
2018-04-15 10:48:59 -返回值 : login
2018-04-15 10:49:10 -请求地址 : http://localhost/login
2018-04-15 10:49:10 -HTTP METHOD : GET
2018-04-15 10:49:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:10 -参数 : []
2018-04-15 10:49:10 -耗时 : 0
2018-04-15 10:49:10 -返回值 : login
2018-04-15 10:49:10 -请求地址 : http://localhost/login
2018-04-15 10:49:10 -HTTP METHOD : GET
2018-04-15 10:49:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:10 -参数 : []
2018-04-15 10:49:10 -耗时 : 0
2018-04-15 10:49:10 -返回值 : login
2018-04-15 10:49:11 -请求地址 : http://localhost/login
2018-04-15 10:49:11 -HTTP METHOD : GET
2018-04-15 10:49:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:11 -参数 : []
2018-04-15 10:49:11 -耗时 : 0
2018-04-15 10:49:11 -返回值 : login
2018-04-15 10:49:11 -请求地址 : http://localhost/login
2018-04-15 10:49:11 -HTTP METHOD : GET
2018-04-15 10:49:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:11 -参数 : []
2018-04-15 10:49:11 -耗时 : 0
2018-04-15 10:49:11 -返回值 : login
2018-04-15 10:49:11 -请求地址 : http://localhost/login
2018-04-15 10:49:11 -HTTP METHOD : GET
2018-04-15 10:49:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:11 -参数 : []
2018-04-15 10:49:11 -耗时 : 0
2018-04-15 10:49:11 -返回值 : login
2018-04-15 10:49:12 -请求地址 : http://localhost/login
2018-04-15 10:49:12 -HTTP METHOD : GET
2018-04-15 10:49:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:12 -参数 : []
2018-04-15 10:49:12 -耗时 : 0
2018-04-15 10:49:12 -返回值 : login
2018-04-15 10:49:12 -请求地址 : http://localhost/login
2018-04-15 10:49:12 -HTTP METHOD : GET
2018-04-15 10:49:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:12 -参数 : []
2018-04-15 10:49:12 -耗时 : 1
2018-04-15 10:49:12 -返回值 : login
2018-04-15 10:49:12 -请求地址 : http://localhost/login
2018-04-15 10:49:12 -HTTP METHOD : GET
2018-04-15 10:49:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:12 -参数 : []
2018-04-15 10:49:12 -耗时 : 1
2018-04-15 10:49:12 -返回值 : login
2018-04-15 10:49:12 -请求地址 : http://localhost/login
2018-04-15 10:49:12 -HTTP METHOD : GET
2018-04-15 10:49:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:12 -参数 : []
2018-04-15 10:49:12 -耗时 : 0
2018-04-15 10:49:12 -返回值 : login
2018-04-15 10:49:12 -请求地址 : http://localhost/login
2018-04-15 10:49:12 -HTTP METHOD : GET
2018-04-15 10:49:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:12 -参数 : []
2018-04-15 10:49:12 -耗时 : 1
2018-04-15 10:49:12 -返回值 : login
2018-04-15 10:49:39 -请求地址 : http://localhost/login
2018-04-15 10:49:39 -HTTP METHOD : GET
2018-04-15 10:49:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:39 -参数 : []
2018-04-15 10:49:39 -耗时 : 0
2018-04-15 10:49:39 -返回值 : login
2018-04-15 10:49:39 -请求地址 : http://localhost/login
2018-04-15 10:49:39 -HTTP METHOD : GET
2018-04-15 10:49:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:39 -参数 : []
2018-04-15 10:49:39 -耗时 : 0
2018-04-15 10:49:39 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 1
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 0
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 0
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 1
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 1
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 1
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 0
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 1
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 1
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:40 -请求地址 : http://localhost/login
2018-04-15 10:49:40 -HTTP METHOD : GET
2018-04-15 10:49:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:40 -参数 : []
2018-04-15 10:49:40 -耗时 : 0
2018-04-15 10:49:40 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 1
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 0
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 0
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 0
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 1
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 0
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 1
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 0
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 1
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:41 -请求地址 : http://localhost/login
2018-04-15 10:49:41 -HTTP METHOD : GET
2018-04-15 10:49:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:41 -参数 : []
2018-04-15 10:49:41 -耗时 : 1
2018-04-15 10:49:41 -返回值 : login
2018-04-15 10:49:42 -请求地址 : http://localhost/login
2018-04-15 10:49:42 -HTTP METHOD : GET
2018-04-15 10:49:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:42 -参数 : []
2018-04-15 10:49:42 -耗时 : 1
2018-04-15 10:49:42 -返回值 : login
2018-04-15 10:49:42 -请求地址 : http://localhost/login
2018-04-15 10:49:42 -HTTP METHOD : GET
2018-04-15 10:49:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:49:42 -参数 : []
2018-04-15 10:49:42 -耗时 : 1
2018-04-15 10:49:42 -返回值 : login
2018-04-15 10:50:01 -请求地址 : http://localhost/login
2018-04-15 10:50:01 -HTTP METHOD : GET
2018-04-15 10:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:50:01 -参数 : []
2018-04-15 10:50:01 -耗时 : 0
2018-04-15 10:50:01 -返回值 : login
2018-04-15 10:50:01 -请求地址 : http://localhost/login
2018-04-15 10:50:01 -HTTP METHOD : GET
2018-04-15 10:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:50:01 -参数 : []
2018-04-15 10:50:01 -耗时 : 1
2018-04-15 10:50:01 -返回值 : login
2018-04-15 10:53:48 -请求地址 : http://localhost/login
2018-04-15 10:53:48 -HTTP METHOD : GET
2018-04-15 10:53:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:53:48 -参数 : []
2018-04-15 10:53:48 -耗时 : 0
2018-04-15 10:53:48 -返回值 : login
2018-04-15 10:53:48 -请求地址 : http://localhost/login
2018-04-15 10:53:48 -HTTP METHOD : GET
2018-04-15 10:53:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:53:48 -参数 : []
2018-04-15 10:53:48 -耗时 : 0
2018-04-15 10:53:48 -返回值 : login
2018-04-15 10:54:10 -请求地址 : http://localhost/login
2018-04-15 10:54:10 -HTTP METHOD : GET
2018-04-15 10:54:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:10 -参数 : []
2018-04-15 10:54:10 -耗时 : 0
2018-04-15 10:54:10 -返回值 : login
2018-04-15 10:54:10 -请求地址 : http://localhost/login
2018-04-15 10:54:10 -HTTP METHOD : GET
2018-04-15 10:54:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:10 -参数 : []
2018-04-15 10:54:10 -耗时 : 0
2018-04-15 10:54:10 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 0
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 0
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 0
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 0
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 1
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 0
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 1
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:12 -请求地址 : http://localhost/login
2018-04-15 10:54:12 -HTTP METHOD : GET
2018-04-15 10:54:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:12 -参数 : []
2018-04-15 10:54:12 -耗时 : 0
2018-04-15 10:54:12 -返回值 : login
2018-04-15 10:54:30 -请求地址 : http://localhost/login
2018-04-15 10:54:30 -HTTP METHOD : GET
2018-04-15 10:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:30 -参数 : []
2018-04-15 10:54:30 -耗时 : 0
2018-04-15 10:54:30 -返回值 : login
2018-04-15 10:54:30 -请求地址 : http://localhost/login
2018-04-15 10:54:30 -HTTP METHOD : GET
2018-04-15 10:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:54:30 -参数 : []
2018-04-15 10:54:30 -耗时 : 0
2018-04-15 10:54:30 -返回值 : login
2018-04-15 10:55:13 -请求地址 : http://localhost/login
2018-04-15 10:55:13 -HTTP METHOD : GET
2018-04-15 10:55:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:55:13 -参数 : []
2018-04-15 10:55:13 -耗时 : 0
2018-04-15 10:55:13 -返回值 : login
2018-04-15 10:55:13 -请求地址 : http://localhost/login
2018-04-15 10:55:13 -HTTP METHOD : GET
2018-04-15 10:55:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:55:13 -参数 : []
2018-04-15 10:55:13 -耗时 : 1
2018-04-15 10:55:13 -返回值 : login
2018-04-15 10:55:24 -请求地址 : http://localhost/login
2018-04-15 10:55:24 -HTTP METHOD : GET
2018-04-15 10:55:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:55:24 -参数 : []
2018-04-15 10:55:24 -耗时 : 0
2018-04-15 10:55:24 -返回值 : login
2018-04-15 10:55:24 -请求地址 : http://localhost/login
2018-04-15 10:55:24 -HTTP METHOD : GET
2018-04-15 10:55:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:55:24 -参数 : []
2018-04-15 10:55:24 -耗时 : 1
2018-04-15 10:55:24 -返回值 : login
2018-04-15 10:55:44 -请求地址 : http://localhost/login
2018-04-15 10:55:44 -HTTP METHOD : GET
2018-04-15 10:55:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:55:44 -参数 : []
2018-04-15 10:55:44 -耗时 : 0
2018-04-15 10:55:44 -返回值 : login
2018-04-15 10:55:44 -请求地址 : http://localhost/login
2018-04-15 10:55:44 -HTTP METHOD : GET
2018-04-15 10:55:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 10:55:44 -参数 : []
2018-04-15 10:55:44 -耗时 : 0
2018-04-15 10:55:44 -返回值 : login
2018-04-15 11:00:43 -请求地址 : http://localhost/login
2018-04-15 11:00:43 -HTTP METHOD : GET
2018-04-15 11:00:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:00:43 -参数 : []
2018-04-15 11:00:43 -耗时 : 0
2018-04-15 11:00:43 -返回值 : login
2018-04-15 11:00:43 -请求地址 : http://localhost/login
2018-04-15 11:00:43 -HTTP METHOD : GET
2018-04-15 11:00:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:00:43 -参数 : []
2018-04-15 11:00:43 -耗时 : 1
2018-04-15 11:00:43 -返回值 : login
2018-04-15 11:00:44 -请求地址 : http://localhost/login
2018-04-15 11:00:44 -HTTP METHOD : GET
2018-04-15 11:00:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:00:44 -参数 : []
2018-04-15 11:00:44 -耗时 : 0
2018-04-15 11:00:44 -返回值 : login
2018-04-15 11:00:44 -请求地址 : http://localhost/login
2018-04-15 11:00:44 -HTTP METHOD : GET
2018-04-15 11:00:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:00:44 -参数 : []
2018-04-15 11:00:44 -耗时 : 1
2018-04-15 11:00:44 -返回值 : login
2018-04-15 11:00:46 -请求地址 : http://localhost/login
2018-04-15 11:00:46 -HTTP METHOD : GET
2018-04-15 11:00:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:00:46 -参数 : []
2018-04-15 11:00:46 -耗时 : 0
2018-04-15 11:00:46 -返回值 : login
2018-04-15 11:00:46 -请求地址 : http://localhost/login
2018-04-15 11:00:46 -HTTP METHOD : GET
2018-04-15 11:00:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:00:46 -参数 : []
2018-04-15 11:00:46 -耗时 : 1
2018-04-15 11:00:46 -返回值 : login
2018-04-15 11:04:38 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 7448 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:04:38 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:04:38 -The following profiles are active: dev
2018-04-15 11:04:38 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:04:38 CST 2018]; root of context hierarchy
2018-04-15 11:04:38 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:04:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:04:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$105c4ea7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2b57d4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:04:40 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:04:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:04:41 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:04:41 -Starting service [Tomcat]
2018-04-15 11:04:41 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:04:41 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:04:41 -Root WebApplicationContext: initialization completed in 3174 ms
2018-04-15 11:04:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:04:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:04:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:04:42 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:04:42 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:04:42 -Filter xssFilter was not registered (disabled)
2018-04-15 11:04:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:04:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:04:42 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:04:42 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:04:42 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:04:38 CST 2018]; root of context hierarchy
2018-04-15 11:04:42 -{dataSource-1} inited
2018-04-15 11:04:43 -Using default implementation for ThreadExecutor
2018-04-15 11:04:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:04:43 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:04:43 -RAMJobStore initialized.
2018-04-15 11:04:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:04:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:04:43 -Quartz scheduler version: 2.2.1
2018-04-15 11:04:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1e482ecd
2018-04-15 11:04:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:04:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:04:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:04:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:04:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:04:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:04:44 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:04:44 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:04:44 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:04:44 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:04:44 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:04:44 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:04:44 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:04:44 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:04:44 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:04:44 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:04:44 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:04:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:04:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:04:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:04:44 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:04:44 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:04:44 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:04:44 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:04:44 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:04:44 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:04:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:04:44 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:04:44 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:04:44 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:04:44 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:04:44 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:04:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:04:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:04:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:04:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:04:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:04:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:04:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:04:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:04:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:04:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:04:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:04:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:04:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:04:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:04:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:04:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:04:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:04:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:04:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:04:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:04:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:04:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:04:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:04:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:04:45 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:04:38 CST 2018]; root of context hierarchy
2018-04-15 11:04:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:04:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:04:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:04:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:04:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:04:47 -

Using default security password: 5507aef2-69ab-4d85-95f9-77703644b867

2018-04-15 11:04:47 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:04:47 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@31e84f10, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c4455b4, org.springframework.security.web.context.SecurityContextPersistenceFilter@59c00722, org.springframework.security.web.header.HeaderWriterFilter@514f2020, org.springframework.security.web.csrf.CsrfFilter@38394e76, org.springframework.security.web.authentication.logout.LogoutFilter@748aa7dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9734cae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@684430c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@747f0f34, org.springframework.security.web.session.SessionManagementFilter@aade5a2, org.springframework.security.web.access.ExceptionTranslationFilter@52ba21e4]
2018-04-15 11:04:48 -Registering beans for JMX exposure on startup
2018-04-15 11:04:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:04:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:04:48 -Starting beans in phase 2147483647
2018-04-15 11:04:48 -Context refreshed
2018-04-15 11:04:48 -Found 1 custom documentation plugin(s)
2018-04-15 11:04:48 -Scanning for api listing references
2018-04-15 11:04:48 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:04:48 -Generating unique operation named: editUsingGET_1
2018-04-15 11:04:48 -Generating unique operation named: listUsingGET_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:04:48 -Generating unique operation named: addUsingGET_1
2018-04-15 11:04:48 -Generating unique operation named: editUsingGET_2
2018-04-15 11:04:48 -Generating unique operation named: listUsingGET_2
2018-04-15 11:04:48 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:04:48 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:04:48 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:04:48 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:04:48 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:04:49 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:04:49 -Generating unique operation named: addUsingGET_2
2018-04-15 11:04:49 -Generating unique operation named: editUsingGET_3
2018-04-15 11:04:49 -Generating unique operation named: listUsingGET_3
2018-04-15 11:04:49 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:04:49 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:04:49 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:04:49 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:04:49 -Generating unique operation named: addUsingGET_3
2018-04-15 11:04:49 -Generating unique operation named: editUsingGET_4
2018-04-15 11:04:49 -Generating unique operation named: listUsingGET_4
2018-04-15 11:04:49 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:04:49 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:04:49 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:04:49 -Generating unique operation named: addUsingGET_4
2018-04-15 11:04:49 -Generating unique operation named: editUsingGET_5
2018-04-15 11:04:49 -Generating unique operation named: listUsingGET_5
2018-04-15 11:04:49 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:04:49 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:04:49 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:04:49 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:04:49 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:04:49 -Generating unique operation named: addUsingGET_5
2018-04-15 11:04:49 -Generating unique operation named: editUsingGET_6
2018-04-15 11:04:49 -Generating unique operation named: listUsingGET_6
2018-04-15 11:04:49 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:04:49 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:04:49 -Generating unique operation named: listUsingGET_7
2018-04-15 11:04:49 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:04:49 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:04:49 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:04:49 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:04:49 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:04:49 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:04:49 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:04:49 -Generating unique operation named: addUsingGET_6
2018-04-15 11:04:49 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:04:49 -Generating unique operation named: editUsingGET_7
2018-04-15 11:04:49 -Generating unique operation named: listUsingGET_8
2018-04-15 11:04:49 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:04:49 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:04:49 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:04:49 -Starting Quartz Scheduler now
2018-04-15 11:04:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:04:49 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:04:49 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:04:49 -Using a shared selector for servlet write/read
2018-04-15 11:04:49 -Tomcat started on port(s): 80 (http)
2018-04-15 11:04:49 -Started BootdoApplication in 12.011 seconds (JVM running for 12.49)
2018-04-15 11:04:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:04:58 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:04:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-04-15 11:04:58 -Enabling session validation scheduler...
2018-04-15 11:04:58 -请求地址 : http://localhost/login
2018-04-15 11:04:58 -HTTP METHOD : GET
2018-04-15 11:04:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:04:58 -参数 : []
2018-04-15 11:04:58 -耗时 : 2
2018-04-15 11:04:58 -返回值 : login
2018-04-15 11:04:58 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:04:58 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:04:58 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:04:58 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:04:58 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:04:58 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:04:58 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:04:58 -请求地址 : http://localhost/login;JSESSIONID=55773beb-aa1f-48fd-afa2-5d003fcdbc86
2018-04-15 11:04:58 -HTTP METHOD : GET
2018-04-15 11:04:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:04:58 -参数 : []
2018-04-15 11:04:58 -耗时 : 0
2018-04-15 11:04:58 -返回值 : login
2018-04-15 11:05:00 -请求地址 : http://localhost/login
2018-04-15 11:05:00 -HTTP METHOD : GET
2018-04-15 11:05:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:05:00 -参数 : []
2018-04-15 11:05:00 -耗时 : 1
2018-04-15 11:05:00 -返回值 : login
2018-04-15 11:05:00 -请求地址 : http://localhost/login
2018-04-15 11:05:00 -HTTP METHOD : GET
2018-04-15 11:05:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:05:00 -参数 : []
2018-04-15 11:05:00 -耗时 : 0
2018-04-15 11:05:00 -返回值 : login
2018-04-15 11:09:05 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 7256 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:09:05 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:09:05 -The following profiles are active: dev
2018-04-15 11:09:05 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:09:05 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:09:05 CST 2018]; root of context hierarchy
2018-04-15 11:09:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:09:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3c187b87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2e71aa2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:09:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:09:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:09:08 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:09:08 -Starting service [Tomcat]
2018-04-15 11:09:08 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:09:08 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:09:08 -Root WebApplicationContext: initialization completed in 3149 ms
2018-04-15 11:09:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:09:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:09:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:09:09 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:09:09 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:09:09 -Filter xssFilter was not registered (disabled)
2018-04-15 11:09:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:09:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:09:09 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:09:09 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:09:09 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:09:05 CST 2018]; root of context hierarchy
2018-04-15 11:09:09 -{dataSource-1} inited
2018-04-15 11:09:10 -Using default implementation for ThreadExecutor
2018-04-15 11:09:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:09:10 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:09:10 -RAMJobStore initialized.
2018-04-15 11:09:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:09:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:09:10 -Quartz scheduler version: 2.2.1
2018-04-15 11:09:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@57b130f6
2018-04-15 11:09:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:09:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:09:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:09:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:09:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:09:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:09:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:09:11 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:09:11 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:09:11 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:09:11 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:09:11 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:11 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:09:11 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:09:11 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:09:11 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:09:11 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:09:11 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:09:11 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:09:11 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:11 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:09:11 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:09:11 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:09:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:09:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:09:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:09:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:09:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:09:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:09:11 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:09:11 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:09:11 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:09:11 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:09:11 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:11 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:09:11 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:09:11 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:09:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:09:12 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:09:12 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:09:12 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:12 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:09:12 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:09:12 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:09:12 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:09:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:09:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:09:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:09:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:09:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:09:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:09:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:09:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:09:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:09:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:09:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:09:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:09:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:09:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:09:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:09:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:09:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:09:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:09:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:09:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:09:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:09:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:09:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:09:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:09:13 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:09:05 CST 2018]; root of context hierarchy
2018-04-15 11:09:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:09:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:09:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:09:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:09:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:09:14 -

Using default security password: afb1d959-109e-4d2c-b9f5-1e3d653c79ad

2018-04-15 11:09:14 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:09:15 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@29bf90fc, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e22d6bf, org.springframework.security.web.context.SecurityContextPersistenceFilter@a20898c, org.springframework.security.web.header.HeaderWriterFilter@351d726c, org.springframework.security.web.csrf.CsrfFilter@4946dfde, org.springframework.security.web.authentication.logout.LogoutFilter@6f7a65e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fdabb3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d9cf71d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@32121140, org.springframework.security.web.session.SessionManagementFilter@7c50709a, org.springframework.security.web.access.ExceptionTranslationFilter@7c523bdd]
2018-04-15 11:09:15 -Registering beans for JMX exposure on startup
2018-04-15 11:09:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:09:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:09:15 -Starting beans in phase 2147483647
2018-04-15 11:09:15 -Context refreshed
2018-04-15 11:09:15 -Found 1 custom documentation plugin(s)
2018-04-15 11:09:15 -Scanning for api listing references
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:09:16 -Generating unique operation named: addUsingGET_1
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_2
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_2
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:09:16 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:09:16 -Generating unique operation named: addUsingGET_2
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_3
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_3
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:09:16 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:09:16 -Generating unique operation named: addUsingGET_3
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_4
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_4
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:09:16 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:09:16 -Generating unique operation named: addUsingGET_4
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_5
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_5
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:09:16 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:09:16 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:09:16 -Generating unique operation named: addUsingGET_5
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_6
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_6
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_7
2018-04-15 11:09:16 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:09:16 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:09:16 -Generating unique operation named: addUsingGET_6
2018-04-15 11:09:16 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:09:16 -Generating unique operation named: editUsingGET_7
2018-04-15 11:09:16 -Generating unique operation named: listUsingGET_8
2018-04-15 11:09:16 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:09:16 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:09:16 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:09:16 -Generating unique operation named: userUsingGET_1
2018-04-15 11:09:16 -Starting Quartz Scheduler now
2018-04-15 11:09:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:09:16 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:09:16 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:09:16 -Using a shared selector for servlet write/read
2018-04-15 11:09:16 -Tomcat started on port(s): 80 (http)
2018-04-15 11:09:16 -Started BootdoApplication in 12.219 seconds (JVM running for 12.691)
2018-04-15 11:09:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:09:20 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:09:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-04-15 11:09:21 -Enabling session validation scheduler...
2018-04-15 11:09:21 -请求地址 : http://localhost/login
2018-04-15 11:09:21 -HTTP METHOD : GET
2018-04-15 11:09:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:09:21 -参数 : []
2018-04-15 11:09:21 -耗时 : 2
2018-04-15 11:09:21 -返回值 : login
2018-04-15 11:09:21 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:09:21 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:09:21 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:09:21 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:09:21 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:09:21 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:09:21 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:09:21 -请求地址 : http://localhost/login;JSESSIONID=7527bd18-5645-4815-bc72-8e475cfe5097
2018-04-15 11:09:21 -HTTP METHOD : GET
2018-04-15 11:09:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:09:21 -参数 : []
2018-04-15 11:09:21 -耗时 : 0
2018-04-15 11:09:21 -返回值 : login
2018-04-15 11:09:23 -请求地址 : http://localhost/login
2018-04-15 11:09:23 -HTTP METHOD : GET
2018-04-15 11:09:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:09:23 -参数 : []
2018-04-15 11:09:23 -耗时 : 1
2018-04-15 11:09:23 -返回值 : login
2018-04-15 11:09:23 -请求地址 : http://localhost/login
2018-04-15 11:09:23 -HTTP METHOD : GET
2018-04-15 11:09:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:09:23 -参数 : []
2018-04-15 11:09:23 -耗时 : 0
2018-04-15 11:09:23 -返回值 : login
2018-04-15 11:09:39 -请求地址 : http://localhost/login
2018-04-15 11:09:39 -HTTP METHOD : GET
2018-04-15 11:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:09:39 -参数 : []
2018-04-15 11:09:39 -耗时 : 0
2018-04-15 11:09:39 -返回值 : login
2018-04-15 11:09:39 -请求地址 : http://localhost/login
2018-04-15 11:09:39 -HTTP METHOD : GET
2018-04-15 11:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:09:39 -参数 : []
2018-04-15 11:09:39 -耗时 : 0
2018-04-15 11:09:39 -返回值 : login
2018-04-15 11:11:52 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 7496 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:11:52 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:11:52 -The following profiles are active: dev
2018-04-15 11:11:52 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:11:52 CST 2018]; root of context hierarchy
2018-04-15 11:11:52 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:11:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:11:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2240eea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$149a1d4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:11:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:11:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:11:55 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:11:55 -Starting service [Tomcat]
2018-04-15 11:11:55 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:11:55 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:11:55 -Root WebApplicationContext: initialization completed in 3301 ms
2018-04-15 11:11:56 -Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'shiroFilterFactoryBean': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: There is no filter with name 'register' to apply to chain [/register] in the pool of available Filters.  Ensure a filter with that name/path has first been registered with the addFilter method(s).
2018-04-15 11:11:56 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat
2018-04-15 11:11:56 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-15 11:11:56 -Application startup failed
org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:14)
Caused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:123)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.<init>(TomcatEmbeddedServletContainer.java:84)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: There is no filter with name 'register' to apply to chain [/register] in the pool of available Filters.  Ensure a filter with that name/path has first been registered with the addFilter method(s).
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:234)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:182)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:177)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:159)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:80)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.getServletContextInitializerBeans(EmbeddedWebApplicationContext.java:241)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.selfInitialize(EmbeddedWebApplicationContext.java:228)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.access$000(EmbeddedWebApplicationContext.java:89)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext$1.onStartup(EmbeddedWebApplicationContext.java:213)
	at org.springframework.boot.context.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:55)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5196)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalArgumentException: There is no filter with name 'register' to apply to chain [/register] in the pool of available Filters.  Ensure a filter with that name/path has first been registered with the addFilter method(s).
	at org.apache.shiro.web.filter.mgt.DefaultFilterChainManager.addToChain(DefaultFilterChainManager.java:265)
	at org.apache.shiro.web.filter.mgt.DefaultFilterChainManager.createChain(DefaultFilterChainManager.java:148)
	at org.apache.shiro.spring.web.ShiroFilterFactoryBean.createFilterChainManager(ShiroFilterFactoryBean.java:397)
	at org.apache.shiro.spring.web.ShiroFilterFactoryBean.createInstance(ShiroFilterFactoryBean.java:437)
	at org.apache.shiro.spring.web.ShiroFilterFactoryBean.getObject(ShiroFilterFactoryBean.java:343)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 22 common frames omitted
2018-04-15 11:12:32 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 6768 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:12:32 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:12:32 -The following profiles are active: dev
2018-04-15 11:12:32 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:12:32 CST 2018]; root of context hierarchy
2018-04-15 11:12:32 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:12:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:12:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$58ca567c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4b238523] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:12:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:12:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:12:35 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:12:35 -Starting service [Tomcat]
2018-04-15 11:12:35 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:12:35 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:12:35 -Root WebApplicationContext: initialization completed in 3394 ms
2018-04-15 11:12:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:12:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:12:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:12:36 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:12:36 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:12:36 -Filter xssFilter was not registered (disabled)
2018-04-15 11:12:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:12:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:12:36 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:12:36 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:12:36 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:12:32 CST 2018]; root of context hierarchy
2018-04-15 11:12:37 -{dataSource-1} inited
2018-04-15 11:12:37 -Using default implementation for ThreadExecutor
2018-04-15 11:12:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:12:37 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:12:37 -RAMJobStore initialized.
2018-04-15 11:12:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:12:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:12:37 -Quartz scheduler version: 2.2.1
2018-04-15 11:12:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@52d59507
2018-04-15 11:12:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:12:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:12:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:12:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:12:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:12:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:12:39 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:12:39 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:12:39 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:12:39 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:12:39 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:12:39 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:12:39 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:12:39 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:12:39 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:12:39 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:12:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:12:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:12:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:12:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:12:39 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:12:39 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:12:39 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:12:39 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:12:39 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:12:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:12:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:12:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:12:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:12:39 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:12:39 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:12:39 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:12:39 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:12:39 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:12:39 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:12:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:12:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:12:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:12:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:12:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:12:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:12:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:12:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:12:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:12:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:12:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:12:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:12:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:12:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:12:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:12:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:12:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:12:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:12:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:12:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:12:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:12:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:12:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:12:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:12:40 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:12:32 CST 2018]; root of context hierarchy
2018-04-15 11:12:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:12:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:12:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:12:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:12:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:12:42 -

Using default security password: dee6d89a-8480-4b39-ae34-c75808a460ea

2018-04-15 11:12:42 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:12:42 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@513bec8c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@693ed09d, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b468710, org.springframework.security.web.header.HeaderWriterFilter@4028aab2, org.springframework.security.web.csrf.CsrfFilter@1d7d968c, org.springframework.security.web.authentication.logout.LogoutFilter@7683d632, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8de4206, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@576a8b00, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fc8163, org.springframework.security.web.session.SessionManagementFilter@99af41d, org.springframework.security.web.access.ExceptionTranslationFilter@17b387ef]
2018-04-15 11:12:43 -Registering beans for JMX exposure on startup
2018-04-15 11:12:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:12:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:12:43 -Starting beans in phase 2147483647
2018-04-15 11:12:43 -Context refreshed
2018-04-15 11:12:43 -Found 1 custom documentation plugin(s)
2018-04-15 11:12:43 -Scanning for api listing references
2018-04-15 11:12:43 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:12:43 -Generating unique operation named: editUsingGET_1
2018-04-15 11:12:43 -Generating unique operation named: listUsingGET_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:12:43 -Generating unique operation named: addUsingGET_1
2018-04-15 11:12:43 -Generating unique operation named: editUsingGET_2
2018-04-15 11:12:43 -Generating unique operation named: listUsingGET_2
2018-04-15 11:12:43 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:12:43 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:12:43 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:12:43 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:12:43 -Generating unique operation named: addUsingGET_2
2018-04-15 11:12:43 -Generating unique operation named: editUsingGET_3
2018-04-15 11:12:43 -Generating unique operation named: listUsingGET_3
2018-04-15 11:12:43 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:12:43 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:12:43 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:12:43 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:12:43 -Generating unique operation named: addUsingGET_3
2018-04-15 11:12:43 -Generating unique operation named: editUsingGET_4
2018-04-15 11:12:43 -Generating unique operation named: listUsingGET_4
2018-04-15 11:12:43 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:12:43 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:12:43 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:12:43 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:12:44 -Generating unique operation named: addUsingGET_4
2018-04-15 11:12:44 -Generating unique operation named: editUsingGET_5
2018-04-15 11:12:44 -Generating unique operation named: listUsingGET_5
2018-04-15 11:12:44 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:12:44 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:12:44 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:12:44 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:12:44 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:12:44 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:12:44 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:12:44 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:12:44 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:12:44 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:12:44 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:12:44 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:12:44 -Generating unique operation named: addUsingGET_5
2018-04-15 11:12:44 -Generating unique operation named: editUsingGET_6
2018-04-15 11:12:44 -Generating unique operation named: listUsingGET_6
2018-04-15 11:12:44 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:12:44 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:12:44 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:12:44 -Generating unique operation named: listUsingGET_7
2018-04-15 11:12:44 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:12:44 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:12:44 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:12:44 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:12:44 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:12:44 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:12:44 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:12:44 -Generating unique operation named: addUsingGET_6
2018-04-15 11:12:44 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:12:44 -Generating unique operation named: editUsingGET_7
2018-04-15 11:12:44 -Generating unique operation named: listUsingGET_8
2018-04-15 11:12:44 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:12:44 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:12:44 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:12:44 -Generating unique operation named: userUsingGET_1
2018-04-15 11:12:44 -Starting Quartz Scheduler now
2018-04-15 11:12:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:12:44 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:12:44 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:12:44 -Using a shared selector for servlet write/read
2018-04-15 11:12:44 -Tomcat started on port(s): 80 (http)
2018-04-15 11:12:44 -Started BootdoApplication in 12.642 seconds (JVM running for 13.102)
2018-04-15 11:12:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:12:48 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:12:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-04-15 11:12:48 -Enabling session validation scheduler...
2018-04-15 11:12:48 -请求地址 : http://localhost/login
2018-04-15 11:12:48 -HTTP METHOD : GET
2018-04-15 11:12:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:48 -参数 : []
2018-04-15 11:12:48 -耗时 : 2
2018-04-15 11:12:48 -返回值 : login
2018-04-15 11:12:48 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:12:48 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:12:48 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:12:48 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:12:48 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:12:48 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:12:48 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:12:48 -请求地址 : http://localhost/login;JSESSIONID=4aa2ec18-6063-42fd-8632-6f0c1f85e88f
2018-04-15 11:12:48 -HTTP METHOD : GET
2018-04-15 11:12:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:48 -参数 : []
2018-04-15 11:12:48 -耗时 : 0
2018-04-15 11:12:48 -返回值 : login
2018-04-15 11:12:48 -请求地址 : http://localhost/login
2018-04-15 11:12:48 -HTTP METHOD : GET
2018-04-15 11:12:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:48 -参数 : []
2018-04-15 11:12:48 -耗时 : 1
2018-04-15 11:12:48 -返回值 : login
2018-04-15 11:12:48 -请求地址 : http://localhost/login
2018-04-15 11:12:48 -HTTP METHOD : GET
2018-04-15 11:12:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:48 -参数 : []
2018-04-15 11:12:48 -耗时 : 0
2018-04-15 11:12:48 -返回值 : login
2018-04-15 11:12:49 -请求地址 : http://localhost/login
2018-04-15 11:12:49 -HTTP METHOD : GET
2018-04-15 11:12:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:49 -参数 : []
2018-04-15 11:12:49 -耗时 : 0
2018-04-15 11:12:49 -返回值 : login
2018-04-15 11:12:49 -请求地址 : http://localhost/login
2018-04-15 11:12:49 -HTTP METHOD : GET
2018-04-15 11:12:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:49 -参数 : []
2018-04-15 11:12:49 -耗时 : 1
2018-04-15 11:12:49 -返回值 : login
2018-04-15 11:12:49 -请求地址 : http://localhost/login
2018-04-15 11:12:49 -HTTP METHOD : GET
2018-04-15 11:12:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:49 -参数 : []
2018-04-15 11:12:49 -耗时 : 0
2018-04-15 11:12:49 -返回值 : login
2018-04-15 11:12:49 -请求地址 : http://localhost/login
2018-04-15 11:12:49 -HTTP METHOD : GET
2018-04-15 11:12:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:49 -参数 : []
2018-04-15 11:12:49 -耗时 : 1
2018-04-15 11:12:49 -返回值 : login
2018-04-15 11:12:50 -请求地址 : http://localhost/login
2018-04-15 11:12:50 -HTTP METHOD : GET
2018-04-15 11:12:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:50 -参数 : []
2018-04-15 11:12:50 -耗时 : 0
2018-04-15 11:12:50 -返回值 : login
2018-04-15 11:12:50 -请求地址 : http://localhost/login
2018-04-15 11:12:50 -HTTP METHOD : GET
2018-04-15 11:12:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:50 -参数 : []
2018-04-15 11:12:50 -耗时 : 0
2018-04-15 11:12:50 -返回值 : login
2018-04-15 11:12:55 -请求地址 : http://localhost/login
2018-04-15 11:12:55 -HTTP METHOD : GET
2018-04-15 11:12:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:55 -参数 : []
2018-04-15 11:12:55 -耗时 : 1
2018-04-15 11:12:55 -返回值 : login
2018-04-15 11:12:56 -请求地址 : http://localhost/login
2018-04-15 11:12:56 -HTTP METHOD : GET
2018-04-15 11:12:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:12:56 -参数 : []
2018-04-15 11:12:56 -耗时 : 1
2018-04-15 11:12:56 -返回值 : login
2018-04-15 11:13:00 -请求地址 : http://localhost/login
2018-04-15 11:13:00 -HTTP METHOD : GET
2018-04-15 11:13:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:13:00 -参数 : []
2018-04-15 11:13:00 -耗时 : 0
2018-04-15 11:13:00 -返回值 : login
2018-04-15 11:13:01 -请求地址 : http://localhost/login
2018-04-15 11:13:01 -HTTP METHOD : GET
2018-04-15 11:13:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:13:01 -参数 : []
2018-04-15 11:13:01 -耗时 : 1
2018-04-15 11:13:01 -返回值 : login
2018-04-15 11:14:25 -请求地址 : http://localhost/login
2018-04-15 11:14:25 -HTTP METHOD : GET
2018-04-15 11:14:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:14:25 -参数 : []
2018-04-15 11:14:25 -耗时 : 1
2018-04-15 11:14:25 -返回值 : login
2018-04-15 11:14:25 -请求地址 : http://localhost/login
2018-04-15 11:14:25 -HTTP METHOD : GET
2018-04-15 11:14:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:14:25 -参数 : []
2018-04-15 11:14:25 -耗时 : 1
2018-04-15 11:14:25 -返回值 : login
2018-04-15 11:18:39 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 7304 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:18:39 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:18:39 -The following profiles are active: dev
2018-04-15 11:18:40 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:18:40 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:18:40 CST 2018]; root of context hierarchy
2018-04-15 11:18:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:18:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$180c5b49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a6589f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:42 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:18:42 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:18:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:18:43 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:18:43 -Starting service [Tomcat]
2018-04-15 11:18:43 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:18:43 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:18:43 -Root WebApplicationContext: initialization completed in 3445 ms
2018-04-15 11:18:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:18:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:18:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:18:44 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:18:44 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:18:44 -Filter xssFilter was not registered (disabled)
2018-04-15 11:18:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:18:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:18:44 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:18:44 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:18:44 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:18:40 CST 2018]; root of context hierarchy
2018-04-15 11:18:44 -{dataSource-1} inited
2018-04-15 11:18:45 -Using default implementation for ThreadExecutor
2018-04-15 11:18:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:18:45 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:18:45 -RAMJobStore initialized.
2018-04-15 11:18:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:18:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:18:45 -Quartz scheduler version: 2.2.1
2018-04-15 11:18:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@780546f8
2018-04-15 11:18:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:18:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:18:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:18:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:18:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:18:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:18:47 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:18:47 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:18:47 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:18:47 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:18:47 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:18:47 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:18:47 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:18:47 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:18:47 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:18:47 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:18:47 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:18:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:18:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:18:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:18:47 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:18:47 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:18:47 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:18:47 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:18:47 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:18:47 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:18:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:18:47 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:18:47 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:18:47 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:18:47 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:18:47 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:18:47 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:18:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:18:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:18:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:18:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:18:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:18:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:18:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:18:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:18:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:18:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:18:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:18:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:18:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:18:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:18:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:18:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:18:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:18:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:18:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:18:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:18:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:18:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:18:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:18:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:18:48 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:18:40 CST 2018]; root of context hierarchy
2018-04-15 11:18:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:18:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:18:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:18:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:18:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:18:49 -

Using default security password: 119e483e-77f9-44a5-a3e5-f224e033718c

2018-04-15 11:18:49 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:18:50 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@57283fac, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d745ac6, org.springframework.security.web.context.SecurityContextPersistenceFilter@63614cdd, org.springframework.security.web.header.HeaderWriterFilter@2082e0e4, org.springframework.security.web.csrf.CsrfFilter@4a3404fa, org.springframework.security.web.authentication.logout.LogoutFilter@6e5fba90, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d8e1fa6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24fb752f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e54bef6, org.springframework.security.web.session.SessionManagementFilter@4244e477, org.springframework.security.web.access.ExceptionTranslationFilter@1185b0b7]
2018-04-15 11:18:50 -Registering beans for JMX exposure on startup
2018-04-15 11:18:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:18:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:18:50 -Starting beans in phase 2147483647
2018-04-15 11:18:50 -Context refreshed
2018-04-15 11:18:50 -Found 1 custom documentation plugin(s)
2018-04-15 11:18:50 -Scanning for api listing references
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:18:51 -Generating unique operation named: addUsingGET_1
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_2
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_2
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:18:51 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:18:51 -Generating unique operation named: addUsingGET_2
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_3
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_3
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:18:51 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:18:51 -Generating unique operation named: addUsingGET_3
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_4
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_4
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:18:51 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:18:51 -Generating unique operation named: addUsingGET_4
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_5
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_5
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:18:51 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:18:51 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:18:51 -Generating unique operation named: addUsingGET_5
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_6
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_6
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_7
2018-04-15 11:18:51 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:18:51 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:18:51 -Generating unique operation named: addUsingGET_6
2018-04-15 11:18:51 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:18:51 -Generating unique operation named: editUsingGET_7
2018-04-15 11:18:51 -Generating unique operation named: listUsingGET_8
2018-04-15 11:18:51 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:18:51 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:18:51 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:18:51 -Generating unique operation named: userUsingGET_1
2018-04-15 11:18:51 -Starting Quartz Scheduler now
2018-04-15 11:18:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:18:51 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:18:51 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:18:51 -Using a shared selector for servlet write/read
2018-04-15 11:18:51 -Tomcat started on port(s): 80 (http)
2018-04-15 11:18:51 -Started BootdoApplication in 12.562 seconds (JVM running for 13.039)
2018-04-15 11:19:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:19:23 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:19:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-15 11:19:24 -Enabling session validation scheduler...
2018-04-15 11:19:24 -请求地址 : http://localhost/login
2018-04-15 11:19:24 -HTTP METHOD : GET
2018-04-15 11:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:19:24 -参数 : []
2018-04-15 11:19:24 -耗时 : 5
2018-04-15 11:19:24 -返回值 : login
2018-04-15 11:19:24 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:19:24 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:19:24 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:19:24 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:19:24 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:19:24 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:19:24 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:19:24 -请求地址 : http://localhost/login;JSESSIONID=9df6f09a-af4e-4e4c-b239-367cf10e3611
2018-04-15 11:19:24 -HTTP METHOD : GET
2018-04-15 11:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:19:24 -参数 : []
2018-04-15 11:19:24 -耗时 : 0
2018-04-15 11:19:24 -返回值 : login
2018-04-15 11:19:25 -请求地址 : http://localhost/register
2018-04-15 11:19:25 -HTTP METHOD : GET
2018-04-15 11:19:25 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:19:25 -参数 : [{}]
2018-04-15 11:19:25 -耗时 : 1
2018-04-15 11:19:25 -返回值 : system/user/register
2018-04-15 11:19:25 -请求地址 : http://localhost/login
2018-04-15 11:19:25 -HTTP METHOD : GET
2018-04-15 11:19:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:19:25 -参数 : []
2018-04-15 11:19:25 -耗时 : 0
2018-04-15 11:19:25 -返回值 : login
2018-04-15 11:20:06 -请求地址 : http://localhost/login
2018-04-15 11:20:06 -HTTP METHOD : GET
2018-04-15 11:20:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:20:06 -参数 : []
2018-04-15 11:20:06 -耗时 : 0
2018-04-15 11:20:06 -返回值 : login
2018-04-15 11:20:06 -请求地址 : http://localhost/login
2018-04-15 11:20:06 -HTTP METHOD : GET
2018-04-15 11:20:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:20:06 -参数 : []
2018-04-15 11:20:06 -耗时 : 1
2018-04-15 11:20:06 -返回值 : login
2018-04-15 11:20:08 -请求地址 : http://localhost/register
2018-04-15 11:20:08 -HTTP METHOD : GET
2018-04-15 11:20:08 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:20:08 -参数 : [{}]
2018-04-15 11:20:08 -耗时 : 1
2018-04-15 11:20:08 -返回值 : system/user/register
2018-04-15 11:20:08 -请求地址 : http://localhost/login
2018-04-15 11:20:08 -HTTP METHOD : GET
2018-04-15 11:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:20:08 -参数 : []
2018-04-15 11:20:08 -耗时 : 1
2018-04-15 11:20:08 -返回值 : login
2018-04-15 11:21:14 -请求地址 : http://localhost/register
2018-04-15 11:21:14 -HTTP METHOD : GET
2018-04-15 11:21:14 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:21:14 -参数 : [{}]
2018-04-15 11:21:14 -耗时 : 0
2018-04-15 11:21:14 -返回值 : system/user/register
2018-04-15 11:21:14 -请求地址 : http://localhost/login
2018-04-15 11:21:14 -HTTP METHOD : GET
2018-04-15 11:21:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:21:14 -参数 : []
2018-04-15 11:21:14 -耗时 : 0
2018-04-15 11:21:14 -返回值 : login
2018-04-15 11:22:11 -请求地址 : http://localhost/register
2018-04-15 11:22:11 -HTTP METHOD : GET
2018-04-15 11:22:11 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:22:11 -参数 : [{}]
2018-04-15 11:22:11 -耗时 : 1
2018-04-15 11:22:11 -返回值 : system/user/register
2018-04-15 11:22:11 -请求地址 : http://localhost/login
2018-04-15 11:22:11 -HTTP METHOD : GET
2018-04-15 11:22:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:22:11 -参数 : []
2018-04-15 11:22:11 -耗时 : 1
2018-04-15 11:22:11 -返回值 : login
2018-04-15 11:23:39 -请求地址 : http://localhost/register
2018-04-15 11:23:39 -HTTP METHOD : GET
2018-04-15 11:23:39 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:23:39 -参数 : [{}]
2018-04-15 11:23:39 -耗时 : 1
2018-04-15 11:23:39 -返回值 : system/user/register
2018-04-15 11:23:39 -请求地址 : http://localhost/login
2018-04-15 11:23:39 -HTTP METHOD : GET
2018-04-15 11:23:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:23:39 -参数 : []
2018-04-15 11:23:39 -耗时 : 0
2018-04-15 11:23:39 -返回值 : login
2018-04-15 11:23:53 -请求地址 : http://localhost/register
2018-04-15 11:23:53 -HTTP METHOD : GET
2018-04-15 11:23:53 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:23:53 -参数 : [{}]
2018-04-15 11:23:53 -耗时 : 0
2018-04-15 11:23:53 -返回值 : system/user/register
2018-04-15 11:23:53 -请求地址 : http://localhost/login
2018-04-15 11:23:53 -HTTP METHOD : GET
2018-04-15 11:23:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:23:53 -参数 : []
2018-04-15 11:23:53 -耗时 : 0
2018-04-15 11:23:53 -返回值 : login
2018-04-15 11:24:00 -请求地址 : http://localhost/register
2018-04-15 11:24:00 -HTTP METHOD : GET
2018-04-15 11:24:00 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:24:00 -参数 : [{}]
2018-04-15 11:24:00 -耗时 : 0
2018-04-15 11:24:00 -返回值 : system/user/register
2018-04-15 11:24:00 -请求地址 : http://localhost/login
2018-04-15 11:24:00 -HTTP METHOD : GET
2018-04-15 11:24:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:24:00 -参数 : []
2018-04-15 11:24:00 -耗时 : 0
2018-04-15 11:24:00 -返回值 : login
2018-04-15 11:24:08 -请求地址 : http://localhost/register
2018-04-15 11:24:08 -HTTP METHOD : GET
2018-04-15 11:24:08 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:24:08 -参数 : [{}]
2018-04-15 11:24:08 -耗时 : 0
2018-04-15 11:24:08 -返回值 : system/user/register
2018-04-15 11:24:09 -请求地址 : http://localhost/login
2018-04-15 11:24:09 -HTTP METHOD : GET
2018-04-15 11:24:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:24:09 -参数 : []
2018-04-15 11:24:09 -耗时 : 0
2018-04-15 11:24:09 -返回值 : login
2018-04-15 11:24:24 -请求地址 : http://localhost/register
2018-04-15 11:24:24 -HTTP METHOD : GET
2018-04-15 11:24:24 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:24:24 -参数 : [{}]
2018-04-15 11:24:24 -耗时 : 1
2018-04-15 11:24:24 -返回值 : system/user/register
2018-04-15 11:24:24 -请求地址 : http://localhost/login
2018-04-15 11:24:24 -HTTP METHOD : GET
2018-04-15 11:24:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:24:24 -参数 : []
2018-04-15 11:24:24 -耗时 : 0
2018-04-15 11:24:24 -返回值 : login
2018-04-15 11:32:55 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 4932 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:32:55 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:32:55 -The following profiles are active: dev
2018-04-15 11:32:55 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:32:55 CST 2018]; root of context hierarchy
2018-04-15 11:32:55 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:32:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:32:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a082801] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2c6156a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:32:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:32:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:32:59 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:32:59 -Starting service [Tomcat]
2018-04-15 11:32:59 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:32:59 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:32:59 -Root WebApplicationContext: initialization completed in 3721 ms
2018-04-15 11:32:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:32:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:32:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:32:59 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:32:59 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:32:59 -Filter xssFilter was not registered (disabled)
2018-04-15 11:32:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:32:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:32:59 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:32:59 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:33:00 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:32:55 CST 2018]; root of context hierarchy
2018-04-15 11:33:00 -{dataSource-1} inited
2018-04-15 11:33:01 -Using default implementation for ThreadExecutor
2018-04-15 11:33:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:33:01 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:33:01 -RAMJobStore initialized.
2018-04-15 11:33:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:33:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:33:01 -Quartz scheduler version: 2.2.1
2018-04-15 11:33:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1d0dad12
2018-04-15 11:33:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:33:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:33:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:33:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:33:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:33:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:33:02 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:33:02 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:33:02 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:33:02 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:33:02 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:33:02 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:33:02 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:33:02 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:33:02 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:33:02 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:33:02 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:33:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:33:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:33:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:33:02 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:33:02 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:33:02 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:33:02 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:33:02 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:33:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:33:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:33:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:33:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:33:02 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:33:02 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:33:02 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:33:02 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:33:02 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:33:02 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:33:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:33:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:33:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:33:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:33:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:33:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:33:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:33:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:33:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:33:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:33:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:33:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:33:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:33:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:33:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:33:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:33:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:33:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:33:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:33:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:33:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:33:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:33:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:33:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:33:03 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:32:55 CST 2018]; root of context hierarchy
2018-04-15 11:33:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:33:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:33:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:33:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:33:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:33:05 -

Using default security password: 8f734d55-be51-42e2-bf87-61320a1aa0a6

2018-04-15 11:33:05 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:33:05 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@57466fb7, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7891742e, org.springframework.security.web.context.SecurityContextPersistenceFilter@6778636f, org.springframework.security.web.header.HeaderWriterFilter@65294247, org.springframework.security.web.csrf.CsrfFilter@37a14aa1, org.springframework.security.web.authentication.logout.LogoutFilter@1e49a77e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76bdfc19, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cfac0bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2bbaf983, org.springframework.security.web.session.SessionManagementFilter@127320df, org.springframework.security.web.access.ExceptionTranslationFilter@78f1d29]
2018-04-15 11:33:06 -Registering beans for JMX exposure on startup
2018-04-15 11:33:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:33:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:33:06 -Starting beans in phase 2147483647
2018-04-15 11:33:06 -Context refreshed
2018-04-15 11:33:06 -Found 1 custom documentation plugin(s)
2018-04-15 11:33:06 -Scanning for api listing references
2018-04-15 11:33:06 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:33:06 -Generating unique operation named: editUsingGET_1
2018-04-15 11:33:06 -Generating unique operation named: listUsingGET_1
2018-04-15 11:33:06 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:33:07 -Generating unique operation named: addUsingGET_1
2018-04-15 11:33:07 -Generating unique operation named: editUsingGET_2
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_2
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:33:07 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:33:07 -Generating unique operation named: addUsingGET_2
2018-04-15 11:33:07 -Generating unique operation named: editUsingGET_3
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_3
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:33:07 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:33:07 -Generating unique operation named: addUsingGET_3
2018-04-15 11:33:07 -Generating unique operation named: editUsingGET_4
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_4
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:33:07 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:33:07 -Generating unique operation named: addUsingGET_4
2018-04-15 11:33:07 -Generating unique operation named: editUsingGET_5
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_5
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:33:07 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:33:07 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:33:07 -Generating unique operation named: addUsingGET_5
2018-04-15 11:33:07 -Generating unique operation named: editUsingGET_6
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_6
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_7
2018-04-15 11:33:07 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:33:07 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:33:07 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:33:07 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:33:07 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:33:07 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:33:07 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:33:07 -Generating unique operation named: addUsingGET_6
2018-04-15 11:33:07 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:33:07 -Generating unique operation named: editUsingGET_7
2018-04-15 11:33:07 -Generating unique operation named: listUsingGET_8
2018-04-15 11:33:07 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:33:07 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:33:07 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:33:07 -Generating unique operation named: userUsingGET_1
2018-04-15 11:33:07 -Starting Quartz Scheduler now
2018-04-15 11:33:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:33:07 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:33:07 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:33:07 -Using a shared selector for servlet write/read
2018-04-15 11:33:07 -Tomcat started on port(s): 80 (http)
2018-04-15 11:33:07 -Started BootdoApplication in 12.77 seconds (JVM running for 13.254)
2018-04-15 11:33:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:33:14 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:33:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-04-15 11:33:14 -Enabling session validation scheduler...
2018-04-15 11:33:14 -请求地址 : http://localhost/register
2018-04-15 11:33:14 -HTTP METHOD : GET
2018-04-15 11:33:14 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:33:14 -参数 : [{}]
2018-04-15 11:33:14 -耗时 : 2
2018-04-15 11:33:14 -返回值 : system/user/register
2018-04-15 11:33:14 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:33:14 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:33:14 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:33:14 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:33:14 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:33:14 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:33:14 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:33:14 -请求地址 : http://localhost/login;JSESSIONID=81cc2872-8e98-4929-9dbb-c24b65a40d53
2018-04-15 11:33:14 -HTTP METHOD : GET
2018-04-15 11:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:14 -参数 : []
2018-04-15 11:33:14 -耗时 : 0
2018-04-15 11:33:14 -返回值 : login
2018-04-15 11:33:19 -请求地址 : http://localhost/login
2018-04-15 11:33:19 -HTTP METHOD : GET
2018-04-15 11:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:19 -参数 : []
2018-04-15 11:33:19 -耗时 : 1
2018-04-15 11:33:19 -返回值 : login
2018-04-15 11:33:19 -请求地址 : http://localhost/login
2018-04-15 11:33:19 -HTTP METHOD : GET
2018-04-15 11:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:19 -参数 : []
2018-04-15 11:33:19 -耗时 : 1
2018-04-15 11:33:19 -返回值 : login
2018-04-15 11:33:19 -请求地址 : http://localhost/login
2018-04-15 11:33:19 -HTTP METHOD : GET
2018-04-15 11:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:19 -参数 : []
2018-04-15 11:33:19 -耗时 : 1
2018-04-15 11:33:19 -返回值 : login
2018-04-15 11:33:19 -请求地址 : http://localhost/login
2018-04-15 11:33:19 -HTTP METHOD : GET
2018-04-15 11:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:19 -参数 : []
2018-04-15 11:33:19 -耗时 : 1
2018-04-15 11:33:19 -返回值 : login
2018-04-15 11:33:19 -请求地址 : http://localhost/login
2018-04-15 11:33:19 -HTTP METHOD : GET
2018-04-15 11:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:19 -参数 : []
2018-04-15 11:33:19 -耗时 : 0
2018-04-15 11:33:19 -返回值 : login
2018-04-15 11:33:19 -请求地址 : http://localhost/login
2018-04-15 11:33:19 -HTTP METHOD : GET
2018-04-15 11:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:19 -参数 : []
2018-04-15 11:33:19 -耗时 : 1
2018-04-15 11:33:19 -返回值 : login
2018-04-15 11:33:20 -请求地址 : http://localhost/login
2018-04-15 11:33:20 -HTTP METHOD : GET
2018-04-15 11:33:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:20 -参数 : []
2018-04-15 11:33:20 -耗时 : 0
2018-04-15 11:33:20 -返回值 : login
2018-04-15 11:33:20 -请求地址 : http://localhost/login
2018-04-15 11:33:20 -HTTP METHOD : GET
2018-04-15 11:33:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:20 -参数 : []
2018-04-15 11:33:20 -耗时 : 0
2018-04-15 11:33:20 -返回值 : login
2018-04-15 11:33:21 -请求地址 : http://localhost/register
2018-04-15 11:33:21 -HTTP METHOD : GET
2018-04-15 11:33:21 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:33:21 -参数 : [{}]
2018-04-15 11:33:21 -耗时 : 1
2018-04-15 11:33:21 -返回值 : system/user/register
2018-04-15 11:33:21 -请求地址 : http://localhost/login
2018-04-15 11:33:21 -HTTP METHOD : GET
2018-04-15 11:33:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:21 -参数 : []
2018-04-15 11:33:21 -耗时 : 1
2018-04-15 11:33:21 -返回值 : login
2018-04-15 11:33:39 -请求地址 : http://localhost/login
2018-04-15 11:33:39 -HTTP METHOD : GET
2018-04-15 11:33:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:39 -参数 : []
2018-04-15 11:33:39 -耗时 : 0
2018-04-15 11:33:39 -返回值 : login
2018-04-15 11:33:39 -请求地址 : http://localhost/login
2018-04-15 11:33:39 -HTTP METHOD : GET
2018-04-15 11:33:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:39 -参数 : []
2018-04-15 11:33:39 -耗时 : 1
2018-04-15 11:33:39 -返回值 : login
2018-04-15 11:33:39 -请求地址 : http://localhost/login
2018-04-15 11:33:39 -HTTP METHOD : GET
2018-04-15 11:33:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:39 -参数 : []
2018-04-15 11:33:39 -耗时 : 0
2018-04-15 11:33:39 -返回值 : login
2018-04-15 11:33:46 -请求地址 : http://localhost/register
2018-04-15 11:33:46 -HTTP METHOD : GET
2018-04-15 11:33:46 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:33:46 -参数 : [{}]
2018-04-15 11:33:46 -耗时 : 0
2018-04-15 11:33:46 -返回值 : system/user/register
2018-04-15 11:33:46 -请求地址 : http://localhost/login
2018-04-15 11:33:46 -HTTP METHOD : GET
2018-04-15 11:33:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:46 -参数 : []
2018-04-15 11:33:46 -耗时 : 1
2018-04-15 11:33:46 -返回值 : login
2018-04-15 11:33:50 -请求地址 : http://localhost/login
2018-04-15 11:33:50 -HTTP METHOD : GET
2018-04-15 11:33:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:50 -参数 : []
2018-04-15 11:33:50 -耗时 : 0
2018-04-15 11:33:50 -返回值 : login
2018-04-15 11:33:50 -请求地址 : http://localhost/login
2018-04-15 11:33:50 -HTTP METHOD : GET
2018-04-15 11:33:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:50 -参数 : []
2018-04-15 11:33:50 -耗时 : 0
2018-04-15 11:33:50 -返回值 : login
2018-04-15 11:33:50 -请求地址 : http://localhost/login
2018-04-15 11:33:50 -HTTP METHOD : GET
2018-04-15 11:33:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:33:50 -参数 : []
2018-04-15 11:33:50 -耗时 : 1
2018-04-15 11:33:50 -返回值 : login
2018-04-15 11:34:45 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 4052 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:34:45 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:34:45 -The following profiles are active: dev
2018-04-15 11:34:45 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:34:45 CST 2018]; root of context hierarchy
2018-04-15 11:34:45 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:34:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:34:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9ff7a6df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9250d586] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:34:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:34:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:34:48 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:34:48 -Starting service [Tomcat]
2018-04-15 11:34:48 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:34:49 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:34:49 -Root WebApplicationContext: initialization completed in 3183 ms
2018-04-15 11:34:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:34:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:34:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:34:49 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:34:49 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:34:49 -Filter xssFilter was not registered (disabled)
2018-04-15 11:34:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:34:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:34:49 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:34:49 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:34:49 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:34:45 CST 2018]; root of context hierarchy
2018-04-15 11:34:50 -{dataSource-1} inited
2018-04-15 11:34:51 -Using default implementation for ThreadExecutor
2018-04-15 11:34:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:34:51 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:34:51 -RAMJobStore initialized.
2018-04-15 11:34:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:34:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:34:51 -Quartz scheduler version: 2.2.1
2018-04-15 11:34:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@505a8582
2018-04-15 11:34:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:34:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:34:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:34:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:34:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:34:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:34:52 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:34:52 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:34:52 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:34:52 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:34:52 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:34:52 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:34:52 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:34:52 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:34:52 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:34:52 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:34:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:34:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:34:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:34:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:34:52 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:34:52 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:34:52 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:34:52 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:34:52 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:34:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:34:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:34:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:34:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:34:52 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:34:52 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:34:52 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:34:52 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:34:52 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:34:52 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:34:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:34:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:34:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:34:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:34:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:34:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:34:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:34:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:34:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:34:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:34:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:34:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:34:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:34:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:34:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:34:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:34:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:34:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:34:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:34:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:34:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:34:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:34:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:34:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:34:53 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:34:45 CST 2018]; root of context hierarchy
2018-04-15 11:34:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:34:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:34:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:34:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:34:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:34:55 -

Using default security password: fc3a1685-8d4f-4aca-89d9-dc1b4f1a1517

2018-04-15 11:34:55 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:34:55 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3c65f2e1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c247b02, org.springframework.security.web.context.SecurityContextPersistenceFilter@f391e52, org.springframework.security.web.header.HeaderWriterFilter@712594f4, org.springframework.security.web.csrf.CsrfFilter@30a6984c, org.springframework.security.web.authentication.logout.LogoutFilter@ecfff32, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@106f2425, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3113595e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78f1d29, org.springframework.security.web.session.SessionManagementFilter@71ac5723, org.springframework.security.web.access.ExceptionTranslationFilter@3599b18]
2018-04-15 11:34:55 -Registering beans for JMX exposure on startup
2018-04-15 11:34:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:34:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:34:56 -Starting beans in phase 2147483647
2018-04-15 11:34:56 -Context refreshed
2018-04-15 11:34:56 -Found 1 custom documentation plugin(s)
2018-04-15 11:34:56 -Scanning for api listing references
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:34:56 -Generating unique operation named: editUsingGET_1
2018-04-15 11:34:56 -Generating unique operation named: listUsingGET_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:34:56 -Generating unique operation named: addUsingGET_1
2018-04-15 11:34:56 -Generating unique operation named: editUsingGET_2
2018-04-15 11:34:56 -Generating unique operation named: listUsingGET_2
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:34:56 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:34:56 -Generating unique operation named: addUsingGET_2
2018-04-15 11:34:56 -Generating unique operation named: editUsingGET_3
2018-04-15 11:34:56 -Generating unique operation named: listUsingGET_3
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:34:56 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:34:56 -Generating unique operation named: addUsingGET_3
2018-04-15 11:34:56 -Generating unique operation named: editUsingGET_4
2018-04-15 11:34:56 -Generating unique operation named: listUsingGET_4
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:34:56 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:34:56 -Generating unique operation named: addUsingGET_4
2018-04-15 11:34:56 -Generating unique operation named: editUsingGET_5
2018-04-15 11:34:56 -Generating unique operation named: listUsingGET_5
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:34:56 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:34:56 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:34:56 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:34:56 -Generating unique operation named: addUsingGET_5
2018-04-15 11:34:56 -Generating unique operation named: editUsingGET_6
2018-04-15 11:34:56 -Generating unique operation named: listUsingGET_6
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:34:56 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:34:56 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:34:57 -Generating unique operation named: listUsingGET_7
2018-04-15 11:34:57 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:34:57 -Generating unique operation named: addUsingGET_6
2018-04-15 11:34:57 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:34:57 -Generating unique operation named: editUsingGET_7
2018-04-15 11:34:57 -Generating unique operation named: exitUsingPOST_1
2018-04-15 11:34:57 -Generating unique operation named: listUsingGET_8
2018-04-15 11:34:57 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:34:57 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:34:57 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:34:57 -Generating unique operation named: userUsingGET_1
2018-04-15 11:34:57 -Starting Quartz Scheduler now
2018-04-15 11:34:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:34:57 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:34:57 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:34:57 -Using a shared selector for servlet write/read
2018-04-15 11:34:57 -Tomcat started on port(s): 80 (http)
2018-04-15 11:34:57 -Started BootdoApplication in 12.145 seconds (JVM running for 12.66)
2018-04-15 11:35:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:35:05 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:35:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-04-15 11:35:05 -Enabling session validation scheduler...
2018-04-15 11:35:06 -请求地址 : http://localhost/login
2018-04-15 11:35:06 -HTTP METHOD : GET
2018-04-15 11:35:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:35:06 -参数 : []
2018-04-15 11:35:06 -耗时 : 4
2018-04-15 11:35:06 -返回值 : login
2018-04-15 11:35:06 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:35:06 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:35:06 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:35:06 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:35:06 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:35:06 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:35:06 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:35:06 -请求地址 : http://localhost/login;JSESSIONID=b2203e98-c4eb-4713-b55e-f68c4aacbc13
2018-04-15 11:35:06 -HTTP METHOD : GET
2018-04-15 11:35:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:35:06 -参数 : []
2018-04-15 11:35:06 -耗时 : 1
2018-04-15 11:35:06 -返回值 : login
2018-04-15 11:35:07 -请求地址 : http://localhost/register
2018-04-15 11:35:07 -HTTP METHOD : GET
2018-04-15 11:35:07 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:35:07 -参数 : [{}]
2018-04-15 11:35:07 -耗时 : 0
2018-04-15 11:35:07 -返回值 : system/user/register
2018-04-15 11:35:07 -请求地址 : http://localhost/login
2018-04-15 11:35:07 -HTTP METHOD : GET
2018-04-15 11:35:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:35:07 -参数 : []
2018-04-15 11:35:07 -耗时 : 1
2018-04-15 11:35:07 -返回值 : login
2018-04-15 11:35:12 -请求地址 : http://localhost/login
2018-04-15 11:35:12 -HTTP METHOD : GET
2018-04-15 11:35:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:35:12 -参数 : []
2018-04-15 11:35:12 -耗时 : 0
2018-04-15 11:35:12 -返回值 : login
2018-04-15 11:35:12 -请求地址 : http://localhost/login
2018-04-15 11:35:12 -HTTP METHOD : GET
2018-04-15 11:35:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:35:12 -参数 : []
2018-04-15 11:35:12 -耗时 : 0
2018-04-15 11:35:12 -返回值 : login
2018-04-15 11:35:12 -请求地址 : http://localhost/login
2018-04-15 11:35:12 -HTTP METHOD : GET
2018-04-15 11:35:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:35:12 -参数 : []
2018-04-15 11:35:12 -耗时 : 0
2018-04-15 11:35:12 -返回值 : login
2018-04-15 11:35:49 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 5360 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:35:49 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:35:49 -The following profiles are active: dev
2018-04-15 11:35:49 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:35:49 CST 2018]; root of context hierarchy
2018-04-15 11:35:49 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:35:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:35:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$59a21c49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4bfb4af0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:35:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:35:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:35:52 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:35:52 -Starting service [Tomcat]
2018-04-15 11:35:52 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:35:52 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:35:52 -Root WebApplicationContext: initialization completed in 3211 ms
2018-04-15 11:35:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:35:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:35:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:35:53 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:35:53 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:35:53 -Filter xssFilter was not registered (disabled)
2018-04-15 11:35:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:35:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:35:53 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:35:53 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:35:53 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:35:49 CST 2018]; root of context hierarchy
2018-04-15 11:35:53 -{dataSource-1} inited
2018-04-15 11:35:54 -Using default implementation for ThreadExecutor
2018-04-15 11:35:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:35:54 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:35:54 -RAMJobStore initialized.
2018-04-15 11:35:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:35:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:35:54 -Quartz scheduler version: 2.2.1
2018-04-15 11:35:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@19d3f6ad
2018-04-15 11:35:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:35:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:35:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:35:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:35:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:35:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:35:55 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:35:55 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:35:55 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:35:55 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:35:55 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:35:55 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:35:55 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:35:55 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:35:55 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:35:55 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:35:55 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:35:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:35:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:35:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:35:55 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:35:55 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:35:55 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:35:55 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:35:55 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:35:55 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:35:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:35:55 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:35:55 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:35:55 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:35:55 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:35:55 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:55 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:35:55 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:35:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:35:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:35:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:35:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:35:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:35:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:35:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:35:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:35:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:35:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:35:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:35:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:35:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:35:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:35:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:35:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:35:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:35:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:35:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:35:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:35:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:35:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:35:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:35:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:35:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:35:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:35:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:35:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:35:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:35:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:35:57 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:35:49 CST 2018]; root of context hierarchy
2018-04-15 11:35:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:35:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:35:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:35:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:35:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:35:58 -

Using default security password: 0aa4626c-a5b3-4da6-98b2-c969e7e58a54

2018-04-15 11:35:58 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:35:58 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@44df834c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34c07ecc, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c0a6f62, org.springframework.security.web.header.HeaderWriterFilter@9fd3b61, org.springframework.security.web.csrf.CsrfFilter@2681185e, org.springframework.security.web.authentication.logout.LogoutFilter@77622c82, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58fbfefb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c6eaa65, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7df23848, org.springframework.security.web.session.SessionManagementFilter@1ddc889b, org.springframework.security.web.access.ExceptionTranslationFilter@583b4af4]
2018-04-15 11:35:59 -Registering beans for JMX exposure on startup
2018-04-15 11:35:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:35:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:35:59 -Starting beans in phase 2147483647
2018-04-15 11:35:59 -Context refreshed
2018-04-15 11:35:59 -Found 1 custom documentation plugin(s)
2018-04-15 11:35:59 -Scanning for api listing references
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:36:00 -Generating unique operation named: addUsingGET_1
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_2
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_2
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:36:00 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:36:00 -Generating unique operation named: addUsingGET_2
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_3
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_3
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:36:00 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:36:00 -Generating unique operation named: addUsingGET_3
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_4
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_4
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:36:00 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:36:00 -Generating unique operation named: addUsingGET_4
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_5
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_5
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:36:00 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:36:00 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:36:00 -Generating unique operation named: addUsingGET_5
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_6
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_6
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_7
2018-04-15 11:36:00 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:36:00 -Generating unique operation named: addUsingGET_6
2018-04-15 11:36:00 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:36:00 -Generating unique operation named: editUsingGET_7
2018-04-15 11:36:00 -Generating unique operation named: exitUsingPOST_1
2018-04-15 11:36:00 -Generating unique operation named: listUsingGET_8
2018-04-15 11:36:00 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:36:00 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:36:00 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:36:00 -Generating unique operation named: userUsingGET_1
2018-04-15 11:36:00 -Starting Quartz Scheduler now
2018-04-15 11:36:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:36:00 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:36:00 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:36:00 -Using a shared selector for servlet write/read
2018-04-15 11:36:00 -Tomcat started on port(s): 80 (http)
2018-04-15 11:36:00 -Started BootdoApplication in 12.32 seconds (JVM running for 12.779)
2018-04-15 11:37:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:37:10 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:37:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-04-15 11:37:10 -Enabling session validation scheduler...
2018-04-15 11:37:10 -请求地址 : http://localhost/login
2018-04-15 11:37:10 -HTTP METHOD : GET
2018-04-15 11:37:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:37:10 -参数 : []
2018-04-15 11:37:10 -耗时 : 2
2018-04-15 11:37:10 -返回值 : login
2018-04-15 11:37:10 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:37:10 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:37:10 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:37:10 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:37:10 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:37:10 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:37:10 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:37:11 -请求地址 : http://localhost/login;JSESSIONID=0a17caba-0edf-4379-9d0b-95c939b67522
2018-04-15 11:37:11 -HTTP METHOD : GET
2018-04-15 11:37:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:37:11 -参数 : []
2018-04-15 11:37:11 -耗时 : 1
2018-04-15 11:37:11 -返回值 : login
2018-04-15 11:37:12 -请求地址 : http://localhost/register
2018-04-15 11:37:12 -HTTP METHOD : GET
2018-04-15 11:37:12 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:37:12 -参数 : [{}]
2018-04-15 11:37:12 -耗时 : 0
2018-04-15 11:37:12 -返回值 : system/user/register
2018-04-15 11:37:12 -请求地址 : http://localhost/login
2018-04-15 11:37:12 -HTTP METHOD : GET
2018-04-15 11:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:37:12 -参数 : []
2018-04-15 11:37:12 -耗时 : 1
2018-04-15 11:37:12 -返回值 : login
2018-04-15 11:37:18 -请求地址 : http://localhost/register/exit
2018-04-15 11:37:18 -HTTP METHOD : POST
2018-04-15 11:37:18 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 11:37:18 -参数 : [{username=test}]
2018-04-15 11:37:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:37:18 -==> Parameters: test(String)
2018-04-15 11:37:18 -<==      Total: 1
2018-04-15 11:37:18 -耗时 : 220
2018-04-15 11:37:18 -返回值 : false
2018-04-15 11:37:22 -请求地址 : http://localhost/register/exit
2018-04-15 11:37:22 -HTTP METHOD : POST
2018-04-15 11:37:22 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 11:37:22 -参数 : [{username=test0}]
2018-04-15 11:37:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:37:22 -==> Parameters: test0(String)
2018-04-15 11:37:22 -<==      Total: 0
2018-04-15 11:37:22 -耗时 : 5
2018-04-15 11:37:22 -返回值 : true
2018-04-15 11:37:23 -请求地址 : http://localhost/register/exit
2018-04-15 11:37:23 -HTTP METHOD : POST
2018-04-15 11:37:23 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 11:37:23 -参数 : [{username=test01}]
2018-04-15 11:37:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:37:23 -==> Parameters: test01(String)
2018-04-15 11:37:23 -<==      Total: 0
2018-04-15 11:37:23 -耗时 : 4
2018-04-15 11:37:23 -返回值 : true
2018-04-15 11:37:32 -请求地址 : http://localhost/register
2018-04-15 11:37:32 -HTTP METHOD : GET
2018-04-15 11:37:32 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:37:32 -参数 : [{}]
2018-04-15 11:37:32 -耗时 : 1
2018-04-15 11:37:32 -返回值 : system/user/register
2018-04-15 11:37:32 -请求地址 : http://localhost/login
2018-04-15 11:37:32 -HTTP METHOD : GET
2018-04-15 11:37:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:37:32 -参数 : []
2018-04-15 11:37:32 -耗时 : 0
2018-04-15 11:37:32 -返回值 : login
2018-04-15 11:37:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:37:54 -==> Parameters: test01(String)
2018-04-15 11:37:54 -<==      Total: 0
2018-04-15 11:37:54 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test01, rememberMe=false (0:0:0:0:0:0:0:1)].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:52)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at org.apache.shiro.web.filter.authc.AuthenticatingFilter.executeLogin(AuthenticatingFilter.java:53)
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:154)
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-15 11:37:54 -请求地址 : http://localhost/login
2018-04-15 11:37:54 -HTTP METHOD : POST
2018-04-15 11:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 11:37:54 -参数 : [test01, 123456]
2018-04-15 11:37:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:37:54 -==> Parameters: test01(String)
2018-04-15 11:37:54 -<==      Total: 0
2018-04-15 11:37:54 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test01, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:52)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$467d5580.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-15 11:37:54 -耗时 : 8
2018-04-15 11:37:54 -返回值 : {msg=用户或密码错误, code=500}
2018-04-15 11:38:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:38:02 -==> Parameters: test01(String)
2018-04-15 11:38:02 -<==      Total: 0
2018-04-15 11:38:02 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test01, rememberMe=false (0:0:0:0:0:0:0:1)].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:52)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at org.apache.shiro.web.filter.authc.AuthenticatingFilter.executeLogin(AuthenticatingFilter.java:53)
	at org.apache.shiro.web.filter.authc.FormAuthenticationFilter.onAccessDenied(FormAuthenticationFilter.java:154)
	at org.apache.shiro.web.filter.AccessControlFilter.onAccessDenied(AccessControlFilter.java:133)
	at org.apache.shiro.web.filter.AccessControlFilter.onPreHandle(AccessControlFilter.java:162)
	at org.apache.shiro.web.filter.PathMatchingFilter.isFilterChainContinued(PathMatchingFilter.java:203)
	at org.apache.shiro.web.filter.PathMatchingFilter.preHandle(PathMatchingFilter.java:178)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-15 11:38:02 -请求地址 : http://localhost/login
2018-04-15 11:38:02 -HTTP METHOD : POST
2018-04-15 11:38:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 11:38:02 -参数 : [test01, 123456]
2018-04-15 11:38:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:38:02 -==> Parameters: test01(String)
2018-04-15 11:38:02 -<==      Total: 0
2018-04-15 11:38:02 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test01, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:52)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$467d5580.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-15 11:38:02 -耗时 : 4
2018-04-15 11:38:02 -返回值 : {msg=用户或密码错误, code=500}
2018-04-15 11:38:58 -请求地址 : http://localhost/register
2018-04-15 11:38:58 -HTTP METHOD : GET
2018-04-15 11:38:58 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:38:58 -参数 : [{}]
2018-04-15 11:38:58 -耗时 : 16
2018-04-15 11:38:58 -返回值 : system/user/register
2018-04-15 11:38:58 -请求地址 : http://localhost/login
2018-04-15 11:38:58 -HTTP METHOD : GET
2018-04-15 11:38:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:38:58 -参数 : []
2018-04-15 11:38:58 -耗时 : 0
2018-04-15 11:38:58 -返回值 : login
2018-04-15 11:39:05 -请求地址 : http://localhost/register/exit
2018-04-15 11:39:05 -HTTP METHOD : POST
2018-04-15 11:39:05 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 11:39:05 -参数 : [{username=test01}]
2018-04-15 11:39:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:39:05 -==> Parameters: test01(String)
2018-04-15 11:39:05 -<==      Total: 0
2018-04-15 11:39:05 -耗时 : 6
2018-04-15 11:39:05 -返回值 : true
2018-04-15 11:39:08 -请求地址 : http://localhost/register
2018-04-15 11:39:08 -HTTP METHOD : GET
2018-04-15 11:39:08 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:39:08 -参数 : [{}]
2018-04-15 11:39:08 -耗时 : 0
2018-04-15 11:39:08 -返回值 : system/user/register
2018-04-15 11:39:08 -请求地址 : http://localhost/login
2018-04-15 11:39:08 -HTTP METHOD : GET
2018-04-15 11:39:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:39:08 -参数 : []
2018-04-15 11:39:08 -耗时 : 0
2018-04-15 11:39:08 -返回值 : login
2018-04-15 11:39:54 -请求地址 : http://localhost/register
2018-04-15 11:39:54 -HTTP METHOD : GET
2018-04-15 11:39:54 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:39:54 -参数 : [{}]
2018-04-15 11:39:54 -耗时 : 1
2018-04-15 11:39:54 -返回值 : system/user/register
2018-04-15 11:39:54 -请求地址 : http://localhost/login
2018-04-15 11:39:54 -HTTP METHOD : GET
2018-04-15 11:39:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:39:54 -参数 : []
2018-04-15 11:39:54 -耗时 : 0
2018-04-15 11:39:54 -返回值 : login
2018-04-15 11:39:54 -请求地址 : http://localhost/register
2018-04-15 11:39:54 -HTTP METHOD : GET
2018-04-15 11:39:54 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:39:54 -参数 : [{}]
2018-04-15 11:39:54 -耗时 : 1
2018-04-15 11:39:54 -返回值 : system/user/register
2018-04-15 11:39:54 -请求地址 : http://localhost/login
2018-04-15 11:39:54 -HTTP METHOD : GET
2018-04-15 11:39:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:39:54 -参数 : []
2018-04-15 11:39:54 -耗时 : 0
2018-04-15 11:39:54 -返回值 : login
2018-04-15 11:39:54 -请求地址 : http://localhost/register
2018-04-15 11:39:54 -HTTP METHOD : GET
2018-04-15 11:39:54 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:39:54 -参数 : [{}]
2018-04-15 11:39:54 -耗时 : 0
2018-04-15 11:39:54 -返回值 : system/user/register
2018-04-15 11:39:55 -请求地址 : http://localhost/login
2018-04-15 11:39:55 -HTTP METHOD : GET
2018-04-15 11:39:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:39:55 -参数 : []
2018-04-15 11:39:55 -耗时 : 0
2018-04-15 11:39:55 -返回值 : login
2018-04-15 11:40:01 -请求地址 : http://localhost/register/exit
2018-04-15 11:40:01 -HTTP METHOD : POST
2018-04-15 11:40:01 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 11:40:01 -参数 : [{username=test01}]
2018-04-15 11:40:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:40:01 -==> Parameters: test01(String)
2018-04-15 11:40:01 -<==      Total: 0
2018-04-15 11:40:01 -耗时 : 0
2018-04-15 11:40:01 -返回值 : true
2018-04-15 11:40:04 -请求地址 : http://localhost/register/save
2018-04-15 11:40:04 -HTTP METHOD : POST
2018-04-15 11:40:04 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.save
2018-04-15 11:40:04 -参数 : [UserDO{userId=null, username='test01', name='test01', password='123456', deptId=null, deptName='null', email='null', mobile='null', status=null, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-15 11:40:10 -==>  Preparing: insert into sys_user ( `username`, `name`, `password`, `dept_id`, `email`, `mobile`, `status`, `user_id_create`, `gmt_create`, `gmt_modified`, `sex`, `birth`, `pic_id`, `live_address`, `hobby`, `province`, `city`, `district` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 11:40:10 -==> Parameters: test01(String), test01(String), 267db17d80c9a8a0858bdf06d8acfd62(String), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2018-04-15 11:40:10 -<==    Updates: 1
2018-04-15 11:40:10 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-15 11:40:10 -==> Parameters: 3(Long)
2018-04-15 11:40:11 -<==    Updates: 0
2018-04-15 11:40:13 -null
java.lang.NullPointerException: null
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.controller.RegisterController.save(RegisterController.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor86.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.RegisterController$$EnhancerBySpringCGLIB$$63627e18.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-15 11:42:42 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 6684 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:42:42 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:42:42 -The following profiles are active: dev
2018-04-15 11:42:42 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:42:42 CST 2018]; root of context hierarchy
2018-04-15 11:42:42 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:42:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c352777c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b5aba623] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:42:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:42:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:42:45 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:42:45 -Starting service [Tomcat]
2018-04-15 11:42:45 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:42:45 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:42:45 -Root WebApplicationContext: initialization completed in 3281 ms
2018-04-15 11:42:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:42:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:42:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:42:46 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:42:46 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:42:46 -Filter xssFilter was not registered (disabled)
2018-04-15 11:42:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:42:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:42:46 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:42:46 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:42:46 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:42:42 CST 2018]; root of context hierarchy
2018-04-15 11:42:46 -{dataSource-1} inited
2018-04-15 11:42:47 -Using default implementation for ThreadExecutor
2018-04-15 11:42:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:42:47 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:42:47 -RAMJobStore initialized.
2018-04-15 11:42:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:42:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:42:47 -Quartz scheduler version: 2.2.1
2018-04-15 11:42:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5ae87de0
2018-04-15 11:42:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:42:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:42:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:42:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:42:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:42:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:42:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:42:48 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:42:48 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:42:48 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:42:48 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:42:48 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:48 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:42:48 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:42:48 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:42:48 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:42:48 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:42:48 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:42:49 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:42:49 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:42:49 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:42:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:42:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:42:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:42:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:42:49 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:42:49 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:42:49 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:42:49 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:42:49 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:42:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:42:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:42:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:42:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:42:49 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:42:49 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:42:49 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:42:49 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:42:49 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:42:49 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:42:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:42:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:42:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:42:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:42:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:42:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:42:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:42:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:42:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:42:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:42:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:42:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:42:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:42:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:42:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:42:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:42:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:42:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:42:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:42:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:42:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:42:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:42:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:42:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:42:50 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:42:42 CST 2018]; root of context hierarchy
2018-04-15 11:42:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:42:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:42:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:42:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:42:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:42:51 -

Using default security password: 25c35994-12b0-4774-9db6-99f059bab3d1

2018-04-15 11:42:51 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:42:52 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@106f2425, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b666366, org.springframework.security.web.context.SecurityContextPersistenceFilter@e5f05f8, org.springframework.security.web.header.HeaderWriterFilter@1e75bef1, org.springframework.security.web.csrf.CsrfFilter@811d8d6, org.springframework.security.web.authentication.logout.LogoutFilter@6ac4f31d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@143900a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@294bb6ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@362fd4e9, org.springframework.security.web.session.SessionManagementFilter@236206f8, org.springframework.security.web.access.ExceptionTranslationFilter@3c468360]
2018-04-15 11:42:52 -Registering beans for JMX exposure on startup
2018-04-15 11:42:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:42:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:42:52 -Starting beans in phase 2147483647
2018-04-15 11:42:52 -Context refreshed
2018-04-15 11:42:52 -Found 1 custom documentation plugin(s)
2018-04-15 11:42:52 -Scanning for api listing references
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:42:53 -Generating unique operation named: editUsingGET_1
2018-04-15 11:42:53 -Generating unique operation named: listUsingGET_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:42:53 -Generating unique operation named: addUsingGET_1
2018-04-15 11:42:53 -Generating unique operation named: editUsingGET_2
2018-04-15 11:42:53 -Generating unique operation named: listUsingGET_2
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:42:53 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:42:53 -Generating unique operation named: addUsingGET_2
2018-04-15 11:42:53 -Generating unique operation named: editUsingGET_3
2018-04-15 11:42:53 -Generating unique operation named: listUsingGET_3
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:42:53 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:42:53 -Generating unique operation named: addUsingGET_3
2018-04-15 11:42:53 -Generating unique operation named: editUsingGET_4
2018-04-15 11:42:53 -Generating unique operation named: listUsingGET_4
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:42:53 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:42:53 -Generating unique operation named: addUsingGET_4
2018-04-15 11:42:53 -Generating unique operation named: editUsingGET_5
2018-04-15 11:42:53 -Generating unique operation named: listUsingGET_5
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:42:53 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:42:53 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:42:53 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:42:53 -Generating unique operation named: addUsingGET_5
2018-04-15 11:42:53 -Generating unique operation named: editUsingGET_6
2018-04-15 11:42:53 -Generating unique operation named: listUsingGET_6
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:42:53 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:42:53 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:42:54 -Generating unique operation named: listUsingGET_7
2018-04-15 11:42:54 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:42:54 -Generating unique operation named: addUsingGET_6
2018-04-15 11:42:54 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:42:54 -Generating unique operation named: editUsingGET_7
2018-04-15 11:42:54 -Generating unique operation named: exitUsingPOST_1
2018-04-15 11:42:54 -Generating unique operation named: listUsingGET_8
2018-04-15 11:42:54 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:42:54 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:42:54 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:42:54 -Generating unique operation named: userUsingGET_1
2018-04-15 11:42:54 -Starting Quartz Scheduler now
2018-04-15 11:42:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:42:54 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:42:54 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:42:54 -Using a shared selector for servlet write/read
2018-04-15 11:42:54 -Tomcat started on port(s): 80 (http)
2018-04-15 11:42:54 -Started BootdoApplication in 12.679 seconds (JVM running for 13.134)
2018-04-15 11:43:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 11:43:03 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 11:43:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-04-15 11:43:03 -Enabling session validation scheduler...
2018-04-15 11:43:03 -请求地址 : http://localhost/register
2018-04-15 11:43:03 -HTTP METHOD : GET
2018-04-15 11:43:03 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 11:43:03 -参数 : [{}]
2018-04-15 11:43:03 -耗时 : 2
2018-04-15 11:43:03 -返回值 : system/user/register
2018-04-15 11:43:03 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 11:43:03 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 11:43:03 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 11:43:03 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 11:43:03 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 11:43:03 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 11:43:03 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 11:43:03 -请求地址 : http://localhost/login;JSESSIONID=e99a167e-fc6b-4b3c-b61c-0794cb390767
2018-04-15 11:43:03 -HTTP METHOD : GET
2018-04-15 11:43:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:43:03 -参数 : []
2018-04-15 11:43:03 -耗时 : 0
2018-04-15 11:43:03 -返回值 : login
2018-04-15 11:43:10 -请求地址 : http://localhost/register/exit
2018-04-15 11:43:10 -HTTP METHOD : POST
2018-04-15 11:43:10 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 11:43:10 -参数 : [{username=test01}]
2018-04-15 11:43:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:43:10 -==> Parameters: test01(String)
2018-04-15 11:43:10 -<==      Total: 0
2018-04-15 11:43:10 -耗时 : 209
2018-04-15 11:43:10 -返回值 : true
2018-04-15 11:43:13 -请求地址 : http://localhost/register/save
2018-04-15 11:43:13 -HTTP METHOD : POST
2018-04-15 11:43:13 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.save
2018-04-15 11:43:13 -参数 : [UserDO{userId=null, username='test01', name='test01', password='123456', deptId=null, deptName='null', email='null', mobile='null', status=null, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[2], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-15 11:43:13 -==>  Preparing: insert into sys_user ( `username`, `name`, `password`, `dept_id`, `email`, `mobile`, `status`, `user_id_create`, `gmt_create`, `gmt_modified`, `sex`, `birth`, `pic_id`, `live_address`, `hobby`, `province`, `city`, `district` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 11:43:13 -==> Parameters: test01(String), test01(String), 267db17d80c9a8a0858bdf06d8acfd62(String), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null
2018-04-15 11:43:13 -<==    Updates: 1
2018-04-15 11:43:13 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-15 11:43:13 -==> Parameters: 4(Long)
2018-04-15 11:43:13 -<==    Updates: 0
2018-04-15 11:43:13 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-04-15 11:43:13 -==> Parameters: 4(Long), 2(Long)
2018-04-15 11:43:13 -<==    Updates: 1
2018-04-15 11:43:13 -耗时 : 185
2018-04-15 11:43:13 -返回值 : {msg=操作成功, code=0}
2018-04-15 11:43:17 -请求地址 : http://localhost/login
2018-04-15 11:43:17 -HTTP METHOD : GET
2018-04-15 11:43:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:43:17 -参数 : []
2018-04-15 11:43:17 -耗时 : 1
2018-04-15 11:43:17 -返回值 : login
2018-04-15 11:43:17 -请求地址 : http://localhost/login
2018-04-15 11:43:17 -HTTP METHOD : GET
2018-04-15 11:43:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 11:43:17 -参数 : []
2018-04-15 11:43:17 -耗时 : 1
2018-04-15 11:43:17 -返回值 : login
2018-04-15 11:43:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:43:26 -==> Parameters: test01(String)
2018-04-15 11:43:26 -<==      Total: 1
2018-04-15 11:43:26 -请求地址 : http://localhost/login
2018-04-15 11:43:26 -HTTP METHOD : POST
2018-04-15 11:43:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 11:43:26 -参数 : [test01, 123456]
2018-04-15 11:43:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 11:43:26 -==> Parameters: test01(String)
2018-04-15 11:43:26 -<==      Total: 1
2018-04-15 11:43:26 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - test01, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.NullPointerException: null
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:65)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$e82535b1.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-15 11:43:26 -耗时 : 7
2018-04-15 11:43:26 -返回值 : {msg=用户或密码错误, code=500}
2018-04-15 11:52:02 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 7956 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-15 11:52:02 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-15 11:52:02 -The following profiles are active: dev
2018-04-15 11:52:02 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-15 11:52:02 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:52:02 CST 2018]; root of context hierarchy
2018-04-15 11:52:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-15 11:52:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$42615d96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$34ba8c3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-15 11:52:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-15 11:52:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-15 11:52:05 -Tomcat initialized with port(s): 80 (http)
2018-04-15 11:52:05 -Starting service [Tomcat]
2018-04-15 11:52:05 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-15 11:52:05 -Initializing Spring embedded WebApplicationContext
2018-04-15 11:52:05 -Root WebApplicationContext: initialization completed in 3296 ms
2018-04-15 11:52:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-15 11:52:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-15 11:52:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-15 11:52:06 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-15 11:52:06 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-15 11:52:06 -Filter xssFilter was not registered (disabled)
2018-04-15 11:52:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-15 11:52:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-15 11:52:06 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-15 11:52:06 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-15 11:52:06 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:52:02 CST 2018]; root of context hierarchy
2018-04-15 11:52:06 -{dataSource-1} inited
2018-04-15 11:52:07 -Using default implementation for ThreadExecutor
2018-04-15 11:52:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-15 11:52:07 -Quartz Scheduler v.2.2.1 created.
2018-04-15 11:52:07 -RAMJobStore initialized.
2018-04-15 11:52:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-15 11:52:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-15 11:52:07 -Quartz scheduler version: 2.2.1
2018-04-15 11:52:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@ace2408
2018-04-15 11:52:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-15 11:52:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:52:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-15 11:52:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-15 11:52:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:52:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-15 11:52:08 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-15 11:52:08 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-15 11:52:08 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-15 11:52:08 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-15 11:52:08 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-15 11:52:08 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-15 11:52:08 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-15 11:52:08 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-15 11:52:08 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-15 11:52:08 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-15 11:52:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-15 11:52:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-15 11:52:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-15 11:52:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-15 11:52:08 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-15 11:52:08 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-15 11:52:08 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:52:08 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-15 11:52:08 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-15 11:52:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-15 11:52:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-15 11:52:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-15 11:52:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-15 11:52:08 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-15 11:52:08 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-15 11:52:08 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-15 11:52:08 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-15 11:52:08 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:52:08 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-15 11:52:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-15 11:52:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-15 11:52:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-15 11:52:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-15 11:52:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-15 11:52:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-15 11:52:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-15 11:52:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-15 11:52:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-15 11:52:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-15 11:52:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-15 11:52:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-15 11:52:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-15 11:52:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-15 11:52:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-15 11:52:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:52:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-15 11:52:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-15 11:52:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-15 11:52:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:52:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-15 11:52:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-15 11:52:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-15 11:52:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-15 11:52:09 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Sun Apr 15 11:52:02 CST 2018]; root of context hierarchy
2018-04-15 11:52:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:52:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:52:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:52:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-15 11:52:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-15 11:52:11 -

Using default security password: 6519a7bd-fce3-474f-8a2b-43e9260eff56

2018-04-15 11:52:11 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-15 11:52:11 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@c3ca482, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b338591, org.springframework.security.web.context.SecurityContextPersistenceFilter@40071890, org.springframework.security.web.header.HeaderWriterFilter@2b30b627, org.springframework.security.web.csrf.CsrfFilter@606f0f70, org.springframework.security.web.authentication.logout.LogoutFilter@239bc43f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63d9e1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@638341b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@277474fc, org.springframework.security.web.session.SessionManagementFilter@3c2f310c, org.springframework.security.web.access.ExceptionTranslationFilter@1107c465]
2018-04-15 11:52:12 -Registering beans for JMX exposure on startup
2018-04-15 11:52:12 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-15 11:52:12 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-15 11:52:12 -Starting beans in phase 2147483647
2018-04-15 11:52:12 -Context refreshed
2018-04-15 11:52:12 -Found 1 custom documentation plugin(s)
2018-04-15 11:52:12 -Scanning for api listing references
2018-04-15 11:52:12 -Generating unique operation named: removeUsingPOST_1
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_1
2018-04-15 11:52:13 -Generating unique operation named: addUsingGET_1
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_2
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_2
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_2
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_3
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingGET_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingHEAD_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPUT_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPATCH_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingDELETE_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingTRACE_1
2018-04-15 11:52:13 -Generating unique operation named: welcomeUsingGET_1
2018-04-15 11:52:13 -Generating unique operation named: addUsingGET_2
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_3
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_3
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_4
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_5
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingGET_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingHEAD_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPUT_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPATCH_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingDELETE_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-15 11:52:13 -Generating unique operation named: updateUsingTRACE_2
2018-04-15 11:52:13 -Generating unique operation named: addUsingGET_3
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_4
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_4
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_6
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_3
2018-04-15 11:52:13 -Generating unique operation named: treeUsingGET_1
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_4
2018-04-15 11:52:13 -Generating unique operation named: addUsingGET_4
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_5
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_5
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_7
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_8
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_4
2018-04-15 11:52:13 -Generating unique operation named: updateUsingGET_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingHEAD_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_5
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPUT_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPATCH_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingDELETE_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-15 11:52:13 -Generating unique operation named: updateUsingTRACE_3
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_5
2018-04-15 11:52:13 -Generating unique operation named: addUsingGET_5
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_6
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_6
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_6
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_7
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_6
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_7
2018-04-15 11:52:13 -Generating unique operation named: listUsingHEAD_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingPOST_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingPUT_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingPATCH_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingDELETE_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingOPTIONS_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingTRACE_1
2018-04-15 11:52:13 -Generating unique operation named: addUsingGET_6
2018-04-15 11:52:13 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-15 11:52:13 -Generating unique operation named: editUsingGET_7
2018-04-15 11:52:13 -Generating unique operation named: exitUsingPOST_1
2018-04-15 11:52:13 -Generating unique operation named: listUsingGET_8
2018-04-15 11:52:13 -Generating unique operation named: removeUsingPOST_9
2018-04-15 11:52:13 -Generating unique operation named: saveUsingPOST_8
2018-04-15 11:52:13 -Generating unique operation named: updateUsingPOST_7
2018-04-15 11:52:13 -Generating unique operation named: userUsingGET_1
2018-04-15 11:52:13 -Starting Quartz Scheduler now
2018-04-15 11:52:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-15 11:52:13 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-15 11:52:13 -Starting ProtocolHandler ["http-nio-80"]
2018-04-15 11:52:13 -Using a shared selector for servlet write/read
2018-04-15 11:52:13 -Tomcat started on port(s): 80 (http)
2018-04-15 11:52:13 -Started BootdoApplication in 12.213 seconds (JVM running for 12.668)
2018-04-15 12:02:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-15 12:02:28 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-15 12:02:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-15 12:02:28 -Enabling session validation scheduler...
2018-04-15 12:02:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 12:02:28 -==> Parameters: test01(String)
2018-04-15 12:02:28 -<==      Total: 1
2018-04-15 12:02:28 -请求地址 : http://localhost/login
2018-04-15 12:02:28 -HTTP METHOD : POST
2018-04-15 12:02:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 12:02:28 -参数 : [test01, 123456]
2018-04-15 12:02:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 12:02:28 -==> Parameters: test01(String)
2018-04-15 12:02:28 -<==      Total: 1
2018-04-15 12:02:28 -耗时 : 16
2018-04-15 12:02:28 -返回值 : {msg=操作成功, code=0}
2018-04-15 12:02:28 -请求地址 : http://localhost/index
2018-04-15 12:02:28 -HTTP METHOD : GET
2018-04-15 12:02:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 12:02:28 -参数 : [{}]
2018-04-15 12:02:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 12:02:28 -==> Parameters: 4(Long)
2018-04-15 12:02:28 -<==      Total: 0
2018-04-15 12:02:28 -耗时 : 48
2018-04-15 12:02:28 -返回值 : index_v1
2018-04-15 12:02:28 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-15 12:02:28 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-15 12:02:28 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-15 12:02:28 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-15 12:02:28 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-15 12:02:28 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-15 12:02:28 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-15 12:02:28 -请求地址 : http://localhost/main
2018-04-15 12:02:28 -HTTP METHOD : GET
2018-04-15 12:02:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 12:02:28 -参数 : []
2018-04-15 12:02:28 -耗时 : 2
2018-04-15 12:02:28 -返回值 : main
2018-04-15 12:02:28 -请求地址 : http://localhost/main
2018-04-15 12:02:28 -HTTP METHOD : GET
2018-04-15 12:02:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 12:02:28 -参数 : []
2018-04-15 12:02:28 -耗时 : 1
2018-04-15 12:02:28 -返回值 : main
2018-04-15 12:02:36 -请求地址 : http://localhost/
2018-04-15 12:02:36 -HTTP METHOD : GET
2018-04-15 12:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-15 12:02:36 -参数 : [{}]
2018-04-15 12:02:36 -耗时 : 0
2018-04-15 12:02:36 -返回值 : redirect:/login
2018-04-15 12:02:36 -请求地址 : http://localhost/login
2018-04-15 12:02:36 -HTTP METHOD : GET
2018-04-15 12:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 12:02:36 -参数 : []
2018-04-15 12:02:36 -耗时 : 1
2018-04-15 12:02:36 -返回值 : login
2018-04-15 12:02:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 12:02:38 -==> Parameters: admin(String)
2018-04-15 12:02:38 -<==      Total: 1
2018-04-15 12:02:38 -请求地址 : http://localhost/login
2018-04-15 12:02:38 -HTTP METHOD : POST
2018-04-15 12:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 12:02:38 -参数 : [admin, 123456]
2018-04-15 12:02:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 12:02:38 -==> Parameters: admin(String)
2018-04-15 12:02:38 -<==      Total: 1
2018-04-15 12:02:38 -耗时 : 0
2018-04-15 12:02:38 -返回值 : {msg=操作成功, code=0}
2018-04-15 12:02:38 -请求地址 : http://localhost/index
2018-04-15 12:02:38 -HTTP METHOD : GET
2018-04-15 12:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 12:02:38 -参数 : [{}]
2018-04-15 12:02:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 12:02:38 -==> Parameters: 1(Long)
2018-04-15 12:02:38 -<==      Total: 15
2018-04-15 12:02:38 -耗时 : 8
2018-04-15 12:02:38 -返回值 : index_v1
2018-04-15 12:02:38 -请求地址 : http://localhost/main
2018-04-15 12:02:38 -HTTP METHOD : GET
2018-04-15 12:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 12:02:38 -参数 : []
2018-04-15 12:02:38 -耗时 : 0
2018-04-15 12:02:38 -返回值 : main
2018-04-15 12:02:38 -请求地址 : http://localhost/main
2018-04-15 12:02:38 -HTTP METHOD : GET
2018-04-15 12:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 12:02:38 -参数 : []
2018-04-15 12:02:38 -耗时 : 0
2018-04-15 12:02:38 -返回值 : main
2018-04-15 12:02:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-15 12:02:41 -==> Parameters: 1(Long)
2018-04-15 12:02:41 -<==      Total: 40
2018-04-15 12:02:41 -请求地址 : http://localhost/sys/menu/
2018-04-15 12:02:41 -HTTP METHOD : GET
2018-04-15 12:02:41 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2018-04-15 12:02:41 -参数 : [{}]
2018-04-15 12:02:41 -耗时 : 0
2018-04-15 12:02:41 -返回值 : system/menu/menu
2018-04-15 12:02:41 -请求地址 : http://localhost/sys/menu/list
2018-04-15 12:02:41 -HTTP METHOD : GET
2018-04-15 12:02:41 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-15 12:02:41 -参数 : [{sort=order_num}]
2018-04-15 12:02:41 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-15 12:02:41 -==> Parameters: 
2018-04-15 12:02:41 -<==      Total: 65
2018-04-15 12:02:41 -耗时 : 25
2018-04-15 12:02:41 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-15 12:02:42 -请求地址 : http://localhost/sys/role
2018-04-15 12:02:42 -HTTP METHOD : GET
2018-04-15 12:02:42 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-15 12:02:42 -参数 : []
2018-04-15 12:02:42 -耗时 : 0
2018-04-15 12:02:42 -返回值 : system/role/role
2018-04-15 12:02:42 -请求地址 : http://localhost/sys/role/list
2018-04-15 12:02:42 -HTTP METHOD : GET
2018-04-15 12:02:42 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-15 12:02:42 -参数 : []
2018-04-15 12:02:42 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-15 12:02:42 -==> Parameters: 
2018-04-15 12:02:42 -<==      Total: 2
2018-04-15 12:02:42 -耗时 : 6
2018-04-15 12:02:42 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-15 12:02:45 -请求地址 : http://localhost/sys/role/edit/2
2018-04-15 12:02:45 -HTTP METHOD : GET
2018-04-15 12:02:45 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-15 12:02:45 -参数 : [2, {}]
2018-04-15 12:02:45 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-15 12:02:45 -==> Parameters: 2(Long)
2018-04-15 12:02:45 -<==      Total: 1
2018-04-15 12:02:45 -耗时 : 6
2018-04-15 12:02:45 -返回值 : system/role/edit
2018-04-15 12:02:45 -请求地址 : http://localhost/sys/menu/tree/2
2018-04-15 12:02:45 -HTTP METHOD : GET
2018-04-15 12:02:45 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-15 12:02:45 -参数 : [2]
2018-04-15 12:02:45 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-15 12:02:45 -==> Parameters: 
2018-04-15 12:02:45 -<==      Total: 65
2018-04-15 12:02:45 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-15 12:02:45 -==> Parameters: 2(Long)
2018-04-15 12:02:45 -<==      Total: 0
2018-04-15 12:02:45 -耗时 : 27
2018-04-15 12:02:45 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-15 12:03:53 -请求地址 : http://localhost/sys/role/update
2018-04-15 12:03:53 -HTTP METHOD : POST
2018-04-15 12:03:53 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2018-04-15 12:03:53 -参数 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[108, 113, 112, 111, 110, 107, 105, 124, 123, 122, 121, 115, 103, 128, 127, 126, 125, 116, 102, 120, 119, 118, 117, 114, -1]}]
2018-04-15 12:03:53 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2018-04-15 12:03:53 -==> Parameters: 普通用户角色(String), (String), 2(Long)
2018-04-15 12:03:53 -<==    Updates: 1
2018-04-15 12:03:53 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2018-04-15 12:03:53 -==> Parameters: 2(Long)
2018-04-15 12:03:53 -<==    Updates: 0
2018-04-15 12:03:53 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) 
2018-04-15 12:03:53 -==> Parameters: 2(Long), 108(Long), 2(Long), 113(Long), 2(Long), 112(Long), 2(Long), 111(Long), 2(Long), 110(Long), 2(Long), 107(Long), 2(Long), 105(Long), 2(Long), 124(Long), 2(Long), 123(Long), 2(Long), 122(Long), 2(Long), 121(Long), 2(Long), 115(Long), 2(Long), 103(Long), 2(Long), 128(Long), 2(Long), 127(Long), 2(Long), 126(Long), 2(Long), 125(Long), 2(Long), 116(Long), 2(Long), 102(Long), 2(Long), 120(Long), 2(Long), 119(Long), 2(Long), 118(Long), 2(Long), 117(Long), 2(Long), 114(Long), 2(Long), -1(Long)
2018-04-15 12:03:53 -<==    Updates: 25
2018-04-15 12:03:53 -耗时 : 406
2018-04-15 12:03:53 -返回值 : {msg=操作成功, code=0}
2018-04-15 12:03:53 -请求地址 : http://localhost/sys/role/list
2018-04-15 12:03:53 -HTTP METHOD : GET
2018-04-15 12:03:53 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-15 12:03:53 -参数 : []
2018-04-15 12:03:53 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-15 12:03:53 -==> Parameters: 
2018-04-15 12:03:53 -<==      Total: 2
2018-04-15 12:03:53 -耗时 : 4
2018-04-15 12:03:53 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-15 12:03:56 -请求地址 : http://localhost/
2018-04-15 12:03:56 -HTTP METHOD : GET
2018-04-15 12:03:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-15 12:03:56 -参数 : [{}]
2018-04-15 12:03:56 -耗时 : 1
2018-04-15 12:03:56 -返回值 : redirect:/login
2018-04-15 12:03:56 -请求地址 : http://localhost/login
2018-04-15 12:03:56 -HTTP METHOD : GET
2018-04-15 12:03:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 12:03:56 -参数 : []
2018-04-15 12:03:56 -耗时 : 0
2018-04-15 12:03:56 -返回值 : login
2018-04-15 12:04:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 12:04:01 -==> Parameters: test01(String)
2018-04-15 12:04:01 -<==      Total: 1
2018-04-15 12:04:01 -请求地址 : http://localhost/login
2018-04-15 12:04:01 -HTTP METHOD : POST
2018-04-15 12:04:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 12:04:01 -参数 : [test01, 123456]
2018-04-15 12:04:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 12:04:01 -==> Parameters: test01(String)
2018-04-15 12:04:01 -<==      Total: 1
2018-04-15 12:04:01 -耗时 : 3
2018-04-15 12:04:01 -返回值 : {msg=操作成功, code=0}
2018-04-15 12:04:01 -请求地址 : http://localhost/index
2018-04-15 12:04:01 -HTTP METHOD : GET
2018-04-15 12:04:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 12:04:01 -参数 : [{}]
2018-04-15 12:04:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 12:04:01 -==> Parameters: 4(Long)
2018-04-15 12:04:01 -<==      Total: 8
2018-04-15 12:04:01 -耗时 : 7
2018-04-15 12:04:01 -返回值 : index_v1
2018-04-15 12:04:01 -请求地址 : http://localhost/main
2018-04-15 12:04:01 -HTTP METHOD : GET
2018-04-15 12:04:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 12:04:01 -参数 : []
2018-04-15 12:04:01 -耗时 : 0
2018-04-15 12:04:01 -返回值 : main
2018-04-15 12:04:02 -请求地址 : http://localhost/main
2018-04-15 12:04:02 -HTTP METHOD : GET
2018-04-15 12:04:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 12:04:02 -参数 : []
2018-04-15 12:04:02 -耗时 : 0
2018-04-15 12:04:02 -返回值 : main
2018-04-15 12:04:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-15 12:04:04 -==> Parameters: 4(Long)
2018-04-15 12:04:04 -<==      Total: 21
2018-04-15 12:04:04 -请求地址 : http://localhost/system/order/
2018-04-15 12:04:04 -HTTP METHOD : GET
2018-04-15 12:04:04 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-15 12:04:04 -参数 : []
2018-04-15 12:04:04 -耗时 : 0
2018-04-15 12:04:04 -返回值 : system/order/order
2018-04-15 12:04:04 -请求地址 : http://localhost/system/order/list
2018-04-15 12:04:04 -HTTP METHOD : GET
2018-04-15 12:04:04 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-15 12:04:04 -参数 : [{limit=10, offset=0}]
2018-04-15 12:04:04 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description` from t_order order by id desc limit ?, ? 
2018-04-15 12:04:04 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 12:04:04 -<==      Total: 1
2018-04-15 12:04:04 -==>  Preparing: select count(*) from t_order 
2018-04-15 12:04:04 -==> Parameters: 
2018-04-15 12:04:04 -<==      Total: 1
2018-04-15 12:04:04 -耗时 : 22
2018-04-15 12:04:04 -返回值 : com.bootdo.common.utils.PageUtils@276c9eab
2018-04-15 13:02:28 -Validating all active sessions...
2018-04-15 13:02:28 -Finished session validation.  [1] sessions were stopped.
2018-04-15 13:46:47 -请求地址 : http://localhost/login;JSESSIONID=4738b99e-8bbf-4936-84b4-730b557e019b
2018-04-15 13:46:47 -HTTP METHOD : GET
2018-04-15 13:46:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 13:46:47 -参数 : []
2018-04-15 13:46:47 -耗时 : 0
2018-04-15 13:46:47 -返回值 : login
2018-04-15 13:46:49 -请求地址 : http://localhost/register
2018-04-15 13:46:49 -HTTP METHOD : GET
2018-04-15 13:46:49 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-15 13:46:49 -参数 : [{}]
2018-04-15 13:46:49 -耗时 : 0
2018-04-15 13:46:49 -返回值 : system/user/register
2018-04-15 13:46:59 -请求地址 : http://localhost/register/exit
2018-04-15 13:46:59 -HTTP METHOD : POST
2018-04-15 13:46:59 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-15 13:46:59 -参数 : [{username=test03}]
2018-04-15 13:46:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 13:46:59 -==> Parameters: test03(String)
2018-04-15 13:46:59 -<==      Total: 0
2018-04-15 13:46:59 -耗时 : 5
2018-04-15 13:46:59 -返回值 : true
2018-04-15 13:47:02 -请求地址 : http://localhost/register/save
2018-04-15 13:47:02 -HTTP METHOD : POST
2018-04-15 13:47:02 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.save
2018-04-15 13:47:02 -参数 : [UserDO{userId=null, username='test03', name='test03', password='123456', deptId=null, deptName='null', email='null', mobile='null', status=null, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[2], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-15 13:47:02 -==>  Preparing: insert into sys_user ( `username`, `name`, `password`, `dept_id`, `email`, `mobile`, `status`, `user_id_create`, `gmt_create`, `gmt_modified`, `sex`, `birth`, `pic_id`, `live_address`, `hobby`, `province`, `city`, `district` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-15 13:47:02 -==> Parameters: test03(String), test03(String), 4b91e3cca0b73a18cd16d57a28d6957a(String), null, null, null, 1(Integer), null, null, null, null, null, null, null, null, null, null, null
2018-04-15 13:47:02 -<==    Updates: 1
2018-04-15 13:47:02 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-15 13:47:02 -==> Parameters: 5(Long)
2018-04-15 13:47:02 -<==    Updates: 0
2018-04-15 13:47:02 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-04-15 13:47:02 -==> Parameters: 5(Long), 2(Long)
2018-04-15 13:47:02 -<==    Updates: 1
2018-04-15 13:47:03 -耗时 : 357
2018-04-15 13:47:03 -返回值 : {msg=操作成功, code=0}
2018-04-15 13:47:03 -请求地址 : http://localhost/login
2018-04-15 13:47:03 -HTTP METHOD : GET
2018-04-15 13:47:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 13:47:03 -参数 : []
2018-04-15 13:47:03 -耗时 : 1
2018-04-15 13:47:03 -返回值 : login
2018-04-15 13:47:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 13:47:12 -==> Parameters: test03(String)
2018-04-15 13:47:12 -<==      Total: 1
2018-04-15 13:47:12 -请求地址 : http://localhost/login
2018-04-15 13:47:12 -HTTP METHOD : POST
2018-04-15 13:47:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 13:47:12 -参数 : [test03, 123456]
2018-04-15 13:47:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 13:47:12 -==> Parameters: test03(String)
2018-04-15 13:47:12 -<==      Total: 1
2018-04-15 13:47:12 -耗时 : 4
2018-04-15 13:47:12 -返回值 : {msg=操作成功, code=0}
2018-04-15 13:47:12 -请求地址 : http://localhost/index
2018-04-15 13:47:12 -HTTP METHOD : GET
2018-04-15 13:47:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 13:47:12 -参数 : [{}]
2018-04-15 13:47:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 13:47:12 -==> Parameters: 5(Long)
2018-04-15 13:47:12 -<==      Total: 8
2018-04-15 13:47:12 -耗时 : 6
2018-04-15 13:47:12 -返回值 : index_v1
2018-04-15 13:47:12 -请求地址 : http://localhost/main
2018-04-15 13:47:12 -HTTP METHOD : GET
2018-04-15 13:47:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 13:47:12 -参数 : []
2018-04-15 13:47:12 -耗时 : 0
2018-04-15 13:47:12 -返回值 : main
2018-04-15 13:47:12 -请求地址 : http://localhost/main
2018-04-15 13:47:12 -HTTP METHOD : GET
2018-04-15 13:47:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 13:47:12 -参数 : []
2018-04-15 13:47:12 -耗时 : 1
2018-04-15 13:47:12 -返回值 : main
2018-04-15 13:47:17 -请求地址 : http://localhost/
2018-04-15 13:47:17 -HTTP METHOD : GET
2018-04-15 13:47:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-15 13:47:17 -参数 : [{}]
2018-04-15 13:47:17 -耗时 : 0
2018-04-15 13:47:17 -返回值 : redirect:/login
2018-04-15 13:47:17 -请求地址 : http://localhost/login
2018-04-15 13:47:17 -HTTP METHOD : GET
2018-04-15 13:47:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-15 13:47:17 -参数 : []
2018-04-15 13:47:17 -耗时 : 0
2018-04-15 13:47:17 -返回值 : login
2018-04-15 13:48:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 13:48:37 -==> Parameters: admin(String)
2018-04-15 13:48:37 -<==      Total: 1
2018-04-15 13:48:37 -请求地址 : http://localhost/login
2018-04-15 13:48:37 -HTTP METHOD : POST
2018-04-15 13:48:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-15 13:48:37 -参数 : [admin, 123456]
2018-04-15 13:48:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-15 13:48:37 -==> Parameters: admin(String)
2018-04-15 13:48:37 -<==      Total: 1
2018-04-15 13:48:37 -耗时 : 0
2018-04-15 13:48:37 -返回值 : {msg=操作成功, code=0}
2018-04-15 13:48:37 -请求地址 : http://localhost/index
2018-04-15 13:48:37 -HTTP METHOD : GET
2018-04-15 13:48:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-15 13:48:37 -参数 : [{}]
2018-04-15 13:48:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-15 13:48:37 -==> Parameters: 1(Long)
2018-04-15 13:48:37 -<==      Total: 15
2018-04-15 13:48:37 -耗时 : 6
2018-04-15 13:48:37 -返回值 : index_v1
2018-04-15 13:48:37 -请求地址 : http://localhost/main
2018-04-15 13:48:37 -HTTP METHOD : GET
2018-04-15 13:48:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 13:48:37 -参数 : []
2018-04-15 13:48:37 -耗时 : 0
2018-04-15 13:48:37 -返回值 : main
2018-04-15 13:48:37 -请求地址 : http://localhost/main
2018-04-15 13:48:37 -HTTP METHOD : GET
2018-04-15 13:48:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-15 13:48:37 -参数 : []
2018-04-15 13:48:37 -耗时 : 1
2018-04-15 13:48:37 -返回值 : main
2018-04-15 13:48:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-15 13:48:40 -==> Parameters: 1(Long)
2018-04-15 13:48:40 -<==      Total: 40
2018-04-15 13:48:40 -请求地址 : http://localhost/system/order/
2018-04-15 13:48:40 -HTTP METHOD : GET
2018-04-15 13:48:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-15 13:48:40 -参数 : []
2018-04-15 13:48:40 -耗时 : 0
2018-04-15 13:48:40 -返回值 : system/order/order
2018-04-15 13:48:40 -请求地址 : http://localhost/system/order/list
2018-04-15 13:48:40 -HTTP METHOD : GET
2018-04-15 13:48:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-15 13:48:40 -参数 : [{limit=10, offset=0}]
2018-04-15 13:48:40 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description` from t_order order by id desc limit ?, ? 
2018-04-15 13:48:40 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 13:48:40 -<==      Total: 1
2018-04-15 13:48:40 -==>  Preparing: select count(*) from t_order 
2018-04-15 13:48:40 -==> Parameters: 
2018-04-15 13:48:40 -<==      Total: 1
2018-04-15 13:48:40 -耗时 : 5
2018-04-15 13:48:40 -返回值 : com.bootdo.common.utils.PageUtils@d5e83cf
2018-04-15 13:48:46 -请求地址 : http://localhost/system/order/edit/1
2018-04-15 13:48:46 -HTTP METHOD : GET
2018-04-15 13:48:46 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2018-04-15 13:48:46 -参数 : [1, {}]
2018-04-15 13:48:46 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description` from t_order where id = ? 
2018-04-15 13:48:46 -==> Parameters: 1(Long)
2018-04-15 13:48:46 -<==      Total: 1
2018-04-15 13:48:46 -耗时 : 0
2018-04-15 13:48:46 -返回值 : system/order/edit
2018-04-15 13:48:55 -请求地址 : http://localhost/system/good
2018-04-15 13:48:55 -HTTP METHOD : GET
2018-04-15 13:48:55 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-15 13:48:55 -参数 : []
2018-04-15 13:48:55 -耗时 : 0
2018-04-15 13:48:55 -返回值 : system/good/good
2018-04-15 13:48:55 -请求地址 : http://localhost/system/good/list
2018-04-15 13:48:55 -HTTP METHOD : GET
2018-04-15 13:48:55 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-15 13:48:55 -参数 : [{limit=10, offset=0}]
2018-04-15 13:48:55 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-15 13:48:55 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 13:48:55 -<==      Total: 2
2018-04-15 13:48:55 -==>  Preparing: select count(*) from t_good 
2018-04-15 13:48:55 -==> Parameters: 
2018-04-15 13:48:55 -<==      Total: 1
2018-04-15 13:48:55 -耗时 : 19
2018-04-15 13:48:55 -返回值 : com.bootdo.common.utils.PageUtils@1bbabea2
2018-04-15 13:49:00 -请求地址 : http://localhost/system/car
2018-04-15 13:49:00 -HTTP METHOD : GET
2018-04-15 13:49:00 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-15 13:49:00 -参数 : []
2018-04-15 13:49:00 -耗时 : 0
2018-04-15 13:49:00 -返回值 : system/car/car
2018-04-15 13:49:00 -请求地址 : http://localhost/system/car/list
2018-04-15 13:49:00 -HTTP METHOD : GET
2018-04-15 13:49:00 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-15 13:49:00 -参数 : [{limit=10, offset=0}]
2018-04-15 13:49:00 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-15 13:49:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 13:49:00 -<==      Total: 1
2018-04-15 13:49:00 -==>  Preparing: select count(*) from t_car 
2018-04-15 13:49:00 -==> Parameters: 
2018-04-15 13:49:00 -<==      Total: 1
2018-04-15 13:49:00 -耗时 : 21
2018-04-15 13:49:00 -返回值 : com.bootdo.common.utils.PageUtils@1dae3a9f
2018-04-15 13:49:04 -请求地址 : http://localhost/system/logistics
2018-04-15 13:49:04 -HTTP METHOD : GET
2018-04-15 13:49:04 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-15 13:49:04 -参数 : []
2018-04-15 13:49:04 -耗时 : 0
2018-04-15 13:49:04 -返回值 : system/logistics/logistics
2018-04-15 13:49:04 -请求地址 : http://localhost/system/logistics/list
2018-04-15 13:49:04 -HTTP METHOD : GET
2018-04-15 13:49:04 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-15 13:49:04 -参数 : [{limit=10, offset=0}]
2018-04-15 13:49:04 -==>  Preparing: select `id`,`no`,`good_id`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-15 13:49:04 -==> Parameters: 0(Integer), 10(Integer)
2018-04-15 13:49:04 -<==      Total: 1
2018-04-15 13:49:04 -==>  Preparing: select count(*) from t_logistics 
2018-04-15 13:49:04 -==> Parameters: 
2018-04-15 13:49:04 -<==      Total: 1
2018-04-15 13:49:04 -耗时 : 16
2018-04-15 13:49:04 -返回值 : com.bootdo.common.utils.PageUtils@4d36992a
2018-04-15 14:02:28 -Validating all active sessions...
2018-04-15 14:02:28 -Finished session validation.  No sessions were stopped.
2018-04-15 15:02:28 -Validating all active sessions...
2018-04-15 15:02:28 -Finished session validation.  [1] sessions were stopped.
2018-04-15 16:02:28 -Validating all active sessions...
2018-04-15 16:02:28 -Finished session validation.  No sessions were stopped.
2018-04-15 17:02:28 -Validating all active sessions...
2018-04-15 17:02:28 -Finished session validation.  No sessions were stopped.
2018-04-15 18:02:28 -Validating all active sessions...
2018-04-15 18:02:28 -Finished session validation.  No sessions were stopped.
2018-04-15 19:02:28 -Validating all active sessions...
2018-04-15 19:02:28 -Finished session validation.  No sessions were stopped.
2018-04-15 20:02:28 -Validating all active sessions...
2018-04-15 20:02:28 -Finished session validation.  No sessions were stopped.
2018-04-15 21:02:28 -Validating all active sessions...
2018-04-15 21:02:28 -Finished session validation.  No sessions were stopped.
