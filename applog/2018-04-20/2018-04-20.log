2018-04-20 09:38:10 -Starting BootdoApplication on SDWM--20170519C with PID 25152 (E:\project\demo\logisticsSystem\target\classes started by Administrator in E:\project\demo\logisticsSystem)
2018-04-20 09:38:10 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 09:38:10 -The following profiles are active: dev
2018-04-20 09:38:10 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Apr 20 09:38:10 CST 2018]; root of context hierarchy
2018-04-20 09:38:10 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 09:38:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 09:38:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$982f4523] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8a8873ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 09:38:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 09:38:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 09:38:15 -Tomcat initialized with port(s): 80 (http)
2018-04-20 09:38:15 -Starting service [Tomcat]
2018-04-20 09:38:15 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 09:38:15 -Initializing Spring embedded WebApplicationContext
2018-04-20 09:38:15 -Root WebApplicationContext: initialization completed in 4621 ms
2018-04-20 09:38:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 09:38:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 09:38:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 09:38:16 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 09:38:16 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 09:38:16 -Filter xssFilter was not registered (disabled)
2018-04-20 09:38:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 09:38:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 09:38:16 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 09:38:16 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 09:38:16 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Apr 20 09:38:10 CST 2018]; root of context hierarchy
2018-04-20 09:38:17 -{dataSource-1} inited
2018-04-20 09:38:18 -Using default implementation for ThreadExecutor
2018-04-20 09:38:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 09:38:18 -Quartz Scheduler v.2.2.1 created.
2018-04-20 09:38:18 -RAMJobStore initialized.
2018-04-20 09:38:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 09:38:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 09:38:18 -Quartz scheduler version: 2.2.1
2018-04-20 09:38:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3395c2a7
2018-04-20 09:38:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 09:38:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 09:38:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 09:38:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 09:38:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 09:38:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 09:38:19 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 09:38:19 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 09:38:19 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 09:38:19 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:19 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 09:38:19 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 09:38:19 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 09:38:19 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 09:38:19 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 09:38:19 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:19 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 09:38:19 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 09:38:19 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 09:38:19 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 09:38:19 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 09:38:19 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 09:38:19 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 09:38:19 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 09:38:19 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 09:38:19 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:19 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 09:38:19 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 09:38:19 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 09:38:19 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:19 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 09:38:19 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 09:38:19 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 09:38:19 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 09:38:19 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 09:38:19 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 09:38:20 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 09:38:20 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 09:38:20 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 09:38:20 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 09:38:20 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 09:38:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 09:38:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 09:38:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 09:38:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 09:38:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 09:38:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 09:38:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 09:38:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 09:38:20 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 09:38:20 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 09:38:20 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 09:38:20 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 09:38:20 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 09:38:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 09:38:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 09:38:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 09:38:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 09:38:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 09:38:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 09:38:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 09:38:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 09:38:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 09:38:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 09:38:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 09:38:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 09:38:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 09:38:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 09:38:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 09:38:21 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Apr 20 09:38:10 CST 2018]; root of context hierarchy
2018-04-20 09:38:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 09:38:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 09:38:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 09:38:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 09:38:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 09:38:23 -

Using default security password: de85f8b9-c9df-425d-baf6-9ce1c274dc61

2018-04-20 09:38:23 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 09:38:23 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3c468360, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7841c990, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d142b53, org.springframework.security.web.header.HeaderWriterFilter@50841932, org.springframework.security.web.csrf.CsrfFilter@294a12b5, org.springframework.security.web.authentication.logout.LogoutFilter@382608d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28b7646, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78805df3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e75bef1, org.springframework.security.web.session.SessionManagementFilter@11771fd6, org.springframework.security.web.access.ExceptionTranslationFilter@16b2d182]
2018-04-20 09:38:24 -Registering beans for JMX exposure on startup
2018-04-20 09:38:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 09:38:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 09:38:24 -Starting beans in phase 2147483647
2018-04-20 09:38:24 -Context refreshed
2018-04-20 09:38:24 -Found 1 custom documentation plugin(s)
2018-04-20 09:38:24 -Scanning for api listing references
2018-04-20 09:38:24 -Generating unique operation named: removeUsingPOST_1
2018-04-20 09:38:24 -Generating unique operation named: editUsingGET_1
2018-04-20 09:38:24 -Generating unique operation named: listUsingGET_1
2018-04-20 09:38:24 -Generating unique operation named: updateUsingPOST_1
2018-04-20 09:38:24 -Generating unique operation named: addUsingGET_1
2018-04-20 09:38:24 -Generating unique operation named: editUsingGET_2
2018-04-20 09:38:24 -Generating unique operation named: listUsingGET_2
2018-04-20 09:38:24 -Generating unique operation named: removeUsingPOST_2
2018-04-20 09:38:24 -Generating unique operation named: removeUsingPOST_3
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 09:38:25 -Generating unique operation named: viewUsingGET_1
2018-04-20 09:38:25 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_2
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_3
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_3
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_4
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_5
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 09:38:25 -Generating unique operation named: viewUsingGET_2
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_3
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_4
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_4
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_6
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_7
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_4
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_5
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_5
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_8
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_4
2018-04-20 09:38:25 -Generating unique operation named: treeUsingGET_1
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_5
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_5
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_6
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_6
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_9
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_10
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 09:38:25 -Generating unique operation named: viewUsingGET_3
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_6
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_7
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_7
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_11
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_12
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_7
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_7
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_8
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_8
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_8
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_9
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_8
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_9
2018-04-20 09:38:25 -Generating unique operation named: listUsingHEAD_1
2018-04-20 09:38:25 -Generating unique operation named: listUsingPOST_1
2018-04-20 09:38:25 -Generating unique operation named: listUsingPUT_1
2018-04-20 09:38:25 -Generating unique operation named: listUsingPATCH_1
2018-04-20 09:38:25 -Generating unique operation named: listUsingDELETE_1
2018-04-20 09:38:25 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 09:38:25 -Generating unique operation named: listUsingTRACE_1
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_8
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_9
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_10
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_13
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_14
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_10
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_9
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 09:38:25 -Generating unique operation named: addUsingGET_9
2018-04-20 09:38:25 -Generating unique operation named: editUsingGET_10
2018-04-20 09:38:25 -Generating unique operation named: listUsingGET_11
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_15
2018-04-20 09:38:25 -Generating unique operation named: removeUsingPOST_16
2018-04-20 09:38:25 -Generating unique operation named: saveUsingPOST_11
2018-04-20 09:38:25 -Generating unique operation named: updateUsingGET_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPOST_10
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPUT_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 09:38:25 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 09:38:26 -Generating unique operation named: addUsingGET_10
2018-04-20 09:38:26 -Generating unique operation named: editUsingGET_11
2018-04-20 09:38:26 -Generating unique operation named: listUsingGET_12
2018-04-20 09:38:26 -Generating unique operation named: removeUsingPOST_17
2018-04-20 09:38:26 -Generating unique operation named: removeUsingPOST_18
2018-04-20 09:38:26 -Generating unique operation named: saveUsingPOST_12
2018-04-20 09:38:26 -Generating unique operation named: updateUsingGET_8
2018-04-20 09:38:26 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 09:38:26 -Generating unique operation named: updateUsingPOST_11
2018-04-20 09:38:26 -Generating unique operation named: updateUsingPUT_8
2018-04-20 09:38:26 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 09:38:26 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 09:38:26 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 09:38:26 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 09:38:26 -Generating unique operation named: addUsingGET_11
2018-04-20 09:38:26 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 09:38:26 -Generating unique operation named: editUsingGET_12
2018-04-20 09:38:26 -Generating unique operation named: exitUsingPOST_1
2018-04-20 09:38:26 -Generating unique operation named: listUsingGET_13
2018-04-20 09:38:26 -Generating unique operation named: removeUsingPOST_19
2018-04-20 09:38:26 -Generating unique operation named: saveUsingPOST_13
2018-04-20 09:38:26 -Generating unique operation named: updateUsingPOST_12
2018-04-20 09:38:26 -Generating unique operation named: userUsingGET_1
2018-04-20 09:38:26 -Starting Quartz Scheduler now
2018-04-20 09:38:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 09:38:26 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 09:38:26 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 09:38:26 -Using a shared selector for servlet write/read
2018-04-20 09:38:26 -Tomcat started on port(s): 80 (http)
2018-04-20 09:38:26 -Started BootdoApplication in 16.391 seconds (JVM running for 17.115)
2018-04-20 09:41:36 -A cookie header was received [1521426041; JSESSIONID=487b35fb-0073-4de4-bc70-d9c4d5ae29c4] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2018-04-20 09:41:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 09:41:36 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 09:41:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2018-04-20 09:41:36 -Enabling session validation scheduler...
2018-04-20 09:41:36 -请求地址 : http://localhost/login;JSESSIONID=169a9b4e-a4bc-4d76-a899-05304dc86305
2018-04-20 09:41:36 -HTTP METHOD : GET
2018-04-20 09:41:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 09:41:36 -参数 : []
2018-04-20 09:41:36 -耗时 : 3
2018-04-20 09:41:36 -返回值 : login
2018-04-20 09:41:36 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 09:41:37 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 09:41:37 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 09:41:37 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 09:41:37 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 09:41:37 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 09:41:37 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 09:41:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 09:41:44 -==> Parameters: admin(String)
2018-04-20 09:41:44 -<==      Total: 1
2018-04-20 09:41:44 -请求地址 : http://localhost/login
2018-04-20 09:41:44 -HTTP METHOD : POST
2018-04-20 09:41:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 09:41:44 -参数 : [admin, 123456]
2018-04-20 09:41:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 09:41:44 -==> Parameters: admin(String)
2018-04-20 09:41:44 -<==      Total: 1
2018-04-20 09:41:44 -耗时 : 12
2018-04-20 09:41:44 -返回值 : {msg=操作成功, code=0}
2018-04-20 09:41:44 -请求地址 : http://localhost/index
2018-04-20 09:41:44 -HTTP METHOD : GET
2018-04-20 09:41:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 09:41:44 -参数 : [{}]
2018-04-20 09:41:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 09:41:44 -==> Parameters: 1(Long)
2018-04-20 09:41:44 -<==      Total: 21
2018-04-20 09:41:44 -耗时 : 78
2018-04-20 09:41:44 -返回值 : index_v1
2018-04-20 09:41:44 -请求地址 : http://localhost/main
2018-04-20 09:41:44 -HTTP METHOD : GET
2018-04-20 09:41:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 09:41:44 -参数 : []
2018-04-20 09:41:44 -耗时 : 1
2018-04-20 09:41:44 -返回值 : main
2018-04-20 09:41:44 -请求地址 : http://localhost/main
2018-04-20 09:41:44 -HTTP METHOD : GET
2018-04-20 09:41:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 09:41:44 -参数 : []
2018-04-20 09:41:44 -耗时 : 0
2018-04-20 09:41:44 -返回值 : main
2018-04-20 09:41:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 09:41:48 -==> Parameters: 1(Long)
2018-04-20 09:41:48 -<==      Total: 62
2018-04-20 09:41:48 -请求地址 : http://localhost/system/storageInput
2018-04-20 09:41:48 -HTTP METHOD : GET
2018-04-20 09:41:48 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 09:41:48 -参数 : []
2018-04-20 09:41:48 -耗时 : 0
2018-04-20 09:41:48 -返回值 : system/storageInput/storageInput
2018-04-20 09:41:48 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 09:41:48 -HTTP METHOD : GET
2018-04-20 09:41:48 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 09:41:48 -参数 : [{limit=10, offset=0}]
2018-04-20 09:41:48 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 09:41:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 09:41:48 -<==      Total: 0
2018-04-20 09:41:48 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 09:41:48 -==> Parameters: 
2018-04-20 09:41:48 -<==      Total: 1
2018-04-20 09:41:48 -耗时 : 21
2018-04-20 09:41:48 -返回值 : com.bootdo.common.utils.PageUtils@457a4e25
2018-04-20 09:41:51 -请求地址 : http://localhost/system/storageInput/add
2018-04-20 09:41:51 -HTTP METHOD : GET
2018-04-20 09:41:51 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.add
2018-04-20 09:41:51 -参数 : []
2018-04-20 09:41:51 -耗时 : 0
2018-04-20 09:41:51 -返回值 : system/storageInput/add
2018-04-20 10:24:14 -请求地址 : http://localhost/login;JSESSIONID=0aaf112d-313a-47ab-bd4a-13a7d05afe84
2018-04-20 10:24:14 -HTTP METHOD : GET
2018-04-20 10:24:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 10:24:14 -参数 : []
2018-04-20 10:24:14 -耗时 : 3
2018-04-20 10:24:14 -返回值 : login
2018-04-20 10:24:14 -请求地址 : http://localhost/login
2018-04-20 10:24:14 -HTTP METHOD : GET
2018-04-20 10:24:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 10:24:14 -参数 : []
2018-04-20 10:24:14 -耗时 : 1
2018-04-20 10:24:14 -返回值 : login
2018-04-20 10:24:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 10:24:15 -==> Parameters: admin(String)
2018-04-20 10:24:15 -<==      Total: 1
2018-04-20 10:24:15 -请求地址 : http://localhost/login
2018-04-20 10:24:15 -HTTP METHOD : POST
2018-04-20 10:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 10:24:15 -参数 : [admin, 123456]
2018-04-20 10:24:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 10:24:15 -==> Parameters: admin(String)
2018-04-20 10:24:15 -<==      Total: 1
2018-04-20 10:24:15 -耗时 : 6
2018-04-20 10:24:15 -返回值 : {msg=操作成功, code=0}
2018-04-20 10:24:15 -请求地址 : http://localhost/index
2018-04-20 10:24:15 -HTTP METHOD : GET
2018-04-20 10:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 10:24:15 -参数 : [{}]
2018-04-20 10:24:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 10:24:15 -==> Parameters: 1(Long)
2018-04-20 10:24:15 -<==      Total: 21
2018-04-20 10:24:15 -耗时 : 12
2018-04-20 10:24:15 -返回值 : index_v1
2018-04-20 10:24:15 -请求地址 : http://localhost/main
2018-04-20 10:24:15 -HTTP METHOD : GET
2018-04-20 10:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 10:24:15 -参数 : []
2018-04-20 10:24:15 -耗时 : 0
2018-04-20 10:24:15 -返回值 : main
2018-04-20 10:24:15 -请求地址 : http://localhost/main
2018-04-20 10:24:15 -HTTP METHOD : GET
2018-04-20 10:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 10:24:15 -参数 : []
2018-04-20 10:24:15 -耗时 : 0
2018-04-20 10:24:15 -返回值 : main
2018-04-20 10:24:18 -请求地址 : http://localhost/common/generator
2018-04-20 10:24:18 -HTTP METHOD : GET
2018-04-20 10:24:18 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2018-04-20 10:24:18 -参数 : []
2018-04-20 10:24:18 -耗时 : 0
2018-04-20 10:24:18 -返回值 : common/generator/list
2018-04-20 10:24:18 -请求地址 : http://localhost/common/generator/list
2018-04-20 10:24:18 -HTTP METHOD : GET
2018-04-20 10:24:18 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2018-04-20 10:24:18 -参数 : []
2018-04-20 10:24:18 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2018-04-20 10:24:18 -==> Parameters: 
2018-04-20 10:24:18 -<==      Total: 14
2018-04-20 10:24:18 -耗时 : 14
2018-04-20 10:24:18 -返回值 : [{engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=菜单管理, tableName=sys_menu}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=角色, tableName=sys_role}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=用户与角色对应关系, tableName=sys_user_role}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=, tableName=t_car}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=, tableName=t_good}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=, tableName=t_logistics}, {engine=InnoDB, createTime=2018-04-19 13:50:31.0, tableComment=, tableName=t_logistics_manage}, {engine=InnoDB, createTime=2018-04-16 17:18:08.0, tableComment=, tableName=t_order}, {engine=InnoDB, createTime=2018-04-19 16:47:52.0, tableComment=, tableName=t_order_settlement}, {engine=InnoDB, createTime=2018-04-19 14:50:37.0, tableComment=, tableName=t_storage}, {engine=InnoDB, createTime=2018-04-19 14:47:44.0, tableComment=, tableName=t_storage_input}, {engine=InnoDB, createTime=2018-04-19 14:47:58.0, tableComment=, tableName=t_storage_output}]
2018-04-20 10:24:22 -请求地址 : http://localhost/common/generator/code/t_order
2018-04-20 10:24:22 -HTTP METHOD : GET
2018-04-20 10:24:22 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2018-04-20 10:24:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f63deff, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8b35d20, t_order]
2018-04-20 10:24:22 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2018-04-20 10:24:22 -==> Parameters: t_order(String)
2018-04-20 10:24:22 -<==      Total: 1
2018-04-20 10:24:22 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2018-04-20 10:24:22 -==> Parameters: t_order(String)
2018-04-20 10:24:22 -<==      Total: 15
2018-04-20 10:24:22 -耗时 : 348
2018-04-20 10:24:22 -返回值 : null
2018-04-20 10:24:30 -请求地址 : http://localhost/common/generator/code/t_logistics
2018-04-20 10:24:30 -HTTP METHOD : GET
2018-04-20 10:24:30 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2018-04-20 10:24:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@fe71a6d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@45816e82, t_logistics]
2018-04-20 10:24:30 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2018-04-20 10:24:30 -==> Parameters: t_logistics(String)
2018-04-20 10:24:30 -<==      Total: 1
2018-04-20 10:24:30 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2018-04-20 10:24:30 -==> Parameters: t_logistics(String)
2018-04-20 10:24:30 -<==      Total: 16
2018-04-20 10:24:31 -耗时 : 186
2018-04-20 10:24:31 -返回值 : null
2018-04-20 12:36:27 -Starting BootdoApplication on SDWM--20170519C with PID 23204 (E:\project\demo\logisticsSystem\target\classes started by Administrator in E:\project\demo\logisticsSystem)
2018-04-20 12:36:27 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 12:36:27 -The following profiles are active: dev
2018-04-20 12:36:27 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 12:36:27 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Apr 20 12:36:27 CST 2018]; root of context hierarchy
2018-04-20 12:36:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 12:36:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1a2aae02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c83dca9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 12:36:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 12:36:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 12:36:31 -Tomcat initialized with port(s): 80 (http)
2018-04-20 12:36:31 -Starting service [Tomcat]
2018-04-20 12:36:31 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 12:36:31 -Initializing Spring embedded WebApplicationContext
2018-04-20 12:36:31 -Root WebApplicationContext: initialization completed in 3727 ms
2018-04-20 12:36:31 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 12:36:31 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 12:36:31 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 12:36:31 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 12:36:31 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 12:36:31 -Filter xssFilter was not registered (disabled)
2018-04-20 12:36:31 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 12:36:31 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 12:36:31 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 12:36:31 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 12:36:32 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Apr 20 12:36:27 CST 2018]; root of context hierarchy
2018-04-20 12:36:32 -{dataSource-1} inited
2018-04-20 12:36:33 -Using default implementation for ThreadExecutor
2018-04-20 12:36:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 12:36:33 -Quartz Scheduler v.2.2.1 created.
2018-04-20 12:36:33 -RAMJobStore initialized.
2018-04-20 12:36:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 12:36:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 12:36:33 -Quartz scheduler version: 2.2.1
2018-04-20 12:36:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@b671dda
2018-04-20 12:36:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 12:36:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 12:36:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 12:36:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 12:36:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 12:36:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 12:36:35 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 12:36:35 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 12:36:35 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 12:36:35 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 12:36:35 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 12:36:35 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 12:36:35 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 12:36:35 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 12:36:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 12:36:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 12:36:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 12:36:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 12:36:35 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 12:36:35 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 12:36:35 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 12:36:35 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 12:36:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 12:36:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 12:36:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 12:36:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 12:36:35 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 12:36:35 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 12:36:35 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 12:36:35 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 12:36:35 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 12:36:35 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 12:36:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 12:36:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 12:36:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 12:36:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 12:36:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 12:36:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 12:36:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 12:36:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 12:36:35 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 12:36:35 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 12:36:35 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 12:36:35 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 12:36:35 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 12:36:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 12:36:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 12:36:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 12:36:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 12:36:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 12:36:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 12:36:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 12:36:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 12:36:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 12:36:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 12:36:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 12:36:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 12:36:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 12:36:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 12:36:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 12:36:36 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Apr 20 12:36:27 CST 2018]; root of context hierarchy
2018-04-20 12:36:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 12:36:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 12:36:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 12:36:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 12:36:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 12:36:38 -

Using default security password: b1bb52fc-cdbe-491c-969f-93b6fde6f539

2018-04-20 12:36:38 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 12:36:39 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@54224125, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c013560, org.springframework.security.web.context.SecurityContextPersistenceFilter@763ddfc3, org.springframework.security.web.header.HeaderWriterFilter@2396408a, org.springframework.security.web.csrf.CsrfFilter@24ce5d4c, org.springframework.security.web.authentication.logout.LogoutFilter@34f32575, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a83cfbc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@641c8ba4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@feab3ae, org.springframework.security.web.session.SessionManagementFilter@78141c58, org.springframework.security.web.access.ExceptionTranslationFilter@7575f7e1]
2018-04-20 12:36:39 -Registering beans for JMX exposure on startup
2018-04-20 12:36:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 12:36:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 12:36:39 -Starting beans in phase 2147483647
2018-04-20 12:36:39 -Context refreshed
2018-04-20 12:36:39 -Found 1 custom documentation plugin(s)
2018-04-20 12:36:39 -Scanning for api listing references
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_1
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_1
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_2
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_2
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_2
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_3
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPUT_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 12:36:40 -Generating unique operation named: viewUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_2
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_3
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_3
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_4
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_5
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingGET_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPUT_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 12:36:40 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 12:36:40 -Generating unique operation named: viewUsingGET_2
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_3
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_4
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_4
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_6
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_7
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingGET_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPUT_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 12:36:40 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_4
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_5
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_5
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_8
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_4
2018-04-20 12:36:40 -Generating unique operation named: treeUsingGET_1
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_5
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_5
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_6
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_6
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_9
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_10
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingGET_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_6
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPUT_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 12:36:40 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 12:36:40 -Generating unique operation named: viewUsingGET_3
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_6
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_7
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_7
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_11
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_12
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_6
2018-04-20 12:36:40 -Generating unique operation named: updateUsingGET_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_7
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPUT_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 12:36:40 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_7
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_7
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_8
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_8
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_8
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_9
2018-04-20 12:36:40 -Generating unique operation named: updateUsingPOST_8
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_9
2018-04-20 12:36:40 -Generating unique operation named: listUsingHEAD_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingPOST_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingPUT_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingPATCH_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingDELETE_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 12:36:40 -Generating unique operation named: listUsingTRACE_1
2018-04-20 12:36:40 -Generating unique operation named: addUsingGET_8
2018-04-20 12:36:40 -Generating unique operation named: editUsingGET_9
2018-04-20 12:36:40 -Generating unique operation named: listUsingGET_10
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_13
2018-04-20 12:36:40 -Generating unique operation named: removeUsingPOST_14
2018-04-20 12:36:40 -Generating unique operation named: saveUsingPOST_10
2018-04-20 12:36:40 -Generating unique operation named: updateUsingGET_6
2018-04-20 12:36:41 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPOST_9
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPUT_6
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 12:36:41 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 12:36:41 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 12:36:41 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 12:36:41 -Generating unique operation named: addUsingGET_9
2018-04-20 12:36:41 -Generating unique operation named: editUsingGET_10
2018-04-20 12:36:41 -Generating unique operation named: listUsingGET_11
2018-04-20 12:36:41 -Generating unique operation named: removeUsingPOST_15
2018-04-20 12:36:41 -Generating unique operation named: removeUsingPOST_16
2018-04-20 12:36:41 -Generating unique operation named: saveUsingPOST_11
2018-04-20 12:36:41 -Generating unique operation named: updateUsingGET_7
2018-04-20 12:36:41 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPOST_10
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPUT_7
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 12:36:41 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 12:36:41 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 12:36:41 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 12:36:41 -Generating unique operation named: addUsingGET_10
2018-04-20 12:36:41 -Generating unique operation named: editUsingGET_11
2018-04-20 12:36:41 -Generating unique operation named: listUsingGET_12
2018-04-20 12:36:41 -Generating unique operation named: removeUsingPOST_17
2018-04-20 12:36:41 -Generating unique operation named: removeUsingPOST_18
2018-04-20 12:36:41 -Generating unique operation named: saveUsingPOST_12
2018-04-20 12:36:41 -Generating unique operation named: updateUsingGET_8
2018-04-20 12:36:41 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPOST_11
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPUT_8
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 12:36:41 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 12:36:41 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 12:36:41 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 12:36:41 -Generating unique operation named: addUsingGET_11
2018-04-20 12:36:41 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 12:36:41 -Generating unique operation named: editUsingGET_12
2018-04-20 12:36:41 -Generating unique operation named: exitUsingPOST_1
2018-04-20 12:36:41 -Generating unique operation named: listUsingGET_13
2018-04-20 12:36:41 -Generating unique operation named: removeUsingPOST_19
2018-04-20 12:36:41 -Generating unique operation named: saveUsingPOST_13
2018-04-20 12:36:41 -Generating unique operation named: updateUsingPOST_12
2018-04-20 12:36:41 -Generating unique operation named: userUsingGET_1
2018-04-20 12:36:41 -Starting Quartz Scheduler now
2018-04-20 12:36:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 12:36:41 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 12:36:41 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 12:36:41 -Using a shared selector for servlet write/read
2018-04-20 12:36:41 -Tomcat started on port(s): 80 (http)
2018-04-20 12:36:41 -Started BootdoApplication in 14.549 seconds (JVM running for 15.108)
2018-04-20 12:38:28 -A cookie header was received [1521426041; JSESSIONID=0aaf112d-313a-47ab-bd4a-13a7d05afe84] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2018-04-20 12:38:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 12:38:28 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 12:38:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2018-04-20 12:38:28 -Enabling session validation scheduler...
2018-04-20 12:38:28 -请求地址 : http://localhost/login;JSESSIONID=2317f29e-a412-4da8-b071-cada2fabeb79
2018-04-20 12:38:28 -HTTP METHOD : GET
2018-04-20 12:38:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 12:38:28 -参数 : []
2018-04-20 12:38:28 -耗时 : 4
2018-04-20 12:38:28 -返回值 : login
2018-04-20 12:38:28 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 12:38:28 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 12:38:28 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 12:38:28 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 12:38:28 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 12:38:28 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 12:38:28 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 12:38:30 -请求地址 : http://localhost/login
2018-04-20 12:38:30 -HTTP METHOD : GET
2018-04-20 12:38:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 12:38:30 -参数 : []
2018-04-20 12:38:30 -耗时 : 0
2018-04-20 12:38:30 -返回值 : login
2018-04-20 12:38:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 12:38:34 -==> Parameters: admin(String)
2018-04-20 12:38:34 -<==      Total: 1
2018-04-20 12:38:34 -请求地址 : http://localhost/login
2018-04-20 12:38:34 -HTTP METHOD : POST
2018-04-20 12:38:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 12:38:34 -参数 : [admin, 123456]
2018-04-20 12:38:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 12:38:34 -==> Parameters: admin(String)
2018-04-20 12:38:34 -<==      Total: 1
2018-04-20 12:38:34 -耗时 : 16
2018-04-20 12:38:34 -返回值 : {msg=操作成功, code=0}
2018-04-20 12:38:34 -请求地址 : http://localhost/index
2018-04-20 12:38:34 -HTTP METHOD : GET
2018-04-20 12:38:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 12:38:34 -参数 : [{}]
2018-04-20 12:38:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 12:38:34 -==> Parameters: 1(Long)
2018-04-20 12:38:34 -<==      Total: 21
2018-04-20 12:38:34 -耗时 : 54
2018-04-20 12:38:34 -返回值 : index_v1
2018-04-20 12:38:34 -请求地址 : http://localhost/main
2018-04-20 12:38:34 -HTTP METHOD : GET
2018-04-20 12:38:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:38:34 -参数 : []
2018-04-20 12:38:34 -耗时 : 1
2018-04-20 12:38:34 -返回值 : main
2018-04-20 12:38:35 -请求地址 : http://localhost/main
2018-04-20 12:38:35 -HTTP METHOD : GET
2018-04-20 12:38:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:38:35 -参数 : []
2018-04-20 12:38:35 -耗时 : 0
2018-04-20 12:38:35 -返回值 : main
2018-04-20 12:38:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 12:38:40 -==> Parameters: 1(Long)
2018-04-20 12:38:40 -<==      Total: 62
2018-04-20 12:38:40 -请求地址 : http://localhost/system/order/
2018-04-20 12:38:40 -HTTP METHOD : GET
2018-04-20 12:38:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 12:38:40 -参数 : []
2018-04-20 12:38:40 -耗时 : 0
2018-04-20 12:38:40 -返回值 : system/order/order
2018-04-20 12:38:42 -请求地址 : http://localhost/system/order/list
2018-04-20 12:38:42 -HTTP METHOD : GET
2018-04-20 12:38:42 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 12:38:42 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 12:38:42 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 12:38:42 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:38:42 -<==      Total: 1
2018-04-20 12:38:42 -==>  Preparing: select count(*) from t_order 
2018-04-20 12:38:42 -==> Parameters: 
2018-04-20 12:38:42 -<==      Total: 1
2018-04-20 12:38:42 -耗时 : 22
2018-04-20 12:38:42 -返回值 : com.bootdo.common.utils.PageUtils@74a5c51f
2018-04-20 12:38:55 -请求地址 : http://localhost/system/storageInput
2018-04-20 12:38:55 -HTTP METHOD : GET
2018-04-20 12:38:55 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 12:38:55 -参数 : []
2018-04-20 12:38:55 -耗时 : 1
2018-04-20 12:38:55 -返回值 : system/storageInput/storageInput
2018-04-20 12:38:55 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 12:38:55 -HTTP METHOD : GET
2018-04-20 12:38:55 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 12:38:55 -参数 : [{limit=10, offset=0}]
2018-04-20 12:38:55 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 12:38:55 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:38:55 -<==      Total: 0
2018-04-20 12:38:55 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 12:38:55 -==> Parameters: 
2018-04-20 12:38:55 -<==      Total: 1
2018-04-20 12:38:55 -耗时 : 25
2018-04-20 12:38:55 -返回值 : com.bootdo.common.utils.PageUtils@615a60f6
2018-04-20 12:38:57 -请求地址 : http://localhost/system/storageOutput
2018-04-20 12:38:57 -HTTP METHOD : GET
2018-04-20 12:38:57 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 12:38:57 -参数 : []
2018-04-20 12:38:57 -耗时 : 0
2018-04-20 12:38:57 -返回值 : system/storageOutput/storageOutput
2018-04-20 12:38:58 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 12:38:58 -HTTP METHOD : GET
2018-04-20 12:38:58 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 12:38:58 -参数 : [{limit=10, offset=0}]
2018-04-20 12:38:58 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 12:38:58 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:38:58 -<==      Total: 0
2018-04-20 12:38:58 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 12:38:58 -==> Parameters: 
2018-04-20 12:38:58 -<==      Total: 1
2018-04-20 12:38:58 -耗时 : 11
2018-04-20 12:38:58 -返回值 : com.bootdo.common.utils.PageUtils@7d99792
2018-04-20 12:38:58 -请求地址 : http://localhost/system/storage
2018-04-20 12:38:58 -HTTP METHOD : GET
2018-04-20 12:38:58 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 12:38:58 -参数 : []
2018-04-20 12:38:58 -耗时 : 0
2018-04-20 12:38:58 -返回值 : system/storage/storage
2018-04-20 12:38:59 -请求地址 : http://localhost/system/storage/list
2018-04-20 12:38:59 -HTTP METHOD : GET
2018-04-20 12:38:59 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 12:38:59 -参数 : [{limit=10, offset=0}]
2018-04-20 12:38:59 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 12:38:59 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:38:59 -<==      Total: 0
2018-04-20 12:38:59 -==>  Preparing: select count(*) from t_storage 
2018-04-20 12:38:59 -==> Parameters: 
2018-04-20 12:38:59 -<==      Total: 1
2018-04-20 12:38:59 -耗时 : 11
2018-04-20 12:38:59 -返回值 : com.bootdo.common.utils.PageUtils@531871fe
2018-04-20 12:39:35 -请求地址 : http://localhost/index
2018-04-20 12:39:35 -HTTP METHOD : GET
2018-04-20 12:39:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 12:39:35 -参数 : [{}]
2018-04-20 12:39:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 12:39:35 -==> Parameters: 1(Long)
2018-04-20 12:39:35 -<==      Total: 21
2018-04-20 12:39:35 -耗时 : 7
2018-04-20 12:39:35 -返回值 : index_v1
2018-04-20 12:39:35 -请求地址 : http://localhost/main
2018-04-20 12:39:35 -HTTP METHOD : GET
2018-04-20 12:39:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:39:35 -参数 : []
2018-04-20 12:39:35 -耗时 : 1
2018-04-20 12:39:35 -返回值 : main
2018-04-20 12:39:35 -请求地址 : http://localhost/main
2018-04-20 12:39:35 -HTTP METHOD : GET
2018-04-20 12:39:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:39:35 -参数 : []
2018-04-20 12:39:35 -耗时 : 0
2018-04-20 12:39:35 -返回值 : main
2018-04-20 12:39:37 -请求地址 : http://localhost/system/storage
2018-04-20 12:39:37 -HTTP METHOD : GET
2018-04-20 12:39:37 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 12:39:37 -参数 : []
2018-04-20 12:39:37 -耗时 : 0
2018-04-20 12:39:37 -返回值 : system/storage/storage
2018-04-20 12:39:38 -请求地址 : http://localhost/system/storage/list
2018-04-20 12:39:38 -HTTP METHOD : GET
2018-04-20 12:39:38 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 12:39:38 -参数 : [{limit=10, offset=0}]
2018-04-20 12:39:38 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 12:39:38 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:39:38 -<==      Total: 0
2018-04-20 12:39:38 -==>  Preparing: select count(*) from t_storage 
2018-04-20 12:39:38 -==> Parameters: 
2018-04-20 12:39:38 -<==      Total: 1
2018-04-20 12:39:38 -耗时 : 4
2018-04-20 12:39:38 -返回值 : com.bootdo.common.utils.PageUtils@60139389
2018-04-20 12:39:49 -请求地址 : http://localhost/sys/menu/
2018-04-20 12:39:49 -HTTP METHOD : GET
2018-04-20 12:39:49 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2018-04-20 12:39:49 -参数 : [{}]
2018-04-20 12:39:49 -耗时 : 1
2018-04-20 12:39:49 -返回值 : system/menu/menu
2018-04-20 12:39:49 -请求地址 : http://localhost/sys/menu/list
2018-04-20 12:39:49 -HTTP METHOD : GET
2018-04-20 12:39:49 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 12:39:49 -参数 : [{sort=order_num}]
2018-04-20 12:39:50 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 12:39:50 -==> Parameters: 
2018-04-20 12:39:50 -<==      Total: 87
2018-04-20 12:39:50 -耗时 : 30
2018-04-20 12:39:50 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=136, name='新增', url='', perms='system:storage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=136, name='编辑', url='', perms='system:storage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=136, name='删除', url='', perms='system:storage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 12:40:05 -请求地址 : http://localhost/sys/menu/remove
2018-04-20 12:40:05 -HTTP METHOD : POST
2018-04-20 12:40:05 -CLASS_METHOD : com.bootdo.system.controller.MenuController.remove
2018-04-20 12:40:05 -参数 : [145]
2018-04-20 12:40:05 -==>  Preparing: delete from sys_menu where menu_id = ? 
2018-04-20 12:40:05 -==> Parameters: 145(Long)
2018-04-20 12:40:05 -<==    Updates: 1
2018-04-20 12:40:05 -耗时 : 11
2018-04-20 12:40:05 -返回值 : {msg=操作成功, code=0}
2018-04-20 12:40:05 -请求地址 : http://localhost/sys/menu/list
2018-04-20 12:40:05 -HTTP METHOD : GET
2018-04-20 12:40:05 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 12:40:05 -参数 : [{sort=order_num}]
2018-04-20 12:40:05 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 12:40:05 -==> Parameters: 
2018-04-20 12:40:05 -<==      Total: 86
2018-04-20 12:40:05 -耗时 : 13
2018-04-20 12:40:05 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=136, name='新增', url='', perms='system:storage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=136, name='编辑', url='', perms='system:storage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 12:40:14 -请求地址 : http://localhost/sys/menu/remove
2018-04-20 12:40:14 -HTTP METHOD : POST
2018-04-20 12:40:14 -CLASS_METHOD : com.bootdo.system.controller.MenuController.remove
2018-04-20 12:40:14 -参数 : [144]
2018-04-20 12:40:14 -==>  Preparing: delete from sys_menu where menu_id = ? 
2018-04-20 12:40:14 -==> Parameters: 144(Long)
2018-04-20 12:40:14 -<==    Updates: 1
2018-04-20 12:40:14 -耗时 : 4
2018-04-20 12:40:14 -返回值 : {msg=操作成功, code=0}
2018-04-20 12:40:14 -请求地址 : http://localhost/sys/menu/list
2018-04-20 12:40:14 -HTTP METHOD : GET
2018-04-20 12:40:14 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 12:40:14 -参数 : [{sort=order_num}]
2018-04-20 12:40:14 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 12:40:14 -==> Parameters: 
2018-04-20 12:40:14 -<==      Total: 85
2018-04-20 12:40:14 -耗时 : 11
2018-04-20 12:40:14 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=136, name='新增', url='', perms='system:storage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 12:40:21 -请求地址 : http://localhost/sys/menu/remove
2018-04-20 12:40:21 -HTTP METHOD : POST
2018-04-20 12:40:21 -CLASS_METHOD : com.bootdo.system.controller.MenuController.remove
2018-04-20 12:40:21 -参数 : [143]
2018-04-20 12:40:21 -==>  Preparing: delete from sys_menu where menu_id = ? 
2018-04-20 12:40:21 -==> Parameters: 143(Long)
2018-04-20 12:40:21 -<==    Updates: 1
2018-04-20 12:40:21 -耗时 : 4
2018-04-20 12:40:21 -返回值 : {msg=操作成功, code=0}
2018-04-20 12:40:21 -请求地址 : http://localhost/sys/menu/list
2018-04-20 12:40:21 -HTTP METHOD : GET
2018-04-20 12:40:21 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 12:40:21 -参数 : [{sort=order_num}]
2018-04-20 12:40:21 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 12:40:21 -==> Parameters: 
2018-04-20 12:40:21 -<==      Total: 84
2018-04-20 12:40:21 -耗时 : 12
2018-04-20 12:40:21 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 12:40:27 -请求地址 : http://localhost/index
2018-04-20 12:40:27 -HTTP METHOD : GET
2018-04-20 12:40:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 12:40:27 -参数 : [{}]
2018-04-20 12:40:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 12:40:27 -==> Parameters: 1(Long)
2018-04-20 12:40:27 -<==      Total: 21
2018-04-20 12:40:27 -耗时 : 12
2018-04-20 12:40:27 -返回值 : index_v1
2018-04-20 12:40:27 -请求地址 : http://localhost/main
2018-04-20 12:40:27 -HTTP METHOD : GET
2018-04-20 12:40:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:40:27 -参数 : []
2018-04-20 12:40:27 -耗时 : 0
2018-04-20 12:40:27 -返回值 : main
2018-04-20 12:40:27 -请求地址 : http://localhost/main
2018-04-20 12:40:27 -HTTP METHOD : GET
2018-04-20 12:40:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:40:27 -参数 : []
2018-04-20 12:40:27 -耗时 : 0
2018-04-20 12:40:27 -返回值 : main
2018-04-20 12:40:29 -请求地址 : http://localhost/
2018-04-20 12:40:29 -HTTP METHOD : GET
2018-04-20 12:40:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 12:40:29 -参数 : [{}]
2018-04-20 12:40:29 -耗时 : 0
2018-04-20 12:40:29 -返回值 : redirect:/login
2018-04-20 12:40:29 -请求地址 : http://localhost/login
2018-04-20 12:40:29 -HTTP METHOD : GET
2018-04-20 12:40:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 12:40:29 -参数 : []
2018-04-20 12:40:29 -耗时 : 0
2018-04-20 12:40:29 -返回值 : login
2018-04-20 12:40:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 12:40:45 -==> Parameters: admin(String)
2018-04-20 12:40:45 -<==      Total: 1
2018-04-20 12:40:45 -请求地址 : http://localhost/login
2018-04-20 12:40:45 -HTTP METHOD : POST
2018-04-20 12:40:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 12:40:45 -参数 : [admin, 123456]
2018-04-20 12:40:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 12:40:45 -==> Parameters: admin(String)
2018-04-20 12:40:45 -<==      Total: 1
2018-04-20 12:40:45 -耗时 : 4
2018-04-20 12:40:45 -返回值 : {msg=操作成功, code=0}
2018-04-20 12:40:45 -请求地址 : http://localhost/index
2018-04-20 12:40:45 -HTTP METHOD : GET
2018-04-20 12:40:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 12:40:45 -参数 : [{}]
2018-04-20 12:40:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 12:40:45 -==> Parameters: 1(Long)
2018-04-20 12:40:45 -<==      Total: 21
2018-04-20 12:40:45 -耗时 : 8
2018-04-20 12:40:45 -返回值 : index_v1
2018-04-20 12:40:45 -请求地址 : http://localhost/main
2018-04-20 12:40:45 -HTTP METHOD : GET
2018-04-20 12:40:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:40:45 -参数 : []
2018-04-20 12:40:45 -耗时 : 1
2018-04-20 12:40:45 -返回值 : main
2018-04-20 12:40:45 -请求地址 : http://localhost/main
2018-04-20 12:40:45 -HTTP METHOD : GET
2018-04-20 12:40:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 12:40:45 -参数 : []
2018-04-20 12:40:45 -耗时 : 1
2018-04-20 12:40:45 -返回值 : main
2018-04-20 12:40:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 12:40:47 -==> Parameters: 1(Long)
2018-04-20 12:40:47 -<==      Total: 59
2018-04-20 12:40:47 -请求地址 : http://localhost/system/good
2018-04-20 12:40:47 -HTTP METHOD : GET
2018-04-20 12:40:47 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 12:40:47 -参数 : []
2018-04-20 12:40:47 -耗时 : 1
2018-04-20 12:40:47 -返回值 : system/good/good
2018-04-20 12:40:48 -请求地址 : http://localhost/system/good/list
2018-04-20 12:40:48 -HTTP METHOD : GET
2018-04-20 12:40:48 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 12:40:48 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 12:40:48 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 12:40:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:40:48 -<==      Total: 2
2018-04-20 12:40:48 -==>  Preparing: select count(*) from t_good 
2018-04-20 12:40:48 -==> Parameters: 
2018-04-20 12:40:48 -<==      Total: 1
2018-04-20 12:40:48 -耗时 : 15
2018-04-20 12:40:48 -返回值 : com.bootdo.common.utils.PageUtils@2655b6db
2018-04-20 12:40:48 -请求地址 : http://localhost/system/storage
2018-04-20 12:40:48 -HTTP METHOD : GET
2018-04-20 12:40:48 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 12:40:48 -参数 : []
2018-04-20 12:40:48 -耗时 : 0
2018-04-20 12:40:48 -返回值 : system/storage/storage
2018-04-20 12:40:48 -请求地址 : http://localhost/system/storage/list
2018-04-20 12:40:48 -HTTP METHOD : GET
2018-04-20 12:40:48 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 12:40:48 -参数 : [{limit=10, offset=0}]
2018-04-20 12:40:48 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 12:40:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:40:48 -<==      Total: 0
2018-04-20 12:40:48 -==>  Preparing: select count(*) from t_storage 
2018-04-20 12:40:48 -==> Parameters: 
2018-04-20 12:40:48 -<==      Total: 1
2018-04-20 12:40:48 -耗时 : 4
2018-04-20 12:40:48 -返回值 : com.bootdo.common.utils.PageUtils@575ad8e8
2018-04-20 12:40:51 -请求地址 : http://localhost/system/storageOutput
2018-04-20 12:40:51 -HTTP METHOD : GET
2018-04-20 12:40:51 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 12:40:51 -参数 : []
2018-04-20 12:40:51 -耗时 : 0
2018-04-20 12:40:51 -返回值 : system/storageOutput/storageOutput
2018-04-20 12:40:51 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 12:40:51 -HTTP METHOD : GET
2018-04-20 12:40:51 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 12:40:51 -参数 : [{limit=10, offset=0}]
2018-04-20 12:40:51 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 12:40:51 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 12:40:51 -<==      Total: 0
2018-04-20 12:40:51 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 12:40:51 -==> Parameters: 
2018-04-20 12:40:51 -<==      Total: 1
2018-04-20 12:40:51 -耗时 : 3
2018-04-20 12:40:51 -返回值 : com.bootdo.common.utils.PageUtils@7e312bfd
2018-04-20 22:16:27 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 5636 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 22:16:27 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 22:16:27 -The following profiles are active: dev
2018-04-20 22:16:27 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 22:16:27 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:16:27 CST 2018]; root of context hierarchy
2018-04-20 22:16:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 22:16:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fd20604b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ef798ef2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 22:16:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 22:16:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:16:31 -Tomcat initialized with port(s): 80 (http)
2018-04-20 22:16:31 -Starting service [Tomcat]
2018-04-20 22:16:31 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 22:16:31 -Initializing Spring embedded WebApplicationContext
2018-04-20 22:16:31 -Root WebApplicationContext: initialization completed in 3372 ms
2018-04-20 22:16:31 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 22:16:31 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 22:16:31 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 22:16:31 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 22:16:31 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 22:16:31 -Filter xssFilter was not registered (disabled)
2018-04-20 22:16:31 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 22:16:31 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 22:16:31 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 22:16:31 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 22:16:31 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:16:27 CST 2018]; root of context hierarchy
2018-04-20 22:16:32 -{dataSource-1} inited
2018-04-20 22:16:33 -Using default implementation for ThreadExecutor
2018-04-20 22:16:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 22:16:33 -Quartz Scheduler v.2.2.1 created.
2018-04-20 22:16:33 -RAMJobStore initialized.
2018-04-20 22:16:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 22:16:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 22:16:33 -Quartz scheduler version: 2.2.1
2018-04-20 22:16:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a13f663
2018-04-20 22:16:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 22:16:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:16:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 22:16:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:16:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:16:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:16:34 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 22:16:34 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 22:16:34 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 22:16:34 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 22:16:34 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 22:16:34 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 22:16:34 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 22:16:34 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 22:16:34 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 22:16:34 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 22:16:34 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 22:16:34 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 22:16:34 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 22:16:34 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:16:34 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:16:34 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 22:16:34 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 22:16:34 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 22:16:34 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 22:16:34 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 22:16:34 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 22:16:34 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 22:16:34 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 22:16:34 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 22:16:34 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:16:34 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 22:16:34 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 22:16:34 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 22:16:34 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 22:16:34 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 22:16:34 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 22:16:34 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 22:16:34 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 22:16:34 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 22:16:34 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 22:16:34 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 22:16:34 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 22:16:34 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:16:34 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 22:16:34 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 22:16:34 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:16:34 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:16:34 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 22:16:34 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:16:34 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 22:16:34 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:16:34 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:16:34 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 22:16:34 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 22:16:34 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:16:34 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:16:34 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 22:16:34 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 22:16:34 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 22:16:36 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:16:27 CST 2018]; root of context hierarchy
2018-04-20 22:16:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:16:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:16:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:16:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 22:16:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:16:38 -

Using default security password: 500738a6-6c2c-4a66-8196-0c976882fe5e

2018-04-20 22:16:38 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 22:16:38 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3dbb7bb, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6277a496, org.springframework.security.web.context.SecurityContextPersistenceFilter@341889a1, org.springframework.security.web.header.HeaderWriterFilter@5ace6611, org.springframework.security.web.csrf.CsrfFilter@7575f7e1, org.springframework.security.web.authentication.logout.LogoutFilter@4df5f119, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64f2b1b4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24bdd996, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6632eb19, org.springframework.security.web.session.SessionManagementFilter@3b850bb7, org.springframework.security.web.access.ExceptionTranslationFilter@6b30ff23]
2018-04-20 22:16:39 -Registering beans for JMX exposure on startup
2018-04-20 22:16:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 22:16:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 22:16:39 -Starting beans in phase 2147483647
2018-04-20 22:16:39 -Context refreshed
2018-04-20 22:16:39 -Found 1 custom documentation plugin(s)
2018-04-20 22:16:39 -Scanning for api listing references
2018-04-20 22:16:39 -Generating unique operation named: removeUsingPOST_1
2018-04-20 22:16:39 -Generating unique operation named: editUsingGET_1
2018-04-20 22:16:39 -Generating unique operation named: listUsingGET_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPOST_1
2018-04-20 22:16:39 -Generating unique operation named: addUsingGET_1
2018-04-20 22:16:39 -Generating unique operation named: editUsingGET_2
2018-04-20 22:16:39 -Generating unique operation named: listUsingGET_2
2018-04-20 22:16:39 -Generating unique operation named: removeUsingPOST_2
2018-04-20 22:16:39 -Generating unique operation named: removeUsingPOST_3
2018-04-20 22:16:39 -Generating unique operation named: saveUsingPOST_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingGET_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPOST_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPUT_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 22:16:39 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 22:16:39 -Generating unique operation named: viewUsingGET_1
2018-04-20 22:16:39 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 22:16:39 -Generating unique operation named: addUsingGET_2
2018-04-20 22:16:39 -Generating unique operation named: editUsingGET_3
2018-04-20 22:16:39 -Generating unique operation named: listUsingGET_3
2018-04-20 22:16:39 -Generating unique operation named: removeUsingPOST_4
2018-04-20 22:16:39 -Generating unique operation named: removeUsingPOST_5
2018-04-20 22:16:39 -Generating unique operation named: saveUsingPOST_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingGET_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPOST_3
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPUT_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 22:16:39 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 22:16:39 -Generating unique operation named: viewUsingGET_2
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_3
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_4
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_4
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_6
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_7
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingGET_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPUT_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 22:16:40 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_4
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_5
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_5
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_8
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_4
2018-04-20 22:16:40 -Generating unique operation named: treeUsingGET_1
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_5
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_5
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_6
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_6
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_9
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_10
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingGET_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPUT_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 22:16:40 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 22:16:40 -Generating unique operation named: viewUsingGET_3
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_6
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_7
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_7
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_11
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_12
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingGET_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPUT_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 22:16:40 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_7
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_7
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_8
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_8
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_8
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_9
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_8
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_9
2018-04-20 22:16:40 -Generating unique operation named: listUsingHEAD_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingPOST_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingPUT_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingPATCH_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingDELETE_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingTRACE_1
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_8
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_9
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_10
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_13
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_14
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_10
2018-04-20 22:16:40 -Generating unique operation named: updateUsingGET_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_9
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPUT_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 22:16:40 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_9
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_10
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_11
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_15
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_16
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_11
2018-04-20 22:16:40 -Generating unique operation named: updateUsingGET_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_10
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPUT_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 22:16:40 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_10
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_11
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_12
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_17
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_18
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_12
2018-04-20 22:16:40 -Generating unique operation named: updateUsingGET_8
2018-04-20 22:16:40 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_11
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPUT_8
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 22:16:40 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 22:16:40 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 22:16:40 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 22:16:40 -Generating unique operation named: addUsingGET_11
2018-04-20 22:16:40 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 22:16:40 -Generating unique operation named: editUsingGET_12
2018-04-20 22:16:40 -Generating unique operation named: exitUsingPOST_1
2018-04-20 22:16:40 -Generating unique operation named: listUsingGET_13
2018-04-20 22:16:40 -Generating unique operation named: removeUsingPOST_19
2018-04-20 22:16:40 -Generating unique operation named: saveUsingPOST_13
2018-04-20 22:16:40 -Generating unique operation named: updateUsingPOST_12
2018-04-20 22:16:40 -Generating unique operation named: userUsingGET_1
2018-04-20 22:16:40 -Starting Quartz Scheduler now
2018-04-20 22:16:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 22:16:40 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 22:16:40 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 22:16:40 -Using a shared selector for servlet write/read
2018-04-20 22:16:40 -Tomcat started on port(s): 80 (http)
2018-04-20 22:16:40 -Started BootdoApplication in 13.788 seconds (JVM running for 14.727)
2018-04-20 22:17:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 22:17:37 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 22:17:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-04-20 22:17:37 -Enabling session validation scheduler...
2018-04-20 22:17:37 -请求地址 : http://localhost/login;JSESSIONID=af01caba-fe8a-40ae-b57d-2fce5f8fc340
2018-04-20 22:17:37 -HTTP METHOD : GET
2018-04-20 22:17:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:17:37 -参数 : []
2018-04-20 22:17:37 -耗时 : 2
2018-04-20 22:17:37 -返回值 : login
2018-04-20 22:17:37 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 22:17:38 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 22:17:38 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 22:17:38 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 22:17:38 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 22:17:38 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 22:17:38 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 22:17:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:17:40 -==> Parameters: admin(String)
2018-04-20 22:17:40 -<==      Total: 1
2018-04-20 22:17:40 -请求地址 : http://localhost/login
2018-04-20 22:17:40 -HTTP METHOD : POST
2018-04-20 22:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:17:40 -参数 : [admin, 123456]
2018-04-20 22:17:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:17:40 -==> Parameters: admin(String)
2018-04-20 22:17:40 -<==      Total: 1
2018-04-20 22:17:40 -耗时 : 10
2018-04-20 22:17:40 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:17:40 -请求地址 : http://localhost/index
2018-04-20 22:17:40 -HTTP METHOD : GET
2018-04-20 22:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:17:40 -参数 : [{}]
2018-04-20 22:17:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:17:40 -==> Parameters: 1(Long)
2018-04-20 22:17:40 -<==      Total: 21
2018-04-20 22:17:40 -耗时 : 56
2018-04-20 22:17:40 -返回值 : index_v1
2018-04-20 22:17:40 -请求地址 : http://localhost/main
2018-04-20 22:17:40 -HTTP METHOD : GET
2018-04-20 22:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:17:40 -参数 : []
2018-04-20 22:17:40 -耗时 : 0
2018-04-20 22:17:40 -返回值 : main
2018-04-20 22:17:40 -请求地址 : http://localhost/main
2018-04-20 22:17:40 -HTTP METHOD : GET
2018-04-20 22:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:17:40 -参数 : []
2018-04-20 22:17:40 -耗时 : 0
2018-04-20 22:17:40 -返回值 : main
2018-04-20 22:17:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:17:45 -==> Parameters: 1(Long)
2018-04-20 22:17:45 -<==      Total: 59
2018-04-20 22:17:45 -请求地址 : http://localhost/sys/menu/
2018-04-20 22:17:45 -HTTP METHOD : GET
2018-04-20 22:17:45 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2018-04-20 22:17:45 -参数 : [{}]
2018-04-20 22:17:45 -耗时 : 1
2018-04-20 22:17:45 -返回值 : system/menu/menu
2018-04-20 22:17:45 -请求地址 : http://localhost/sys/menu/list
2018-04-20 22:17:45 -HTTP METHOD : GET
2018-04-20 22:17:45 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 22:17:45 -参数 : [{sort=order_num}]
2018-04-20 22:17:45 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 22:17:45 -==> Parameters: 
2018-04-20 22:17:45 -<==      Total: 84
2018-04-20 22:17:45 -耗时 : 21
2018-04-20 22:17:45 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 22:17:50 -请求地址 : http://localhost/sys/role
2018-04-20 22:17:50 -HTTP METHOD : GET
2018-04-20 22:17:50 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 22:17:50 -参数 : []
2018-04-20 22:17:50 -耗时 : 1
2018-04-20 22:17:50 -返回值 : system/role/role
2018-04-20 22:17:50 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:17:50 -HTTP METHOD : GET
2018-04-20 22:17:50 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:17:50 -参数 : []
2018-04-20 22:17:50 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:17:50 -==> Parameters: 
2018-04-20 22:17:50 -<==      Total: 2
2018-04-20 22:17:50 -耗时 : 38
2018-04-20 22:17:50 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:17:53 -请求地址 : http://localhost/sys/role/edit/1
2018-04-20 22:17:53 -HTTP METHOD : GET
2018-04-20 22:17:53 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:17:53 -参数 : [1, {}]
2018-04-20 22:17:53 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:17:53 -==> Parameters: 1(Long)
2018-04-20 22:17:53 -<==      Total: 1
2018-04-20 22:17:53 -耗时 : 6
2018-04-20 22:17:53 -返回值 : system/role/edit
2018-04-20 22:17:53 -请求地址 : http://localhost/sys/menu/tree/1
2018-04-20 22:17:53 -HTTP METHOD : GET
2018-04-20 22:17:53 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:17:53 -参数 : [1]
2018-04-20 22:17:53 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:17:53 -==> Parameters: 
2018-04-20 22:17:53 -<==      Total: 84
2018-04-20 22:17:53 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:17:53 -==> Parameters: 1(Long)
2018-04-20 22:17:53 -<==      Total: 68
2018-04-20 22:17:53 -耗时 : 26
2018-04-20 22:17:53 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":true},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":true},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":true},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":true},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:18:08 -请求地址 : http://localhost/sys/role/update
2018-04-20 22:18:08 -HTTP METHOD : POST
2018-04-20 22:18:08 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2018-04-20 22:18:08 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[131, 113, 112, 111, 110, 150, 129, 133, 124, 123, 122, 121, 149, 148, 147, 130, 128, 127, 126, 125, 136, 142, 141, 140, 139, 138, 137, 132, 120, 119, 118, 117, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 108, 107, 106, 115, 105, 146, 116, 103, 135, 134, 114, 102, 7, 6, -1, 3]}]
2018-04-20 22:18:08 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2018-04-20 22:18:08 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2018-04-20 22:18:08 -<==    Updates: 1
2018-04-20 22:18:08 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2018-04-20 22:18:08 -==> Parameters: 1(Long)
2018-04-20 22:18:08 -<==    Updates: 68
2018-04-20 22:18:08 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) 
2018-04-20 22:18:08 -==> Parameters: 1(Long), 131(Long), 1(Long), 113(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 150(Long), 1(Long), 129(Long), 1(Long), 133(Long), 1(Long), 124(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 121(Long), 1(Long), 149(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 130(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 136(Long), 1(Long), 142(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 137(Long), 1(Long), 132(Long), 1(Long), 120(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 117(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 108(Long), 1(Long), 107(Long), 1(Long), 106(Long), 1(Long), 115(Long), 1(Long), 105(Long), 1(Long), 146(Long), 1(Long), 116(Long), 1(Long), 103(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 114(Long), 1(Long), 102(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), -1(Long), 1(Long), 3(Long)
2018-04-20 22:18:08 -<==    Updates: 58
2018-04-20 22:18:08 -耗时 : 592
2018-04-20 22:18:08 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:18:08 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:18:08 -HTTP METHOD : GET
2018-04-20 22:18:08 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:18:08 -参数 : []
2018-04-20 22:18:08 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:18:08 -==> Parameters: 
2018-04-20 22:18:08 -<==      Total: 2
2018-04-20 22:18:08 -耗时 : 3
2018-04-20 22:18:08 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:18:16 -请求地址 : http://localhost/
2018-04-20 22:18:16 -HTTP METHOD : GET
2018-04-20 22:18:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:18:16 -参数 : [{}]
2018-04-20 22:18:16 -耗时 : 0
2018-04-20 22:18:16 -返回值 : redirect:/login
2018-04-20 22:18:16 -请求地址 : http://localhost/login
2018-04-20 22:18:16 -HTTP METHOD : GET
2018-04-20 22:18:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:18:16 -参数 : []
2018-04-20 22:18:16 -耗时 : 1
2018-04-20 22:18:16 -返回值 : login
2018-04-20 22:18:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:18:17 -==> Parameters: admin(String)
2018-04-20 22:18:17 -<==      Total: 1
2018-04-20 22:18:17 -请求地址 : http://localhost/login
2018-04-20 22:18:17 -HTTP METHOD : POST
2018-04-20 22:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:18:17 -参数 : [admin, 123456]
2018-04-20 22:18:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:18:17 -==> Parameters: admin(String)
2018-04-20 22:18:17 -<==      Total: 1
2018-04-20 22:18:17 -耗时 : 3
2018-04-20 22:18:17 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:18:17 -请求地址 : http://localhost/index
2018-04-20 22:18:17 -HTTP METHOD : GET
2018-04-20 22:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:18:17 -参数 : [{}]
2018-04-20 22:18:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:18:17 -==> Parameters: 1(Long)
2018-04-20 22:18:17 -<==      Total: 18
2018-04-20 22:18:17 -耗时 : 7
2018-04-20 22:18:17 -返回值 : index_v1
2018-04-20 22:18:17 -请求地址 : http://localhost/main
2018-04-20 22:18:17 -HTTP METHOD : GET
2018-04-20 22:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:18:17 -参数 : []
2018-04-20 22:18:17 -耗时 : 5
2018-04-20 22:18:17 -返回值 : main
2018-04-20 22:18:18 -请求地址 : http://localhost/main
2018-04-20 22:18:18 -HTTP METHOD : GET
2018-04-20 22:18:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:18:18 -参数 : []
2018-04-20 22:18:18 -耗时 : 0
2018-04-20 22:18:18 -返回值 : main
2018-04-20 22:18:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:18:20 -==> Parameters: 1(Long)
2018-04-20 22:18:20 -<==      Total: 53
2018-04-20 22:18:20 -请求地址 : http://localhost/sys/user/
2018-04-20 22:18:20 -HTTP METHOD : GET
2018-04-20 22:18:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-04-20 22:18:20 -参数 : [{}]
2018-04-20 22:18:20 -耗时 : 0
2018-04-20 22:18:20 -返回值 : system/user/user
2018-04-20 22:18:21 -请求地址 : http://localhost/sys/user/list
2018-04-20 22:18:21 -HTTP METHOD : GET
2018-04-20 22:18:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 22:18:21 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 22:18:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 22:18:21 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:18:21 -<==      Total: 4
2018-04-20 22:18:21 -==>  Preparing: select count(*) from sys_user 
2018-04-20 22:18:21 -==> Parameters: 
2018-04-20 22:18:21 -<==      Total: 1
2018-04-20 22:18:21 -耗时 : 20
2018-04-20 22:18:21 -返回值 : com.bootdo.common.utils.PageUtils@1047f7c6
2018-04-20 22:18:25 -请求地址 : http://localhost/sys/role
2018-04-20 22:18:25 -HTTP METHOD : GET
2018-04-20 22:18:25 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 22:18:25 -参数 : []
2018-04-20 22:18:25 -耗时 : 0
2018-04-20 22:18:25 -返回值 : system/role/role
2018-04-20 22:18:25 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:18:25 -HTTP METHOD : GET
2018-04-20 22:18:25 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:18:25 -参数 : []
2018-04-20 22:18:25 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:18:25 -==> Parameters: 
2018-04-20 22:18:25 -<==      Total: 2
2018-04-20 22:18:25 -耗时 : 3
2018-04-20 22:18:25 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:21:48 -请求地址 : http://localhost/index
2018-04-20 22:21:48 -HTTP METHOD : GET
2018-04-20 22:21:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:21:48 -参数 : [{}]
2018-04-20 22:21:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:21:48 -==> Parameters: 1(Long)
2018-04-20 22:21:48 -<==      Total: 18
2018-04-20 22:21:48 -耗时 : 7
2018-04-20 22:21:48 -返回值 : index_v1
2018-04-20 22:21:48 -请求地址 : http://localhost/main
2018-04-20 22:21:48 -HTTP METHOD : GET
2018-04-20 22:21:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:21:48 -参数 : []
2018-04-20 22:21:48 -耗时 : 1
2018-04-20 22:21:48 -返回值 : main
2018-04-20 22:21:48 -请求地址 : http://localhost/main
2018-04-20 22:21:48 -HTTP METHOD : GET
2018-04-20 22:21:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:21:48 -参数 : []
2018-04-20 22:21:48 -耗时 : 0
2018-04-20 22:21:48 -返回值 : main
2018-04-20 22:21:49 -请求地址 : http://localhost/
2018-04-20 22:21:49 -HTTP METHOD : GET
2018-04-20 22:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:21:49 -参数 : [{}]
2018-04-20 22:21:49 -耗时 : 0
2018-04-20 22:21:49 -返回值 : redirect:/login
2018-04-20 22:21:49 -请求地址 : http://localhost/login
2018-04-20 22:21:49 -HTTP METHOD : GET
2018-04-20 22:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:21:49 -参数 : []
2018-04-20 22:21:49 -耗时 : 0
2018-04-20 22:21:49 -返回值 : login
2018-04-20 22:21:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:21:52 -==> Parameters: admin(String)
2018-04-20 22:21:52 -<==      Total: 1
2018-04-20 22:21:52 -请求地址 : http://localhost/login
2018-04-20 22:21:52 -HTTP METHOD : POST
2018-04-20 22:21:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:21:52 -参数 : [admin, 123456]
2018-04-20 22:21:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:21:52 -==> Parameters: admin(String)
2018-04-20 22:21:52 -<==      Total: 1
2018-04-20 22:21:52 -耗时 : 5
2018-04-20 22:21:52 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:21:52 -请求地址 : http://localhost/index
2018-04-20 22:21:52 -HTTP METHOD : GET
2018-04-20 22:21:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:21:52 -参数 : [{}]
2018-04-20 22:21:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:21:52 -==> Parameters: 1(Long)
2018-04-20 22:21:52 -<==      Total: 18
2018-04-20 22:21:52 -耗时 : 6
2018-04-20 22:21:52 -返回值 : index_v1
2018-04-20 22:21:52 -请求地址 : http://localhost/main
2018-04-20 22:21:52 -HTTP METHOD : GET
2018-04-20 22:21:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:21:52 -参数 : []
2018-04-20 22:21:52 -耗时 : 1
2018-04-20 22:21:52 -返回值 : main
2018-04-20 22:21:52 -请求地址 : http://localhost/main
2018-04-20 22:21:52 -HTTP METHOD : GET
2018-04-20 22:21:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:21:52 -参数 : []
2018-04-20 22:21:52 -耗时 : 1
2018-04-20 22:21:52 -返回值 : main
2018-04-20 22:21:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:21:56 -==> Parameters: 1(Long)
2018-04-20 22:21:56 -<==      Total: 53
2018-04-20 22:21:56 -请求地址 : http://localhost/sys/user/
2018-04-20 22:21:56 -HTTP METHOD : GET
2018-04-20 22:21:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-04-20 22:21:56 -参数 : [{}]
2018-04-20 22:21:56 -耗时 : 0
2018-04-20 22:21:56 -返回值 : system/user/user
2018-04-20 22:21:56 -请求地址 : http://localhost/sys/user/list
2018-04-20 22:21:56 -HTTP METHOD : GET
2018-04-20 22:21:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 22:21:56 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 22:21:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 22:21:56 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:21:56 -<==      Total: 4
2018-04-20 22:21:56 -==>  Preparing: select count(*) from sys_user 
2018-04-20 22:21:56 -==> Parameters: 
2018-04-20 22:21:56 -<==      Total: 1
2018-04-20 22:21:56 -耗时 : 10
2018-04-20 22:21:56 -返回值 : com.bootdo.common.utils.PageUtils@668235ad
2018-04-20 22:21:57 -请求地址 : http://localhost/sys/role
2018-04-20 22:21:57 -HTTP METHOD : GET
2018-04-20 22:21:57 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 22:21:57 -参数 : []
2018-04-20 22:21:57 -耗时 : 1
2018-04-20 22:21:57 -返回值 : system/role/role
2018-04-20 22:21:57 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:21:57 -HTTP METHOD : GET
2018-04-20 22:21:57 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:21:57 -参数 : []
2018-04-20 22:21:57 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:21:57 -==> Parameters: 
2018-04-20 22:21:57 -<==      Total: 2
2018-04-20 22:21:57 -耗时 : 4
2018-04-20 22:21:57 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:22:00 -请求地址 : http://localhost/sys/role/edit/1
2018-04-20 22:22:00 -HTTP METHOD : GET
2018-04-20 22:22:00 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:22:00 -参数 : [1, {}]
2018-04-20 22:22:00 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:22:00 -==> Parameters: 1(Long)
2018-04-20 22:22:00 -<==      Total: 1
2018-04-20 22:22:00 -耗时 : 3
2018-04-20 22:22:00 -返回值 : system/role/edit
2018-04-20 22:22:00 -请求地址 : http://localhost/sys/menu/tree/1
2018-04-20 22:22:00 -HTTP METHOD : GET
2018-04-20 22:22:00 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:22:00 -参数 : [1]
2018-04-20 22:22:00 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:22:00 -==> Parameters: 
2018-04-20 22:22:00 -<==      Total: 84
2018-04-20 22:22:00 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:22:00 -==> Parameters: 1(Long)
2018-04-20 22:22:00 -<==      Total: 58
2018-04-20 22:22:00 -耗时 : 23
2018-04-20 22:22:00 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":true},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":true},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":true},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:22:06 -请求地址 : http://localhost/sys/role/edit/2
2018-04-20 22:22:06 -HTTP METHOD : GET
2018-04-20 22:22:06 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:22:06 -参数 : [2, {}]
2018-04-20 22:22:06 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:22:06 -==> Parameters: 2(Long)
2018-04-20 22:22:06 -<==      Total: 1
2018-04-20 22:22:06 -耗时 : 5
2018-04-20 22:22:06 -返回值 : system/role/edit
2018-04-20 22:22:06 -请求地址 : http://localhost/sys/menu/tree/2
2018-04-20 22:22:06 -HTTP METHOD : GET
2018-04-20 22:22:06 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:22:06 -参数 : [2]
2018-04-20 22:22:06 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:22:06 -==> Parameters: 
2018-04-20 22:22:06 -<==      Total: 84
2018-04-20 22:22:06 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:22:06 -==> Parameters: 2(Long)
2018-04-20 22:22:06 -<==      Total: 13
2018-04-20 22:22:06 -耗时 : 15
2018-04-20 22:22:06 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":false},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":false},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":false},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:22:14 -请求地址 : http://localhost/system/order/
2018-04-20 22:22:14 -HTTP METHOD : GET
2018-04-20 22:22:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:22:14 -参数 : []
2018-04-20 22:22:14 -耗时 : 0
2018-04-20 22:22:14 -返回值 : system/order/order
2018-04-20 22:22:14 -请求地址 : http://localhost/system/order/list
2018-04-20 22:22:14 -HTTP METHOD : GET
2018-04-20 22:22:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:22:14 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:22:14 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:22:14 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:14 -<==      Total: 1
2018-04-20 22:22:14 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:22:14 -==> Parameters: 
2018-04-20 22:22:14 -<==      Total: 1
2018-04-20 22:22:14 -耗时 : 40
2018-04-20 22:22:14 -返回值 : com.bootdo.common.utils.PageUtils@2a5be619
2018-04-20 22:22:17 -请求地址 : http://localhost/system/storageInput
2018-04-20 22:22:17 -HTTP METHOD : GET
2018-04-20 22:22:17 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 22:22:17 -参数 : []
2018-04-20 22:22:17 -耗时 : 0
2018-04-20 22:22:17 -返回值 : system/storageInput/storageInput
2018-04-20 22:22:17 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 22:22:17 -HTTP METHOD : GET
2018-04-20 22:22:17 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 22:22:17 -参数 : [{limit=10, offset=0}]
2018-04-20 22:22:17 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 22:22:17 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:17 -<==      Total: 0
2018-04-20 22:22:17 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 22:22:17 -==> Parameters: 
2018-04-20 22:22:17 -<==      Total: 1
2018-04-20 22:22:17 -耗时 : 42
2018-04-20 22:22:17 -返回值 : com.bootdo.common.utils.PageUtils@5bf35e2
2018-04-20 22:22:19 -请求地址 : http://localhost/system/storageOutput
2018-04-20 22:22:19 -HTTP METHOD : GET
2018-04-20 22:22:19 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 22:22:19 -参数 : []
2018-04-20 22:22:19 -耗时 : 0
2018-04-20 22:22:19 -返回值 : system/storageOutput/storageOutput
2018-04-20 22:22:19 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 22:22:19 -HTTP METHOD : GET
2018-04-20 22:22:19 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 22:22:19 -参数 : [{limit=10, offset=0}]
2018-04-20 22:22:19 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 22:22:19 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:19 -<==      Total: 0
2018-04-20 22:22:19 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 22:22:19 -==> Parameters: 
2018-04-20 22:22:19 -<==      Total: 1
2018-04-20 22:22:19 -耗时 : 21
2018-04-20 22:22:19 -返回值 : com.bootdo.common.utils.PageUtils@eac9567
2018-04-20 22:22:20 -请求地址 : http://localhost/system/storage
2018-04-20 22:22:20 -HTTP METHOD : GET
2018-04-20 22:22:20 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 22:22:20 -参数 : []
2018-04-20 22:22:20 -耗时 : 0
2018-04-20 22:22:20 -返回值 : system/storage/storage
2018-04-20 22:22:20 -请求地址 : http://localhost/system/storage/list
2018-04-20 22:22:20 -HTTP METHOD : GET
2018-04-20 22:22:20 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 22:22:20 -参数 : [{limit=10, offset=0}]
2018-04-20 22:22:20 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 22:22:20 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:20 -<==      Total: 0
2018-04-20 22:22:20 -==>  Preparing: select count(*) from t_storage 
2018-04-20 22:22:20 -==> Parameters: 
2018-04-20 22:22:20 -<==      Total: 1
2018-04-20 22:22:20 -耗时 : 25
2018-04-20 22:22:20 -返回值 : com.bootdo.common.utils.PageUtils@6cdc442a
2018-04-20 22:22:20 -请求地址 : http://localhost/system/good
2018-04-20 22:22:20 -HTTP METHOD : GET
2018-04-20 22:22:20 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 22:22:20 -参数 : []
2018-04-20 22:22:20 -耗时 : 1
2018-04-20 22:22:20 -返回值 : system/good/good
2018-04-20 22:22:21 -请求地址 : http://localhost/system/good/list
2018-04-20 22:22:21 -HTTP METHOD : GET
2018-04-20 22:22:21 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 22:22:21 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 22:22:21 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 22:22:21 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:21 -<==      Total: 2
2018-04-20 22:22:21 -==>  Preparing: select count(*) from t_good 
2018-04-20 22:22:21 -==> Parameters: 
2018-04-20 22:22:21 -<==      Total: 1
2018-04-20 22:22:21 -耗时 : 46
2018-04-20 22:22:21 -返回值 : com.bootdo.common.utils.PageUtils@3dbff936
2018-04-20 22:22:24 -请求地址 : http://localhost/system/car
2018-04-20 22:22:24 -HTTP METHOD : GET
2018-04-20 22:22:24 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 22:22:24 -参数 : []
2018-04-20 22:22:24 -耗时 : 4
2018-04-20 22:22:24 -返回值 : system/car/car
2018-04-20 22:22:24 -请求地址 : http://localhost/system/car/list
2018-04-20 22:22:24 -HTTP METHOD : GET
2018-04-20 22:22:24 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 22:22:24 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 22:22:24 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-20 22:22:24 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:24 -<==      Total: 1
2018-04-20 22:22:24 -==>  Preparing: select count(*) from t_car 
2018-04-20 22:22:24 -==> Parameters: 
2018-04-20 22:22:24 -<==      Total: 1
2018-04-20 22:22:24 -耗时 : 22
2018-04-20 22:22:24 -返回值 : com.bootdo.common.utils.PageUtils@bf20641
2018-04-20 22:22:28 -请求地址 : http://localhost/system/logistics
2018-04-20 22:22:28 -HTTP METHOD : GET
2018-04-20 22:22:28 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 22:22:28 -参数 : []
2018-04-20 22:22:28 -耗时 : 0
2018-04-20 22:22:28 -返回值 : system/logistics/logistics
2018-04-20 22:22:28 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:22:28 -HTTP METHOD : GET
2018-04-20 22:22:28 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:22:28 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:22:28 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:22:28 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:28 -<==      Total: 1
2018-04-20 22:22:28 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:22:28 -==> Parameters: 
2018-04-20 22:22:28 -<==      Total: 1
2018-04-20 22:22:28 -耗时 : 30
2018-04-20 22:22:28 -返回值 : com.bootdo.common.utils.PageUtils@1862805f
2018-04-20 22:22:30 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:22:30 -HTTP METHOD : GET
2018-04-20 22:22:30 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:22:30 -参数 : []
2018-04-20 22:22:30 -耗时 : 1
2018-04-20 22:22:30 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:22:30 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:22:30 -HTTP METHOD : GET
2018-04-20 22:22:30 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:22:30 -参数 : [{limit=10, offset=0}]
2018-04-20 22:22:30 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:22:30 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:30 -<==      Total: 0
2018-04-20 22:22:30 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:22:30 -==> Parameters: 
2018-04-20 22:22:30 -<==      Total: 1
2018-04-20 22:22:30 -耗时 : 12
2018-04-20 22:22:30 -返回值 : com.bootdo.common.utils.PageUtils@71a4b6f7
2018-04-20 22:22:33 -请求地址 : http://localhost/system/order/statistics
2018-04-20 22:22:33 -HTTP METHOD : GET
2018-04-20 22:22:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 22:22:33 -参数 : []
2018-04-20 22:22:33 -耗时 : 1
2018-04-20 22:22:33 -返回值 : system/order/statistics
2018-04-20 22:22:33 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 22:22:33 -HTTP METHOD : GET
2018-04-20 22:22:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 22:22:33 -参数 : [{limit=10, offset=0}]
2018-04-20 22:22:33 -Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.statistics(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statistics(OrderServiceImpl.java:34)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:71)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$2690edd1.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 22:22:35 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 22:22:35 -HTTP METHOD : GET
2018-04-20 22:22:35 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 22:22:35 -参数 : []
2018-04-20 22:22:35 -耗时 : 1
2018-04-20 22:22:35 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 22:22:35 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 22:22:35 -HTTP METHOD : GET
2018-04-20 22:22:35 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 22:22:35 -参数 : [{limit=10, offset=0}]
2018-04-20 22:22:35 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 22:22:35 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:35 -<==      Total: 0
2018-04-20 22:22:35 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 22:22:35 -==> Parameters: 
2018-04-20 22:22:35 -<==      Total: 1
2018-04-20 22:22:35 -耗时 : 13
2018-04-20 22:22:35 -返回值 : com.bootdo.common.utils.PageUtils@6cced262
2018-04-20 22:22:37 -请求地址 : http://localhost/
2018-04-20 22:22:37 -HTTP METHOD : GET
2018-04-20 22:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:22:37 -参数 : [{}]
2018-04-20 22:22:37 -耗时 : 0
2018-04-20 22:22:37 -返回值 : redirect:/login
2018-04-20 22:22:37 -请求地址 : http://localhost/login
2018-04-20 22:22:37 -HTTP METHOD : GET
2018-04-20 22:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:22:37 -参数 : []
2018-04-20 22:22:37 -耗时 : 0
2018-04-20 22:22:37 -返回值 : login
2018-04-20 22:22:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:22:45 -==> Parameters: test(String)
2018-04-20 22:22:45 -<==      Total: 1
2018-04-20 22:22:45 -请求地址 : http://localhost/login
2018-04-20 22:22:45 -HTTP METHOD : POST
2018-04-20 22:22:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:22:45 -参数 : [test, 123456]
2018-04-20 22:22:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:22:45 -==> Parameters: test(String)
2018-04-20 22:22:45 -<==      Total: 1
2018-04-20 22:22:45 -耗时 : 7
2018-04-20 22:22:45 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:22:45 -请求地址 : http://localhost/index
2018-04-20 22:22:45 -HTTP METHOD : GET
2018-04-20 22:22:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:22:45 -参数 : [{}]
2018-04-20 22:22:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:22:45 -==> Parameters: 2(Long)
2018-04-20 22:22:45 -<==      Total: 8
2018-04-20 22:22:45 -耗时 : 4
2018-04-20 22:22:45 -返回值 : index_v1
2018-04-20 22:22:45 -请求地址 : http://localhost/main
2018-04-20 22:22:45 -HTTP METHOD : GET
2018-04-20 22:22:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:22:45 -参数 : []
2018-04-20 22:22:45 -耗时 : 1
2018-04-20 22:22:45 -返回值 : main
2018-04-20 22:22:45 -请求地址 : http://localhost/main
2018-04-20 22:22:45 -HTTP METHOD : GET
2018-04-20 22:22:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:22:45 -参数 : []
2018-04-20 22:22:45 -耗时 : 0
2018-04-20 22:22:45 -返回值 : main
2018-04-20 22:22:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:22:50 -==> Parameters: 2(Long)
2018-04-20 22:22:50 -<==      Total: 9
2018-04-20 22:22:50 -请求地址 : http://localhost/system/order/
2018-04-20 22:22:50 -HTTP METHOD : GET
2018-04-20 22:22:50 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:22:50 -参数 : []
2018-04-20 22:22:50 -耗时 : 0
2018-04-20 22:22:50 -返回值 : system/order/order
2018-04-20 22:22:50 -请求地址 : http://localhost/system/order/list
2018-04-20 22:22:50 -HTTP METHOD : GET
2018-04-20 22:22:50 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:22:50 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:22:50 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:22:50 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:50 -<==      Total: 1
2018-04-20 22:22:50 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:22:50 -==> Parameters: 
2018-04-20 22:22:50 -<==      Total: 1
2018-04-20 22:22:50 -耗时 : 4
2018-04-20 22:22:50 -返回值 : com.bootdo.common.utils.PageUtils@30df23a6
2018-04-20 22:22:52 -请求地址 : http://localhost/system/good
2018-04-20 22:22:52 -HTTP METHOD : GET
2018-04-20 22:22:52 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 22:22:52 -参数 : []
2018-04-20 22:22:52 -耗时 : 0
2018-04-20 22:22:52 -返回值 : system/good/good
2018-04-20 22:22:52 -请求地址 : http://localhost/system/good/list
2018-04-20 22:22:52 -HTTP METHOD : GET
2018-04-20 22:22:52 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 22:22:52 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 22:22:52 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 22:22:52 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:52 -<==      Total: 2
2018-04-20 22:22:52 -==>  Preparing: select count(*) from t_good 
2018-04-20 22:22:52 -==> Parameters: 
2018-04-20 22:22:52 -<==      Total: 1
2018-04-20 22:22:52 -耗时 : 3
2018-04-20 22:22:52 -返回值 : com.bootdo.common.utils.PageUtils@457541d9
2018-04-20 22:22:54 -请求地址 : http://localhost/system/car
2018-04-20 22:22:54 -HTTP METHOD : GET
2018-04-20 22:22:54 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 22:22:54 -参数 : []
2018-04-20 22:22:54 -耗时 : 0
2018-04-20 22:22:54 -返回值 : system/car/car
2018-04-20 22:22:54 -请求地址 : http://localhost/system/car/list
2018-04-20 22:22:54 -HTTP METHOD : GET
2018-04-20 22:22:54 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 22:22:54 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 22:22:54 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-20 22:22:54 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:54 -<==      Total: 1
2018-04-20 22:22:54 -==>  Preparing: select count(*) from t_car 
2018-04-20 22:22:54 -==> Parameters: 
2018-04-20 22:22:54 -<==      Total: 1
2018-04-20 22:22:54 -耗时 : 5
2018-04-20 22:22:54 -返回值 : com.bootdo.common.utils.PageUtils@748b3a44
2018-04-20 22:22:56 -请求地址 : http://localhost/system/logistics
2018-04-20 22:22:56 -HTTP METHOD : GET
2018-04-20 22:22:56 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 22:22:56 -参数 : []
2018-04-20 22:22:56 -耗时 : 0
2018-04-20 22:22:56 -返回值 : system/logistics/logistics
2018-04-20 22:22:56 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:22:56 -HTTP METHOD : GET
2018-04-20 22:22:56 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:22:56 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:22:56 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:22:56 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:22:56 -<==      Total: 1
2018-04-20 22:22:56 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:22:56 -==> Parameters: 
2018-04-20 22:22:56 -<==      Total: 1
2018-04-20 22:22:56 -耗时 : 3
2018-04-20 22:22:56 -返回值 : com.bootdo.common.utils.PageUtils@515bfd1f
2018-04-20 22:22:58 -请求地址 : http://localhost/sys/user/personal
2018-04-20 22:22:58 -HTTP METHOD : GET
2018-04-20 22:22:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2018-04-20 22:22:58 -参数 : [{}]
2018-04-20 22:22:58 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:22:58 -==> Parameters: 2(Long)
2018-04-20 22:22:58 -<==      Total: 1
2018-04-20 22:22:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 22:22:58 -==> Parameters: 2(Long)
2018-04-20 22:22:58 -<==      Total: 1
2018-04-20 22:22:58 -耗时 : 6
2018-04-20 22:22:58 -返回值 : system/user/personal
2018-04-20 22:23:33 -Subject does not have permission [sys:user:edit]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:user:edit]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$2423f544.updatePeronal(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-04-20 22:23:48 -请求地址 : http://localhost/
2018-04-20 22:23:48 -HTTP METHOD : GET
2018-04-20 22:23:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:23:48 -参数 : [{}]
2018-04-20 22:23:48 -耗时 : 0
2018-04-20 22:23:48 -返回值 : redirect:/login
2018-04-20 22:23:48 -请求地址 : http://localhost/login
2018-04-20 22:23:48 -HTTP METHOD : GET
2018-04-20 22:23:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:23:48 -参数 : []
2018-04-20 22:23:48 -耗时 : 0
2018-04-20 22:23:48 -返回值 : login
2018-04-20 22:23:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:23:49 -==> Parameters: admin(String)
2018-04-20 22:23:49 -<==      Total: 1
2018-04-20 22:23:49 -请求地址 : http://localhost/login
2018-04-20 22:23:49 -HTTP METHOD : POST
2018-04-20 22:23:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:23:49 -参数 : [admin, 123456]
2018-04-20 22:23:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:23:49 -==> Parameters: admin(String)
2018-04-20 22:23:49 -<==      Total: 1
2018-04-20 22:23:49 -耗时 : 3
2018-04-20 22:23:49 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:23:50 -请求地址 : http://localhost/index
2018-04-20 22:23:50 -HTTP METHOD : GET
2018-04-20 22:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:23:50 -参数 : [{}]
2018-04-20 22:23:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:23:50 -==> Parameters: 1(Long)
2018-04-20 22:23:50 -<==      Total: 18
2018-04-20 22:23:50 -耗时 : 7
2018-04-20 22:23:50 -返回值 : index_v1
2018-04-20 22:23:50 -请求地址 : http://localhost/main
2018-04-20 22:23:50 -HTTP METHOD : GET
2018-04-20 22:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:23:50 -参数 : []
2018-04-20 22:23:50 -耗时 : 0
2018-04-20 22:23:50 -返回值 : main
2018-04-20 22:23:50 -请求地址 : http://localhost/main
2018-04-20 22:23:50 -HTTP METHOD : GET
2018-04-20 22:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:23:50 -参数 : []
2018-04-20 22:23:50 -耗时 : 0
2018-04-20 22:23:50 -返回值 : main
2018-04-20 22:23:54 -请求地址 : http://localhost/sys/user/personal
2018-04-20 22:23:54 -HTTP METHOD : GET
2018-04-20 22:23:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2018-04-20 22:23:54 -参数 : [{}]
2018-04-20 22:23:54 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:23:54 -==> Parameters: 1(Long)
2018-04-20 22:23:54 -<==      Total: 1
2018-04-20 22:23:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 22:23:54 -==> Parameters: 1(Long)
2018-04-20 22:23:54 -<==      Total: 1
2018-04-20 22:23:54 -耗时 : 6
2018-04-20 22:23:54 -返回值 : system/user/personal
2018-04-20 22:24:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:24:27 -==> Parameters: 1(Long)
2018-04-20 22:24:27 -<==      Total: 53
2018-04-20 22:24:27 -请求地址 : http://localhost/sys/user/updatePeronal
2018-04-20 22:24:27 -HTTP METHOD : POST
2018-04-20 22:24:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.updatePeronal
2018-04-20 22:24:27 -参数 : [UserDO{userId=1, username='null', name='张三', password='null', deptId=null, deptName='null', email='admin@163.com', mobile='18180445365', status=null, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=Fri Apr 20 00:00:00 CST 2018, picId=null, liveAddress='', hobby='', province='北京市', city='北京市市辖区', district='东城区'}]
2018-04-20 22:24:27 -==>  Preparing: update sys_user SET `name` = ?, `email` = ?, `mobile` = ?, `birth` = ?, `live_address` = ?, `hobby` = ?, `province` = ?, `city` = ?, `district` = ? where user_id = ? 
2018-04-20 22:24:27 -==> Parameters: 张三(String), admin@163.com(String), 18180445365(String), 2018-04-20 00:00:00.0(Timestamp), (String), (String), 北京市(String), 北京市市辖区(String), 东城区(String), 1(Long)
2018-04-20 22:24:27 -<==    Updates: 1
2018-04-20 22:24:27 -耗时 : 196
2018-04-20 22:24:27 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:24:32 -请求地址 : http://localhost/sys/user/personal
2018-04-20 22:24:32 -HTTP METHOD : GET
2018-04-20 22:24:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2018-04-20 22:24:32 -参数 : [{}]
2018-04-20 22:24:32 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:24:32 -==> Parameters: 1(Long)
2018-04-20 22:24:32 -<==      Total: 1
2018-04-20 22:24:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 22:24:32 -==> Parameters: 1(Long)
2018-04-20 22:24:32 -<==      Total: 1
2018-04-20 22:24:32 -耗时 : 6
2018-04-20 22:24:32 -返回值 : system/user/personal
2018-04-20 22:24:38 -请求地址 : http://localhost/system/order/
2018-04-20 22:24:38 -HTTP METHOD : GET
2018-04-20 22:24:38 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:24:38 -参数 : []
2018-04-20 22:24:38 -耗时 : 0
2018-04-20 22:24:38 -返回值 : system/order/order
2018-04-20 22:24:38 -请求地址 : http://localhost/system/order/list
2018-04-20 22:24:38 -HTTP METHOD : GET
2018-04-20 22:24:38 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:24:38 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:24:38 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:24:38 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:24:38 -<==      Total: 1
2018-04-20 22:24:38 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:24:38 -==> Parameters: 
2018-04-20 22:24:38 -<==      Total: 1
2018-04-20 22:24:38 -耗时 : 4
2018-04-20 22:24:38 -返回值 : com.bootdo.common.utils.PageUtils@7e31aec4
2018-04-20 22:24:44 -请求地址 : http://localhost/system/good
2018-04-20 22:24:44 -HTTP METHOD : GET
2018-04-20 22:24:44 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 22:24:44 -参数 : []
2018-04-20 22:24:44 -耗时 : 0
2018-04-20 22:24:44 -返回值 : system/good/good
2018-04-20 22:24:44 -请求地址 : http://localhost/system/good/list
2018-04-20 22:24:44 -HTTP METHOD : GET
2018-04-20 22:24:44 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 22:24:44 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 22:24:44 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 22:24:44 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:24:44 -<==      Total: 2
2018-04-20 22:24:44 -==>  Preparing: select count(*) from t_good 
2018-04-20 22:24:44 -==> Parameters: 
2018-04-20 22:24:44 -<==      Total: 1
2018-04-20 22:24:44 -耗时 : 4
2018-04-20 22:24:44 -返回值 : com.bootdo.common.utils.PageUtils@6aea45e6
2018-04-20 22:24:49 -请求地址 : http://localhost/system/order/add
2018-04-20 22:24:49 -HTTP METHOD : GET
2018-04-20 22:24:49 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2018-04-20 22:24:49 -参数 : []
2018-04-20 22:24:49 -耗时 : 0
2018-04-20 22:24:49 -返回值 : system/order/add
2018-04-20 22:25:51 -请求地址 : http://localhost/system/order/save
2018-04-20 22:25:51 -HTTP METHOD : POST
2018-04-20 22:25:51 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2018-04-20 22:25:51 -参数 : [com.bootdo.system.domain.OrderDO@6f006698]
2018-04-20 22:25:51 -==>  Preparing: insert into t_order ( `order_sn`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 22:25:51 -==> Parameters: 1524234351597(String), 张三(String), 100.0(Double), 5(Integer), 2018-04-20 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), null, 2018-04-20 22:25:51.597(Timestamp), 0(Integer), (String), 0002(String), 香蕉(String)
2018-04-20 22:25:51 -<==    Updates: 1
2018-04-20 22:25:51 -==>  Preparing: insert into t_order_settlement ( `order_sn`, `total_price`, `create_date`, `state` ) values ( ?, ?, ?, ? ) 
2018-04-20 22:25:51 -==> Parameters: 1524234351597(String), 100.0(Double), 2018-04-20 22:25:51.728(Timestamp), 0(Integer)
2018-04-20 22:25:51 -<==    Updates: 1
2018-04-20 22:25:51 -耗时 : 252
2018-04-20 22:25:51 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:25:51 -请求地址 : http://localhost/system/order/list
2018-04-20 22:25:51 -HTTP METHOD : GET
2018-04-20 22:25:51 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:25:51 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:25:51 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:25:51 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:25:51 -<==      Total: 2
2018-04-20 22:25:51 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:25:51 -==> Parameters: 
2018-04-20 22:25:51 -<==      Total: 1
2018-04-20 22:25:51 -耗时 : 11
2018-04-20 22:25:51 -返回值 : com.bootdo.common.utils.PageUtils@1dcbf6a1
2018-04-20 22:26:02 -请求地址 : http://localhost/system/order/edit/2
2018-04-20 22:26:02 -HTTP METHOD : GET
2018-04-20 22:26:02 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2018-04-20 22:26:02 -参数 : [2, {}]
2018-04-20 22:26:02 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2018-04-20 22:26:02 -==> Parameters: 2(Long)
2018-04-20 22:26:02 -<==      Total: 1
2018-04-20 22:26:02 -耗时 : 4
2018-04-20 22:26:02 -返回值 : system/order/edit
2018-04-20 22:26:10 -请求地址 : http://localhost/system/order/update
2018-04-20 22:26:10 -HTTP METHOD : POST
2018-04-20 22:26:10 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2018-04-20 22:26:10 -参数 : [com.bootdo.system.domain.OrderDO@6303a670]
2018-04-20 22:26:10 -==>  Preparing: update t_order SET `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 22:26:10 -==> Parameters: 张三(String), 100.0(Double), 5(Integer), 2018-04-21 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), (String), 0002(String), 香蕉(String), 2(Long)
2018-04-20 22:26:10 -<==    Updates: 1
2018-04-20 22:26:10 -耗时 : 227
2018-04-20 22:26:10 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:26:10 -请求地址 : http://localhost/system/order/list
2018-04-20 22:26:10 -HTTP METHOD : GET
2018-04-20 22:26:10 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:26:10 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:26:10 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:26:10 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:26:10 -<==      Total: 2
2018-04-20 22:26:10 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:26:10 -==> Parameters: 
2018-04-20 22:26:10 -<==      Total: 1
2018-04-20 22:26:10 -耗时 : 4
2018-04-20 22:26:10 -返回值 : com.bootdo.common.utils.PageUtils@5bbb7a65
2018-04-20 22:26:21 -请求地址 : http://localhost/system/order/statistics
2018-04-20 22:26:21 -HTTP METHOD : GET
2018-04-20 22:26:21 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 22:26:21 -参数 : []
2018-04-20 22:26:21 -耗时 : 0
2018-04-20 22:26:21 -返回值 : system/order/statistics
2018-04-20 22:26:21 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 22:26:21 -HTTP METHOD : GET
2018-04-20 22:26:21 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 22:26:21 -参数 : [{limit=10, offset=0}]
2018-04-20 22:26:21 -Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.statistics(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statistics(OrderServiceImpl.java:34)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:71)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$2690edd1.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 22:26:24 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 22:26:24 -HTTP METHOD : GET
2018-04-20 22:26:24 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 22:26:24 -参数 : []
2018-04-20 22:26:24 -耗时 : 1
2018-04-20 22:26:24 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 22:26:24 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 22:26:24 -HTTP METHOD : GET
2018-04-20 22:26:24 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 22:26:24 -参数 : [{limit=10, offset=0}]
2018-04-20 22:26:24 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 22:26:24 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:26:24 -<==      Total: 1
2018-04-20 22:26:24 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 22:26:24 -==> Parameters: 
2018-04-20 22:26:24 -<==      Total: 1
2018-04-20 22:26:24 -耗时 : 4
2018-04-20 22:26:24 -返回值 : com.bootdo.common.utils.PageUtils@1d068eab
2018-04-20 22:26:50 -请求地址 : http://localhost/system/logistics
2018-04-20 22:26:50 -HTTP METHOD : GET
2018-04-20 22:26:50 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 22:26:50 -参数 : []
2018-04-20 22:26:50 -耗时 : 1
2018-04-20 22:26:50 -返回值 : system/logistics/logistics
2018-04-20 22:26:50 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:26:50 -HTTP METHOD : GET
2018-04-20 22:26:50 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:26:50 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:26:50 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:26:50 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:26:50 -<==      Total: 1
2018-04-20 22:26:50 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:26:50 -==> Parameters: 
2018-04-20 22:26:50 -<==      Total: 1
2018-04-20 22:26:50 -耗时 : 3
2018-04-20 22:26:50 -返回值 : com.bootdo.common.utils.PageUtils@648f20e9
2018-04-20 22:27:01 -请求地址 : http://localhost/system/logistics/edit/1
2018-04-20 22:27:01 -HTTP METHOD : GET
2018-04-20 22:27:01 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2018-04-20 22:27:01 -参数 : [1, {}]
2018-04-20 22:27:01 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics where id = ? 
2018-04-20 22:27:01 -==> Parameters: 1(Long)
2018-04-20 22:27:01 -<==      Total: 1
2018-04-20 22:27:01 -耗时 : 4
2018-04-20 22:27:01 -返回值 : system/logistics/edit
2018-04-20 22:28:24 -请求地址 : http://localhost/system/logistics/add
2018-04-20 22:28:24 -HTTP METHOD : GET
2018-04-20 22:28:24 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-20 22:28:24 -参数 : []
2018-04-20 22:28:24 -耗时 : 1
2018-04-20 22:28:24 -返回值 : system/logistics/add
2018-04-20 22:30:56 -请求地址 : http://localhost/index
2018-04-20 22:30:56 -HTTP METHOD : GET
2018-04-20 22:30:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:30:56 -参数 : [{}]
2018-04-20 22:30:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:30:56 -==> Parameters: 1(Long)
2018-04-20 22:30:56 -<==      Total: 18
2018-04-20 22:30:56 -耗时 : 6
2018-04-20 22:30:56 -返回值 : index_v1
2018-04-20 22:30:56 -请求地址 : http://localhost/main
2018-04-20 22:30:56 -HTTP METHOD : GET
2018-04-20 22:30:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:30:56 -参数 : []
2018-04-20 22:30:56 -耗时 : 0
2018-04-20 22:30:56 -返回值 : main
2018-04-20 22:30:57 -请求地址 : http://localhost/main
2018-04-20 22:30:57 -HTTP METHOD : GET
2018-04-20 22:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:30:57 -参数 : []
2018-04-20 22:30:57 -耗时 : 1
2018-04-20 22:30:57 -返回值 : main
2018-04-20 22:30:58 -请求地址 : http://localhost/index
2018-04-20 22:30:58 -HTTP METHOD : GET
2018-04-20 22:30:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:30:58 -参数 : [{}]
2018-04-20 22:30:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:30:58 -==> Parameters: 1(Long)
2018-04-20 22:30:58 -<==      Total: 18
2018-04-20 22:30:58 -耗时 : 6
2018-04-20 22:30:58 -返回值 : index_v1
2018-04-20 22:30:58 -请求地址 : http://localhost/main
2018-04-20 22:30:58 -HTTP METHOD : GET
2018-04-20 22:30:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:30:58 -参数 : []
2018-04-20 22:30:58 -耗时 : 0
2018-04-20 22:30:58 -返回值 : main
2018-04-20 22:30:58 -请求地址 : http://localhost/main
2018-04-20 22:30:58 -HTTP METHOD : GET
2018-04-20 22:30:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:30:58 -参数 : []
2018-04-20 22:30:58 -耗时 : 0
2018-04-20 22:30:58 -返回值 : main
2018-04-20 22:31:00 -请求地址 : http://localhost/system/logistics
2018-04-20 22:31:00 -HTTP METHOD : GET
2018-04-20 22:31:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 22:31:00 -参数 : []
2018-04-20 22:31:00 -耗时 : 0
2018-04-20 22:31:00 -返回值 : system/logistics/logistics
2018-04-20 22:31:00 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:31:00 -HTTP METHOD : GET
2018-04-20 22:31:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:31:00 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:31:00 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:31:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:31:00 -<==      Total: 1
2018-04-20 22:31:00 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:31:00 -==> Parameters: 
2018-04-20 22:31:00 -<==      Total: 1
2018-04-20 22:31:00 -耗时 : 3
2018-04-20 22:31:00 -返回值 : com.bootdo.common.utils.PageUtils@5f34f874
2018-04-20 22:31:02 -请求地址 : http://localhost/system/logistics/edit/1
2018-04-20 22:31:02 -HTTP METHOD : GET
2018-04-20 22:31:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2018-04-20 22:31:02 -参数 : [1, {}]
2018-04-20 22:31:02 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics where id = ? 
2018-04-20 22:31:02 -==> Parameters: 1(Long)
2018-04-20 22:31:02 -<==      Total: 1
2018-04-20 22:31:02 -耗时 : 2
2018-04-20 22:31:02 -返回值 : system/logistics/edit
2018-04-20 22:31:05 -请求地址 : http://localhost/system/logistics/add
2018-04-20 22:31:05 -HTTP METHOD : GET
2018-04-20 22:31:05 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-20 22:31:05 -参数 : []
2018-04-20 22:31:05 -耗时 : 0
2018-04-20 22:31:05 -返回值 : system/logistics/add
2018-04-20 22:31:08 -请求地址 : http://localhost/system/logistics/edit/1
2018-04-20 22:31:08 -HTTP METHOD : GET
2018-04-20 22:31:08 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2018-04-20 22:31:08 -参数 : [1, {}]
2018-04-20 22:31:08 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics where id = ? 
2018-04-20 22:31:08 -==> Parameters: 1(Long)
2018-04-20 22:31:08 -<==      Total: 1
2018-04-20 22:31:08 -耗时 : 2
2018-04-20 22:31:08 -返回值 : system/logistics/edit
2018-04-20 22:31:14 -请求地址 : http://localhost/system/order/
2018-04-20 22:31:14 -HTTP METHOD : GET
2018-04-20 22:31:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:31:14 -参数 : []
2018-04-20 22:31:14 -耗时 : 0
2018-04-20 22:31:14 -返回值 : system/order/order
2018-04-20 22:31:14 -请求地址 : http://localhost/system/order/list
2018-04-20 22:31:14 -HTTP METHOD : GET
2018-04-20 22:31:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:31:14 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:31:14 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:31:14 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:31:14 -<==      Total: 2
2018-04-20 22:31:14 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:31:14 -==> Parameters: 
2018-04-20 22:31:14 -<==      Total: 1
2018-04-20 22:31:14 -耗时 : 4
2018-04-20 22:31:14 -返回值 : com.bootdo.common.utils.PageUtils@3a8a5cff
2018-04-20 22:32:08 -请求地址 : http://localhost/system/good
2018-04-20 22:32:08 -HTTP METHOD : GET
2018-04-20 22:32:08 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 22:32:08 -参数 : []
2018-04-20 22:32:08 -耗时 : 0
2018-04-20 22:32:08 -返回值 : system/good/good
2018-04-20 22:32:08 -请求地址 : http://localhost/system/good/list
2018-04-20 22:32:08 -HTTP METHOD : GET
2018-04-20 22:32:08 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 22:32:08 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 22:32:08 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 22:32:08 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:32:08 -<==      Total: 2
2018-04-20 22:32:08 -==>  Preparing: select count(*) from t_good 
2018-04-20 22:32:08 -==> Parameters: 
2018-04-20 22:32:08 -<==      Total: 1
2018-04-20 22:32:08 -耗时 : 4
2018-04-20 22:32:08 -返回值 : com.bootdo.common.utils.PageUtils@5b3adf7b
2018-04-20 22:32:16 -请求地址 : http://localhost/system/logistics/update
2018-04-20 22:32:16 -HTTP METHOD : POST
2018-04-20 22:32:16 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.update
2018-04-20 22:32:16 -参数 : [com.bootdo.system.domain.LogisticsDO@8585afb]
2018-04-20 22:32:16 -==>  Preparing: update t_logistics SET `no` = ?, `good_number` = ?, `good_name` = ?, `send_name` = ?, `send_address` = ?, `send_telephone` = ?, `send_province` = ?, `send_city` = ?, `send_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `arrive_province` = ?, `arrive_city` = ?, `arrive_date` = ? where id = ? 
2018-04-20 22:32:16 -==> Parameters: 0312456(String), 0002(String), 香蕉(String), 张三(String), 广东省(String), 12345678901(String), 广东省(String), 广州(String), 2018-04-17 00:00:00.0(Timestamp), 李四(String), 山东青岛(String), 12345678901(String), 山东(String), 青岛(String), 2018-04-19 00:00:00.0(Timestamp), 1(Long)
2018-04-20 22:32:16 -<==    Updates: 1
2018-04-20 22:32:16 -耗时 : 160
2018-04-20 22:32:16 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:32:16 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:32:16 -HTTP METHOD : GET
2018-04-20 22:32:16 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:32:16 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:32:16 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:32:16 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:32:16 -<==      Total: 1
2018-04-20 22:32:16 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:32:16 -==> Parameters: 
2018-04-20 22:32:16 -<==      Total: 1
2018-04-20 22:32:16 -耗时 : 9
2018-04-20 22:32:16 -返回值 : com.bootdo.common.utils.PageUtils@3149e367
2018-04-20 22:32:21 -请求地址 : http://localhost/system/logistics/edit/1
2018-04-20 22:32:21 -HTTP METHOD : GET
2018-04-20 22:32:21 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2018-04-20 22:32:21 -参数 : [1, {}]
2018-04-20 22:32:21 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics where id = ? 
2018-04-20 22:32:21 -==> Parameters: 1(Long)
2018-04-20 22:32:21 -<==      Total: 1
2018-04-20 22:32:21 -耗时 : 2
2018-04-20 22:32:21 -返回值 : system/logistics/edit
2018-04-20 22:32:29 -请求地址 : http://localhost/system/logistics/add
2018-04-20 22:32:29 -HTTP METHOD : GET
2018-04-20 22:32:29 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-20 22:32:29 -参数 : []
2018-04-20 22:32:29 -耗时 : 0
2018-04-20 22:32:29 -返回值 : system/logistics/add
2018-04-20 22:32:59 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:32:59 -HTTP METHOD : GET
2018-04-20 22:32:59 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:32:59 -参数 : []
2018-04-20 22:32:59 -耗时 : 1
2018-04-20 22:32:59 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:33:00 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:33:00 -HTTP METHOD : GET
2018-04-20 22:33:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:33:00 -参数 : [{limit=10, offset=0}]
2018-04-20 22:33:00 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:33:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:33:00 -<==      Total: 0
2018-04-20 22:33:00 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:33:00 -==> Parameters: 
2018-04-20 22:33:00 -<==      Total: 1
2018-04-20 22:33:00 -耗时 : 4
2018-04-20 22:33:00 -返回值 : com.bootdo.common.utils.PageUtils@2056b0bc
2018-04-20 22:33:01 -请求地址 : http://localhost/system/logisticsManage/add
2018-04-20 22:33:01 -HTTP METHOD : GET
2018-04-20 22:33:01 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.add
2018-04-20 22:33:01 -参数 : []
2018-04-20 22:33:01 -耗时 : 1
2018-04-20 22:33:01 -返回值 : system/logisticsManage/add
2018-04-20 22:33:58 -请求地址 : http://localhost/system/car
2018-04-20 22:33:58 -HTTP METHOD : GET
2018-04-20 22:33:58 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 22:33:58 -参数 : []
2018-04-20 22:33:58 -耗时 : 0
2018-04-20 22:33:58 -返回值 : system/car/car
2018-04-20 22:33:58 -请求地址 : http://localhost/system/car/list
2018-04-20 22:33:58 -HTTP METHOD : GET
2018-04-20 22:33:58 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 22:33:58 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 22:33:58 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-20 22:33:58 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:33:58 -<==      Total: 1
2018-04-20 22:33:58 -==>  Preparing: select count(*) from t_car 
2018-04-20 22:33:58 -==> Parameters: 
2018-04-20 22:33:58 -<==      Total: 1
2018-04-20 22:33:58 -耗时 : 4
2018-04-20 22:33:58 -返回值 : com.bootdo.common.utils.PageUtils@b371820
2018-04-20 22:34:23 -请求地址 : http://localhost/system/logisticsManage/save
2018-04-20 22:34:23 -HTTP METHOD : POST
2018-04-20 22:34:23 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.save
2018-04-20 22:34:23 -参数 : [com.bootdo.system.domain.LogisticsManageDO@7297d270]
2018-04-20 22:34:23 -==>  Preparing: insert into t_logistics_manage ( `logistics_no`, `drivier_name`, `car_no`, `create_date`, `status` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 22:34:23 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 2018-04-20 22:34:23.39(Timestamp), 0(Integer)
2018-04-20 22:34:23 -<==    Updates: 1
2018-04-20 22:34:23 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 22:34:23 -==> Parameters: 0312456(String)
2018-04-20 22:34:23 -<==      Total: 1
2018-04-20 22:34:23 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 22:34:23 -==> Parameters: 0002(String), 香蕉(String)
2018-04-20 22:34:23 -<==      Total: 1
2018-04-20 22:34:23 -耗时 : 62
2018-04-20 22:34:23 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:34:23 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:34:23 -HTTP METHOD : GET
2018-04-20 22:34:23 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:34:23 -参数 : [{limit=10, offset=0}]
2018-04-20 22:34:23 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:34:23 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:34:23 -<==      Total: 1
2018-04-20 22:34:23 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:34:23 -==> Parameters: 
2018-04-20 22:34:23 -<==      Total: 1
2018-04-20 22:34:23 -耗时 : 3
2018-04-20 22:34:23 -返回值 : com.bootdo.common.utils.PageUtils@99db74d
2018-04-20 22:35:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:35:04 -==> Parameters: 1(Long)
2018-04-20 22:35:04 -<==      Total: 53
2018-04-20 22:35:04 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:35:04 -HTTP METHOD : GET
2018-04-20 22:35:04 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:35:04 -参数 : [1, {}]
2018-04-20 22:35:04 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:35:04 -==> Parameters: 1(Long)
2018-04-20 22:35:04 -<==      Total: 1
2018-04-20 22:35:04 -耗时 : 3
2018-04-20 22:35:04 -返回值 : system/logisticsManage/edit
2018-04-20 22:35:04 -[THYMELEAF][http-nio-80-exec-3] Exception processing template "system/logisticsManage/edit": Could not parse as expression: "*${logisticsManage.status}" (system/logisticsManage/edit)
2018-04-20 22:35:04 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "*${logisticsManage.status}" (system/logisticsManage/edit)] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "*${logisticsManage.status}" (system/logisticsManage/edit)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:238)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:79)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:40)
	at org.thymeleaf.spring4.util.FieldUtils.getBindStatus(FieldUtils.java:319)
	at org.thymeleaf.spring4.util.FieldUtils.getBindStatus(FieldUtils.java:294)
	at org.thymeleaf.spring4.processor.attr.AbstractSpringFieldAttrProcessor.processAttribute(AbstractSpringFieldAttrProcessor.java:98)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 22:35:59 -请求地址 : http://localhost/index
2018-04-20 22:35:59 -HTTP METHOD : GET
2018-04-20 22:35:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:35:59 -参数 : [{}]
2018-04-20 22:35:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:35:59 -==> Parameters: 1(Long)
2018-04-20 22:35:59 -<==      Total: 18
2018-04-20 22:35:59 -耗时 : 6
2018-04-20 22:35:59 -返回值 : index_v1
2018-04-20 22:35:59 -请求地址 : http://localhost/main
2018-04-20 22:35:59 -HTTP METHOD : GET
2018-04-20 22:35:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:35:59 -参数 : []
2018-04-20 22:35:59 -耗时 : 2
2018-04-20 22:35:59 -返回值 : main
2018-04-20 22:36:00 -请求地址 : http://localhost/main
2018-04-20 22:36:00 -HTTP METHOD : GET
2018-04-20 22:36:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:36:00 -参数 : []
2018-04-20 22:36:00 -耗时 : 1
2018-04-20 22:36:00 -返回值 : main
2018-04-20 22:36:02 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:36:02 -HTTP METHOD : GET
2018-04-20 22:36:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:36:02 -参数 : []
2018-04-20 22:36:02 -耗时 : 0
2018-04-20 22:36:02 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:36:02 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:36:02 -HTTP METHOD : GET
2018-04-20 22:36:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:36:02 -参数 : [{limit=10, offset=0}]
2018-04-20 22:36:02 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:36:02 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:36:02 -<==      Total: 1
2018-04-20 22:36:02 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:36:02 -==> Parameters: 
2018-04-20 22:36:02 -<==      Total: 1
2018-04-20 22:36:02 -耗时 : 4
2018-04-20 22:36:02 -返回值 : com.bootdo.common.utils.PageUtils@32603793
2018-04-20 22:36:04 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:36:04 -HTTP METHOD : GET
2018-04-20 22:36:04 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:36:04 -参数 : [1, {}]
2018-04-20 22:36:04 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:36:04 -==> Parameters: 1(Long)
2018-04-20 22:36:04 -<==      Total: 1
2018-04-20 22:36:04 -耗时 : 3
2018-04-20 22:36:04 -返回值 : system/logisticsManage/edit
2018-04-20 22:36:08 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 22:36:08 -HTTP METHOD : POST
2018-04-20 22:36:08 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 22:36:08 -参数 : [com.bootdo.system.domain.LogisticsManageDO@6cd1470d]
2018-04-20 22:36:08 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 22:36:08 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 1(Integer), 1(Long)
2018-04-20 22:36:08 -<==    Updates: 1
2018-04-20 22:36:08 -耗时 : 133
2018-04-20 22:36:08 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:36:08 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:36:08 -HTTP METHOD : GET
2018-04-20 22:36:08 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:36:08 -参数 : [{limit=10, offset=0}]
2018-04-20 22:36:08 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:36:08 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:36:08 -<==      Total: 1
2018-04-20 22:36:08 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:36:08 -==> Parameters: 
2018-04-20 22:36:08 -<==      Total: 1
2018-04-20 22:36:08 -耗时 : 2
2018-04-20 22:36:08 -返回值 : com.bootdo.common.utils.PageUtils@5124b27c
2018-04-20 22:36:14 -请求地址 : http://localhost/system/order/
2018-04-20 22:36:14 -HTTP METHOD : GET
2018-04-20 22:36:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:36:14 -参数 : []
2018-04-20 22:36:14 -耗时 : 0
2018-04-20 22:36:14 -返回值 : system/order/order
2018-04-20 22:36:14 -请求地址 : http://localhost/system/order/list
2018-04-20 22:36:14 -HTTP METHOD : GET
2018-04-20 22:36:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:36:14 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:36:14 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:36:14 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:36:14 -<==      Total: 2
2018-04-20 22:36:14 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:36:14 -==> Parameters: 
2018-04-20 22:36:14 -<==      Total: 1
2018-04-20 22:36:14 -耗时 : 7
2018-04-20 22:36:14 -返回值 : com.bootdo.common.utils.PageUtils@113e7439
2018-04-20 22:37:15 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 2296 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 22:37:15 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 22:37:15 -The following profiles are active: dev
2018-04-20 22:37:16 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 22:37:16 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:37:16 CST 2018]; root of context hierarchy
2018-04-20 22:37:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 22:37:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9ff7a6df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9250d586] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 22:37:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 22:37:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:37:19 -Tomcat initialized with port(s): 80 (http)
2018-04-20 22:37:19 -Starting service [Tomcat]
2018-04-20 22:37:19 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 22:37:19 -Initializing Spring embedded WebApplicationContext
2018-04-20 22:37:19 -Root WebApplicationContext: initialization completed in 3539 ms
2018-04-20 22:37:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 22:37:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 22:37:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 22:37:20 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 22:37:20 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 22:37:20 -Filter xssFilter was not registered (disabled)
2018-04-20 22:37:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 22:37:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 22:37:20 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 22:37:20 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 22:37:20 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:37:16 CST 2018]; root of context hierarchy
2018-04-20 22:37:20 -{dataSource-1} inited
2018-04-20 22:37:21 -Using default implementation for ThreadExecutor
2018-04-20 22:37:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 22:37:21 -Quartz Scheduler v.2.2.1 created.
2018-04-20 22:37:21 -RAMJobStore initialized.
2018-04-20 22:37:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 22:37:21 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 22:37:21 -Quartz scheduler version: 2.2.1
2018-04-20 22:37:21 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53079ae6
2018-04-20 22:37:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 22:37:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 22:37:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:37:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:37:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:37:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:37:23 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 22:37:23 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 22:37:23 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 22:37:23 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 22:37:23 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 22:37:23 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 22:37:23 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 22:37:23 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 22:37:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 22:37:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 22:37:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 22:37:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 22:37:23 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 22:37:23 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:37:23 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:37:23 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 22:37:23 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 22:37:23 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 22:37:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 22:37:23 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 22:37:23 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 22:37:23 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 22:37:23 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 22:37:23 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 22:37:23 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:37:23 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 22:37:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 22:37:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 22:37:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 22:37:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 22:37:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 22:37:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 22:37:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 22:37:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 22:37:23 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 22:37:23 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 22:37:23 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 22:37:23 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 22:37:23 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:37:23 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 22:37:23 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 22:37:23 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 22:37:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:37:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:37:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 22:37:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 22:37:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:37:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:37:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 22:37:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 22:37:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:37:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:37:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:37:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 22:37:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 22:37:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 22:37:24 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:37:16 CST 2018]; root of context hierarchy
2018-04-20 22:37:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:37:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:37:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:37:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 22:37:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:37:26 -

Using default security password: c1bad4b2-1d16-4a24-84ad-522414a1d125

2018-04-20 22:37:26 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 22:37:26 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@548c5127, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35630ee8, org.springframework.security.web.context.SecurityContextPersistenceFilter@3976910, org.springframework.security.web.header.HeaderWriterFilter@e76134d, org.springframework.security.web.csrf.CsrfFilter@3f2a7ca0, org.springframework.security.web.authentication.logout.LogoutFilter@16f15a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f2169e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cc42abe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e80de85, org.springframework.security.web.session.SessionManagementFilter@39b9dc35, org.springframework.security.web.access.ExceptionTranslationFilter@2dbf8cfc]
2018-04-20 22:37:27 -Registering beans for JMX exposure on startup
2018-04-20 22:37:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 22:37:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 22:37:27 -Starting beans in phase 2147483647
2018-04-20 22:37:27 -Context refreshed
2018-04-20 22:37:27 -Found 1 custom documentation plugin(s)
2018-04-20 22:37:27 -Scanning for api listing references
2018-04-20 22:37:27 -Generating unique operation named: removeUsingPOST_1
2018-04-20 22:37:27 -Generating unique operation named: editUsingGET_1
2018-04-20 22:37:27 -Generating unique operation named: listUsingGET_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingPOST_1
2018-04-20 22:37:27 -Generating unique operation named: addUsingGET_1
2018-04-20 22:37:27 -Generating unique operation named: editUsingGET_2
2018-04-20 22:37:27 -Generating unique operation named: listUsingGET_2
2018-04-20 22:37:27 -Generating unique operation named: removeUsingPOST_2
2018-04-20 22:37:27 -Generating unique operation named: removeUsingPOST_3
2018-04-20 22:37:27 -Generating unique operation named: saveUsingPOST_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingGET_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingPOST_2
2018-04-20 22:37:27 -Generating unique operation named: updateUsingPUT_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 22:37:27 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 22:37:27 -Generating unique operation named: viewUsingGET_1
2018-04-20 22:37:28 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_2
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_3
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_3
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_4
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_5
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 22:37:28 -Generating unique operation named: viewUsingGET_2
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_3
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_4
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_4
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_6
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_7
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_4
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_5
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_5
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_8
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_4
2018-04-20 22:37:28 -Generating unique operation named: treeUsingGET_1
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_5
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_5
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_6
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_6
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_9
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_10
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 22:37:28 -Generating unique operation named: viewUsingGET_3
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_6
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_7
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_7
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_11
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_12
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_7
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_7
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_8
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_8
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_8
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_9
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_8
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_9
2018-04-20 22:37:28 -Generating unique operation named: listUsingHEAD_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingPOST_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingPUT_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingPATCH_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingDELETE_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingTRACE_1
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_8
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_9
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_10
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_13
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_14
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_10
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_9
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_9
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_10
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_11
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_15
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_16
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_11
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_10
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_10
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_11
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_12
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_17
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_18
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_12
2018-04-20 22:37:28 -Generating unique operation named: updateUsingGET_8
2018-04-20 22:37:28 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_11
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPUT_8
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 22:37:28 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 22:37:28 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 22:37:28 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 22:37:28 -Generating unique operation named: addUsingGET_11
2018-04-20 22:37:28 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 22:37:28 -Generating unique operation named: editUsingGET_12
2018-04-20 22:37:28 -Generating unique operation named: exitUsingPOST_1
2018-04-20 22:37:28 -Generating unique operation named: listUsingGET_13
2018-04-20 22:37:28 -Generating unique operation named: removeUsingPOST_19
2018-04-20 22:37:28 -Generating unique operation named: saveUsingPOST_13
2018-04-20 22:37:28 -Generating unique operation named: updateUsingPOST_12
2018-04-20 22:37:28 -Generating unique operation named: userUsingGET_1
2018-04-20 22:37:28 -Starting Quartz Scheduler now
2018-04-20 22:37:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 22:37:28 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 22:37:28 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 22:37:28 -Using a shared selector for servlet write/read
2018-04-20 22:37:28 -Tomcat started on port(s): 80 (http)
2018-04-20 22:37:28 -Started BootdoApplication in 13.658 seconds (JVM running for 14.118)
2018-04-20 22:38:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 22:38:06 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 22:38:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-04-20 22:38:06 -Enabling session validation scheduler...
2018-04-20 22:38:06 -请求地址 : http://localhost/login;JSESSIONID=6e425794-93fa-442d-ab57-94947e0b916d
2018-04-20 22:38:06 -HTTP METHOD : GET
2018-04-20 22:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:38:06 -参数 : []
2018-04-20 22:38:06 -耗时 : 2
2018-04-20 22:38:06 -返回值 : login
2018-04-20 22:38:06 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 22:38:06 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 22:38:06 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 22:38:06 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 22:38:06 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 22:38:06 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 22:38:06 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 22:38:07 -请求地址 : http://localhost/login;JSESSIONID=6e425794-93fa-442d-ab57-94947e0b916d
2018-04-20 22:38:07 -HTTP METHOD : GET
2018-04-20 22:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:38:07 -参数 : []
2018-04-20 22:38:07 -耗时 : 0
2018-04-20 22:38:07 -返回值 : login
2018-04-20 22:38:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:38:09 -==> Parameters: admin(String)
2018-04-20 22:38:09 -<==      Total: 1
2018-04-20 22:38:09 -请求地址 : http://localhost/login
2018-04-20 22:38:09 -HTTP METHOD : POST
2018-04-20 22:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:38:09 -参数 : [admin, 123456]
2018-04-20 22:38:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:38:09 -==> Parameters: admin(String)
2018-04-20 22:38:09 -<==      Total: 1
2018-04-20 22:38:09 -耗时 : 14
2018-04-20 22:38:09 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:38:09 -请求地址 : http://localhost/index
2018-04-20 22:38:09 -HTTP METHOD : GET
2018-04-20 22:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:38:09 -参数 : [{}]
2018-04-20 22:38:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:38:09 -==> Parameters: 1(Long)
2018-04-20 22:38:09 -<==      Total: 18
2018-04-20 22:38:09 -耗时 : 67
2018-04-20 22:38:09 -返回值 : index_v1
2018-04-20 22:38:09 -请求地址 : http://localhost/main
2018-04-20 22:38:09 -HTTP METHOD : GET
2018-04-20 22:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:38:09 -参数 : []
2018-04-20 22:38:09 -耗时 : 0
2018-04-20 22:38:09 -返回值 : main
2018-04-20 22:38:09 -请求地址 : http://localhost/main
2018-04-20 22:38:09 -HTTP METHOD : GET
2018-04-20 22:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:38:09 -参数 : []
2018-04-20 22:38:09 -耗时 : 0
2018-04-20 22:38:09 -返回值 : main
2018-04-20 22:38:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:38:11 -==> Parameters: 1(Long)
2018-04-20 22:38:11 -<==      Total: 53
2018-04-20 22:38:11 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:38:11 -HTTP METHOD : GET
2018-04-20 22:38:11 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:38:11 -参数 : []
2018-04-20 22:38:11 -耗时 : 0
2018-04-20 22:38:11 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:38:12 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:38:12 -HTTP METHOD : GET
2018-04-20 22:38:12 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:38:12 -参数 : [{limit=10, offset=0}]
2018-04-20 22:38:12 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:38:12 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:38:12 -<==      Total: 1
2018-04-20 22:38:12 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:38:12 -==> Parameters: 
2018-04-20 22:38:12 -<==      Total: 1
2018-04-20 22:38:12 -耗时 : 56
2018-04-20 22:38:12 -返回值 : com.bootdo.common.utils.PageUtils@6982c89
2018-04-20 22:38:13 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:38:13 -HTTP METHOD : GET
2018-04-20 22:38:13 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:38:13 -参数 : [1, {}]
2018-04-20 22:38:13 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:38:13 -==> Parameters: 1(Long)
2018-04-20 22:38:13 -<==      Total: 1
2018-04-20 22:38:13 -耗时 : 3
2018-04-20 22:38:13 -返回值 : system/logisticsManage/edit
2018-04-20 22:38:15 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 22:38:15 -HTTP METHOD : POST
2018-04-20 22:38:15 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 22:38:15 -参数 : [com.bootdo.system.domain.LogisticsManageDO@d67060c]
2018-04-20 22:38:15 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 22:38:15 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 1(Integer), 1(Long)
2018-04-20 22:38:15 -<==    Updates: 1
2018-04-20 22:38:15 -耗时 : 75
2018-04-20 22:38:15 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:38:15 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:38:15 -HTTP METHOD : GET
2018-04-20 22:38:15 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:38:15 -参数 : [{limit=10, offset=0}]
2018-04-20 22:38:15 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:38:15 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:38:15 -<==      Total: 1
2018-04-20 22:38:15 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:38:15 -==> Parameters: 
2018-04-20 22:38:15 -<==      Total: 1
2018-04-20 22:38:15 -耗时 : 5
2018-04-20 22:38:15 -返回值 : com.bootdo.common.utils.PageUtils@30bbb59f
2018-04-20 22:39:15 -请求地址 : http://localhost/sys/role
2018-04-20 22:39:15 -HTTP METHOD : GET
2018-04-20 22:39:15 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 22:39:15 -参数 : []
2018-04-20 22:39:15 -耗时 : 0
2018-04-20 22:39:15 -返回值 : system/role/role
2018-04-20 22:39:15 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:39:15 -HTTP METHOD : GET
2018-04-20 22:39:15 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:39:15 -参数 : []
2018-04-20 22:39:15 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:39:15 -==> Parameters: 
2018-04-20 22:39:15 -<==      Total: 2
2018-04-20 22:39:15 -耗时 : 7
2018-04-20 22:39:15 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:39:17 -请求地址 : http://localhost/sys/role/edit/1
2018-04-20 22:39:17 -HTTP METHOD : GET
2018-04-20 22:39:17 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:39:17 -参数 : [1, {}]
2018-04-20 22:39:17 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:39:17 -==> Parameters: 1(Long)
2018-04-20 22:39:17 -<==      Total: 1
2018-04-20 22:39:17 -耗时 : 6
2018-04-20 22:39:17 -返回值 : system/role/edit
2018-04-20 22:39:18 -请求地址 : http://localhost/sys/menu/tree/1
2018-04-20 22:39:18 -HTTP METHOD : GET
2018-04-20 22:39:18 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:39:18 -参数 : [1]
2018-04-20 22:39:18 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:39:18 -==> Parameters: 
2018-04-20 22:39:18 -<==      Total: 84
2018-04-20 22:39:18 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:39:18 -==> Parameters: 1(Long)
2018-04-20 22:39:18 -<==      Total: 58
2018-04-20 22:39:18 -耗时 : 20
2018-04-20 22:39:18 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":true},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":true},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":true},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:39:23 -请求地址 : http://localhost/sys/role/update
2018-04-20 22:39:23 -HTTP METHOD : POST
2018-04-20 22:39:23 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2018-04-20 22:39:23 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[131, 113, 112, 111, 110, 150, 129, 133, 124, 123, 122, 121, 149, 148, 147, 130, 128, 127, 126, 125, 136, 142, 141, 140, 139, 138, 137, 132, 120, 119, 118, 117, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 108, 107, 106, 115, 105, 146, 116, 103, 135, 134, 114, 102, 7, 6, 2, 61, 22, 21, 20, 3, -1]}]
2018-04-20 22:39:23 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2018-04-20 22:39:23 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2018-04-20 22:39:23 -<==    Updates: 1
2018-04-20 22:39:23 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2018-04-20 22:39:23 -==> Parameters: 1(Long)
2018-04-20 22:39:23 -<==    Updates: 58
2018-04-20 22:39:23 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2018-04-20 22:39:23 -==> Parameters: 1(Long), 131(Long), 1(Long), 113(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 150(Long), 1(Long), 129(Long), 1(Long), 133(Long), 1(Long), 124(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 121(Long), 1(Long), 149(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 130(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 136(Long), 1(Long), 142(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 137(Long), 1(Long), 132(Long), 1(Long), 120(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 117(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 108(Long), 1(Long), 107(Long), 1(Long), 106(Long), 1(Long), 115(Long), 1(Long), 105(Long), 1(Long), 146(Long), 1(Long), 116(Long), 1(Long), 103(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 114(Long), 1(Long), 102(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 3(Long), 1(Long), -1(Long)
2018-04-20 22:39:24 -<==    Updates: 63
2018-04-20 22:39:24 -耗时 : 488
2018-04-20 22:39:24 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:39:24 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:39:24 -HTTP METHOD : GET
2018-04-20 22:39:24 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:39:24 -参数 : []
2018-04-20 22:39:24 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:39:24 -==> Parameters: 
2018-04-20 22:39:24 -<==      Total: 2
2018-04-20 22:39:24 -耗时 : 9
2018-04-20 22:39:24 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:39:26 -请求地址 : http://localhost/index
2018-04-20 22:39:26 -HTTP METHOD : GET
2018-04-20 22:39:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:39:26 -参数 : [{}]
2018-04-20 22:39:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:39:26 -==> Parameters: 1(Long)
2018-04-20 22:39:26 -<==      Total: 19
2018-04-20 22:39:26 -耗时 : 6
2018-04-20 22:39:26 -返回值 : index_v1
2018-04-20 22:39:26 -请求地址 : http://localhost/main
2018-04-20 22:39:26 -HTTP METHOD : GET
2018-04-20 22:39:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:39:26 -参数 : []
2018-04-20 22:39:26 -耗时 : 0
2018-04-20 22:39:26 -返回值 : main
2018-04-20 22:39:26 -请求地址 : http://localhost/main
2018-04-20 22:39:26 -HTTP METHOD : GET
2018-04-20 22:39:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:39:26 -参数 : []
2018-04-20 22:39:26 -耗时 : 0
2018-04-20 22:39:26 -返回值 : main
2018-04-20 22:39:28 -Subject does not have permission [sys:menu:menu]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:menu:menu]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.MenuController$$EnhancerBySpringCGLIB$$a941ce3a.menu(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-04-20 22:39:30 -请求地址 : http://localhost/
2018-04-20 22:39:30 -HTTP METHOD : GET
2018-04-20 22:39:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:39:30 -参数 : [{}]
2018-04-20 22:39:30 -耗时 : 1
2018-04-20 22:39:30 -返回值 : redirect:/login
2018-04-20 22:39:30 -请求地址 : http://localhost/login
2018-04-20 22:39:30 -HTTP METHOD : GET
2018-04-20 22:39:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:39:30 -参数 : []
2018-04-20 22:39:30 -耗时 : 0
2018-04-20 22:39:30 -返回值 : login
2018-04-20 22:39:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:39:32 -==> Parameters: admin(String)
2018-04-20 22:39:32 -<==      Total: 1
2018-04-20 22:39:32 -请求地址 : http://localhost/login
2018-04-20 22:39:32 -HTTP METHOD : POST
2018-04-20 22:39:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:39:32 -参数 : [admin, 123456]
2018-04-20 22:39:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:39:32 -==> Parameters: admin(String)
2018-04-20 22:39:32 -<==      Total: 1
2018-04-20 22:39:32 -耗时 : 4
2018-04-20 22:39:32 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:39:32 -请求地址 : http://localhost/index
2018-04-20 22:39:32 -HTTP METHOD : GET
2018-04-20 22:39:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:39:32 -参数 : [{}]
2018-04-20 22:39:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:39:32 -==> Parameters: 1(Long)
2018-04-20 22:39:32 -<==      Total: 19
2018-04-20 22:39:32 -耗时 : 6
2018-04-20 22:39:32 -返回值 : index_v1
2018-04-20 22:39:32 -请求地址 : http://localhost/main
2018-04-20 22:39:32 -HTTP METHOD : GET
2018-04-20 22:39:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:39:32 -参数 : []
2018-04-20 22:39:32 -耗时 : 1
2018-04-20 22:39:32 -返回值 : main
2018-04-20 22:39:32 -请求地址 : http://localhost/main
2018-04-20 22:39:32 -HTTP METHOD : GET
2018-04-20 22:39:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:39:32 -参数 : []
2018-04-20 22:39:32 -耗时 : 0
2018-04-20 22:39:32 -返回值 : main
2018-04-20 22:39:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:39:35 -==> Parameters: 1(Long)
2018-04-20 22:39:35 -<==      Total: 58
2018-04-20 22:39:35 -请求地址 : http://localhost/sys/menu/
2018-04-20 22:39:35 -HTTP METHOD : GET
2018-04-20 22:39:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2018-04-20 22:39:35 -参数 : [{}]
2018-04-20 22:39:35 -耗时 : 0
2018-04-20 22:39:35 -返回值 : system/menu/menu
2018-04-20 22:39:35 -请求地址 : http://localhost/sys/menu/list
2018-04-20 22:39:35 -HTTP METHOD : GET
2018-04-20 22:39:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 22:39:35 -参数 : [{sort=order_num}]
2018-04-20 22:39:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 22:39:35 -==> Parameters: 
2018-04-20 22:39:35 -<==      Total: 84
2018-04-20 22:39:35 -耗时 : 18
2018-04-20 22:39:35 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 22:40:24 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:40:24 -HTTP METHOD : GET
2018-04-20 22:40:24 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:40:24 -参数 : []
2018-04-20 22:40:24 -耗时 : 1
2018-04-20 22:40:24 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:40:24 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:40:24 -HTTP METHOD : GET
2018-04-20 22:40:24 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:40:24 -参数 : [{limit=10, offset=0}]
2018-04-20 22:40:24 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:40:24 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:40:24 -<==      Total: 1
2018-04-20 22:40:24 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:40:24 -==> Parameters: 
2018-04-20 22:40:24 -<==      Total: 1
2018-04-20 22:40:24 -耗时 : 5
2018-04-20 22:40:24 -返回值 : com.bootdo.common.utils.PageUtils@2a869cec
2018-04-20 22:40:36 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:40:36 -HTTP METHOD : GET
2018-04-20 22:40:36 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:40:36 -参数 : []
2018-04-20 22:40:36 -耗时 : 0
2018-04-20 22:40:36 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:40:36 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:40:36 -HTTP METHOD : GET
2018-04-20 22:40:36 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:40:36 -参数 : [{limit=10, offset=0}]
2018-04-20 22:40:36 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:40:36 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:40:36 -<==      Total: 1
2018-04-20 22:40:36 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:40:36 -==> Parameters: 
2018-04-20 22:40:36 -<==      Total: 1
2018-04-20 22:40:36 -耗时 : 5
2018-04-20 22:40:36 -返回值 : com.bootdo.common.utils.PageUtils@56d6b002
2018-04-20 22:43:11 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 8176 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 22:43:11 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 22:43:11 -The following profiles are active: dev
2018-04-20 22:43:11 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:43:11 CST 2018]; root of context hierarchy
2018-04-20 22:43:11 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 22:43:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 22:43:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a5b5e2b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$980f1158] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 22:43:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 22:43:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:43:14 -Tomcat initialized with port(s): 80 (http)
2018-04-20 22:43:14 -Starting service [Tomcat]
2018-04-20 22:43:14 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 22:43:14 -Initializing Spring embedded WebApplicationContext
2018-04-20 22:43:14 -Root WebApplicationContext: initialization completed in 3388 ms
2018-04-20 22:43:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 22:43:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 22:43:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 22:43:15 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 22:43:15 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 22:43:15 -Filter xssFilter was not registered (disabled)
2018-04-20 22:43:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 22:43:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 22:43:15 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 22:43:15 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 22:43:15 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:43:11 CST 2018]; root of context hierarchy
2018-04-20 22:43:15 -{dataSource-1} inited
2018-04-20 22:43:16 -Using default implementation for ThreadExecutor
2018-04-20 22:43:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 22:43:16 -Quartz Scheduler v.2.2.1 created.
2018-04-20 22:43:16 -RAMJobStore initialized.
2018-04-20 22:43:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 22:43:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 22:43:16 -Quartz scheduler version: 2.2.1
2018-04-20 22:43:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5897aae1
2018-04-20 22:43:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 22:43:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 22:43:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:43:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:43:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:43:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:43:18 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 22:43:18 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 22:43:18 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 22:43:18 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 22:43:18 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 22:43:18 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 22:43:18 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 22:43:18 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 22:43:18 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 22:43:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 22:43:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 22:43:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 22:43:18 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 22:43:18 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:43:18 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:43:18 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 22:43:18 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 22:43:18 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 22:43:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 22:43:18 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 22:43:18 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 22:43:18 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 22:43:18 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 22:43:18 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 22:43:18 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:43:18 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 22:43:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 22:43:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 22:43:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 22:43:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 22:43:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 22:43:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 22:43:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 22:43:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 22:43:18 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 22:43:18 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 22:43:18 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 22:43:18 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 22:43:18 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:43:18 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 22:43:18 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 22:43:18 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 22:43:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:43:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:43:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 22:43:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 22:43:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:43:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:43:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 22:43:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 22:43:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:43:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:43:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:43:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 22:43:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 22:43:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 22:43:19 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:43:11 CST 2018]; root of context hierarchy
2018-04-20 22:43:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:43:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:43:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:43:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 22:43:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:43:20 -

Using default security password: 34588f1b-0b9d-4b0d-a9ab-c13ca79c445f

2018-04-20 22:43:20 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 22:43:21 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@229fe7ab, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64f2b1b4, org.springframework.security.web.context.SecurityContextPersistenceFilter@10f60e36, org.springframework.security.web.header.HeaderWriterFilter@15a5cc6e, org.springframework.security.web.csrf.CsrfFilter@7ba623d1, org.springframework.security.web.authentication.logout.LogoutFilter@feab3ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b30ff23, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39a09c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11ad327f, org.springframework.security.web.session.SessionManagementFilter@7010c9e4, org.springframework.security.web.access.ExceptionTranslationFilter@3e4ead73]
2018-04-20 22:43:21 -Registering beans for JMX exposure on startup
2018-04-20 22:43:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 22:43:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 22:43:21 -Starting beans in phase 2147483647
2018-04-20 22:43:21 -Context refreshed
2018-04-20 22:43:21 -Found 1 custom documentation plugin(s)
2018-04-20 22:43:21 -Scanning for api listing references
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_1
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_1
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_2
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_2
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_2
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_3
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 22:43:22 -Generating unique operation named: viewUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_2
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_3
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_3
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_4
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_5
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 22:43:22 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 22:43:22 -Generating unique operation named: viewUsingGET_2
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_3
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_4
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_4
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_6
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_7
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 22:43:22 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_4
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_5
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_5
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_8
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_4
2018-04-20 22:43:22 -Generating unique operation named: treeUsingGET_1
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_5
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_5
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_6
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_6
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_9
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_10
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 22:43:22 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 22:43:22 -Generating unique operation named: viewUsingGET_3
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_6
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_7
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_7
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_11
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_12
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_7
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 22:43:22 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_7
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_7
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_8
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_8
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_8
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_9
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_8
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_9
2018-04-20 22:43:22 -Generating unique operation named: listUsingHEAD_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingPOST_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingPUT_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingPATCH_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingDELETE_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 22:43:22 -Generating unique operation named: listUsingTRACE_1
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_8
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_9
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_10
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_13
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_14
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_10
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_9
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 22:43:22 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 22:43:22 -Generating unique operation named: addUsingGET_9
2018-04-20 22:43:22 -Generating unique operation named: editUsingGET_10
2018-04-20 22:43:22 -Generating unique operation named: listUsingGET_11
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_15
2018-04-20 22:43:22 -Generating unique operation named: removeUsingPOST_16
2018-04-20 22:43:22 -Generating unique operation named: saveUsingPOST_11
2018-04-20 22:43:22 -Generating unique operation named: updateUsingGET_7
2018-04-20 22:43:22 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPOST_10
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPUT_7
2018-04-20 22:43:22 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 22:43:23 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 22:43:23 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 22:43:23 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 22:43:23 -Generating unique operation named: addUsingGET_10
2018-04-20 22:43:23 -Generating unique operation named: editUsingGET_11
2018-04-20 22:43:23 -Generating unique operation named: listUsingGET_12
2018-04-20 22:43:23 -Generating unique operation named: removeUsingPOST_17
2018-04-20 22:43:23 -Generating unique operation named: removeUsingPOST_18
2018-04-20 22:43:23 -Generating unique operation named: saveUsingPOST_12
2018-04-20 22:43:23 -Generating unique operation named: updateUsingGET_8
2018-04-20 22:43:23 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 22:43:23 -Generating unique operation named: updateUsingPOST_11
2018-04-20 22:43:23 -Generating unique operation named: updateUsingPUT_8
2018-04-20 22:43:23 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 22:43:23 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 22:43:23 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 22:43:23 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 22:43:23 -Generating unique operation named: addUsingGET_11
2018-04-20 22:43:23 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 22:43:23 -Generating unique operation named: editUsingGET_12
2018-04-20 22:43:23 -Generating unique operation named: exitUsingPOST_1
2018-04-20 22:43:23 -Generating unique operation named: listUsingGET_13
2018-04-20 22:43:23 -Generating unique operation named: removeUsingPOST_19
2018-04-20 22:43:23 -Generating unique operation named: saveUsingPOST_13
2018-04-20 22:43:23 -Generating unique operation named: updateUsingPOST_12
2018-04-20 22:43:23 -Generating unique operation named: userUsingGET_1
2018-04-20 22:43:23 -Starting Quartz Scheduler now
2018-04-20 22:43:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 22:43:23 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 22:43:23 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 22:43:23 -Using a shared selector for servlet write/read
2018-04-20 22:43:23 -Tomcat started on port(s): 80 (http)
2018-04-20 22:43:23 -Started BootdoApplication in 12.701 seconds (JVM running for 13.151)
2018-04-20 22:43:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 22:43:38 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 22:43:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-04-20 22:43:38 -Enabling session validation scheduler...
2018-04-20 22:43:38 -请求地址 : http://localhost/login;JSESSIONID=f622e38d-43a2-4171-9f0f-efa1542abe9c
2018-04-20 22:43:38 -HTTP METHOD : GET
2018-04-20 22:43:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:43:38 -参数 : []
2018-04-20 22:43:38 -耗时 : 2
2018-04-20 22:43:38 -返回值 : login
2018-04-20 22:43:38 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 22:43:38 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 22:43:38 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 22:43:38 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 22:43:38 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 22:43:38 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 22:43:38 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 22:43:39 -请求地址 : http://localhost/login
2018-04-20 22:43:39 -HTTP METHOD : GET
2018-04-20 22:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:43:39 -参数 : []
2018-04-20 22:43:39 -耗时 : 1
2018-04-20 22:43:39 -返回值 : login
2018-04-20 22:43:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:43:40 -==> Parameters: admin(String)
2018-04-20 22:43:40 -<==      Total: 1
2018-04-20 22:43:40 -请求地址 : http://localhost/login
2018-04-20 22:43:40 -HTTP METHOD : POST
2018-04-20 22:43:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:43:40 -参数 : [admin, 123456]
2018-04-20 22:43:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:43:40 -==> Parameters: admin(String)
2018-04-20 22:43:40 -<==      Total: 1
2018-04-20 22:43:40 -耗时 : 18
2018-04-20 22:43:40 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:43:40 -请求地址 : http://localhost/index
2018-04-20 22:43:40 -HTTP METHOD : GET
2018-04-20 22:43:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:43:40 -参数 : [{}]
2018-04-20 22:43:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:43:40 -==> Parameters: 1(Long)
2018-04-20 22:43:40 -<==      Total: 19
2018-04-20 22:43:40 -耗时 : 50
2018-04-20 22:43:40 -返回值 : index_v1
2018-04-20 22:43:40 -请求地址 : http://localhost/main
2018-04-20 22:43:40 -HTTP METHOD : GET
2018-04-20 22:43:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:43:40 -参数 : []
2018-04-20 22:43:40 -耗时 : 0
2018-04-20 22:43:40 -返回值 : main
2018-04-20 22:43:40 -请求地址 : http://localhost/main
2018-04-20 22:43:40 -HTTP METHOD : GET
2018-04-20 22:43:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:43:40 -参数 : []
2018-04-20 22:43:40 -耗时 : 1
2018-04-20 22:43:40 -返回值 : main
2018-04-20 22:43:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:43:43 -==> Parameters: 1(Long)
2018-04-20 22:43:43 -<==      Total: 58
2018-04-20 22:43:43 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:43:43 -HTTP METHOD : GET
2018-04-20 22:43:43 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:43:43 -参数 : []
2018-04-20 22:43:43 -耗时 : 0
2018-04-20 22:43:43 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:43:43 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:43:43 -HTTP METHOD : GET
2018-04-20 22:43:43 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:43:43 -参数 : [{limit=10, offset=0}]
2018-04-20 22:43:43 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:43:43 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:43:43 -<==      Total: 1
2018-04-20 22:43:43 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:43:43 -==> Parameters: 
2018-04-20 22:43:43 -<==      Total: 1
2018-04-20 22:43:43 -耗时 : 18
2018-04-20 22:43:43 -返回值 : com.bootdo.common.utils.PageUtils@7a054fe5
2018-04-20 22:43:45 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:43:45 -HTTP METHOD : GET
2018-04-20 22:43:45 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:43:45 -参数 : [1, {}]
2018-04-20 22:43:45 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:43:45 -==> Parameters: 1(Long)
2018-04-20 22:43:45 -<==      Total: 1
2018-04-20 22:43:45 -耗时 : 4
2018-04-20 22:43:45 -返回值 : system/logisticsManage/edit
2018-04-20 22:43:47 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 22:43:47 -HTTP METHOD : POST
2018-04-20 22:43:47 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 22:43:47 -参数 : [com.bootdo.system.domain.LogisticsManageDO@38abb0bb]
2018-04-20 22:43:47 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 22:43:47 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 0(Integer), 1(Long)
2018-04-20 22:43:48 -<==    Updates: 1
2018-04-20 22:43:48 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 22:43:48 -==> Parameters: 0312456(String)
2018-04-20 22:43:48 -<==      Total: 1
2018-04-20 22:43:48 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 22:43:48 -==> Parameters: 0002(String), 香蕉(String)
2018-04-20 22:43:48 -<==      Total: 1
2018-04-20 22:43:48 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 22:43:48 -==> Parameters: 1524234351597(String), 张三(String), 100.0(Double), 5(Integer), 2018-04-21 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), 2018-04-20 22:25:52.0(Timestamp), 1(Integer), (String), 0002(String), 香蕉(String), 2(Long)
2018-04-20 22:43:48 -<==    Updates: 1
2018-04-20 22:43:48 -耗时 : 159
2018-04-20 22:43:48 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:43:48 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:43:48 -HTTP METHOD : GET
2018-04-20 22:43:48 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:43:48 -参数 : [{limit=10, offset=0}]
2018-04-20 22:43:48 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:43:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:43:48 -<==      Total: 1
2018-04-20 22:43:48 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:43:48 -==> Parameters: 
2018-04-20 22:43:48 -<==      Total: 1
2018-04-20 22:43:48 -耗时 : 6
2018-04-20 22:43:48 -返回值 : com.bootdo.common.utils.PageUtils@32c021f4
2018-04-20 22:43:53 -请求地址 : http://localhost/system/order/
2018-04-20 22:43:53 -HTTP METHOD : GET
2018-04-20 22:43:53 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:43:53 -参数 : []
2018-04-20 22:43:53 -耗时 : 1
2018-04-20 22:43:53 -返回值 : system/order/order
2018-04-20 22:43:53 -请求地址 : http://localhost/system/order/list
2018-04-20 22:43:53 -HTTP METHOD : GET
2018-04-20 22:43:53 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:43:53 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:43:53 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:43:53 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:43:53 -<==      Total: 2
2018-04-20 22:43:53 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:43:53 -==> Parameters: 
2018-04-20 22:43:53 -<==      Total: 1
2018-04-20 22:43:53 -耗时 : 16
2018-04-20 22:43:53 -返回值 : com.bootdo.common.utils.PageUtils@6db6e231
2018-04-20 22:43:59 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:43:59 -HTTP METHOD : GET
2018-04-20 22:43:59 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:43:59 -参数 : [1, {}]
2018-04-20 22:43:59 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:43:59 -==> Parameters: 1(Long)
2018-04-20 22:43:59 -<==      Total: 1
2018-04-20 22:43:59 -耗时 : 4
2018-04-20 22:43:59 -返回值 : system/logisticsManage/edit
2018-04-20 22:44:01 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 22:44:01 -HTTP METHOD : POST
2018-04-20 22:44:01 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 22:44:01 -参数 : [com.bootdo.system.domain.LogisticsManageDO@890037f]
2018-04-20 22:44:01 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 22:44:01 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 1(Integer), 1(Long)
2018-04-20 22:44:01 -<==    Updates: 1
2018-04-20 22:44:01 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 22:44:01 -==> Parameters: 0312456(String)
2018-04-20 22:44:01 -<==      Total: 1
2018-04-20 22:44:01 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 22:44:01 -==> Parameters: 0002(String), 香蕉(String)
2018-04-20 22:44:01 -<==      Total: 1
2018-04-20 22:44:01 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 22:44:01 -==> Parameters: 1524234351597(String), 张三(String), 100.0(Double), 5(Integer), 2018-04-21 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), 2018-04-20 22:25:52.0(Timestamp), 2(Integer), (String), 0002(String), 香蕉(String), 2(Long)
2018-04-20 22:44:02 -<==    Updates: 1
2018-04-20 22:44:02 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc 
2018-04-20 22:44:02 -==> Parameters: 
2018-04-20 22:44:02 -<==      Total: 1
2018-04-20 22:44:02 -==>  Preparing: update t_order_settlement SET `order_sn` = ?, `total_price` = ?, `create_date` = ?, `state` = ? where id = ? 
2018-04-20 22:44:02 -==> Parameters: 1524234351597(String), 100.0(Double), 2018-04-20 22:25:52.0(Timestamp), 1(Integer), 1(Long)
2018-04-20 22:44:02 -<==    Updates: 1
2018-04-20 22:44:02 -耗时 : 170
2018-04-20 22:44:02 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:44:02 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:44:02 -HTTP METHOD : GET
2018-04-20 22:44:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:44:02 -参数 : [{limit=10, offset=0}]
2018-04-20 22:44:02 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:44:02 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:44:02 -<==      Total: 1
2018-04-20 22:44:02 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:44:02 -==> Parameters: 
2018-04-20 22:44:02 -<==      Total: 1
2018-04-20 22:44:02 -耗时 : 5
2018-04-20 22:44:02 -返回值 : com.bootdo.common.utils.PageUtils@19832a43
2018-04-20 22:44:03 -请求地址 : http://localhost/index
2018-04-20 22:44:03 -HTTP METHOD : GET
2018-04-20 22:44:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:44:03 -参数 : [{}]
2018-04-20 22:44:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:44:03 -==> Parameters: 1(Long)
2018-04-20 22:44:03 -<==      Total: 19
2018-04-20 22:44:03 -耗时 : 7
2018-04-20 22:44:03 -返回值 : index_v1
2018-04-20 22:44:03 -请求地址 : http://localhost/main
2018-04-20 22:44:03 -HTTP METHOD : GET
2018-04-20 22:44:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:44:03 -参数 : []
2018-04-20 22:44:03 -耗时 : 0
2018-04-20 22:44:03 -返回值 : main
2018-04-20 22:44:03 -请求地址 : http://localhost/main
2018-04-20 22:44:03 -HTTP METHOD : GET
2018-04-20 22:44:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:44:03 -参数 : []
2018-04-20 22:44:03 -耗时 : 1
2018-04-20 22:44:03 -返回值 : main
2018-04-20 22:44:07 -请求地址 : http://localhost/system/order/
2018-04-20 22:44:07 -HTTP METHOD : GET
2018-04-20 22:44:07 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:44:07 -参数 : []
2018-04-20 22:44:07 -耗时 : 1
2018-04-20 22:44:07 -返回值 : system/order/order
2018-04-20 22:44:07 -请求地址 : http://localhost/system/order/list
2018-04-20 22:44:07 -HTTP METHOD : GET
2018-04-20 22:44:07 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:44:07 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:44:07 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:44:07 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:44:07 -<==      Total: 2
2018-04-20 22:44:07 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:44:07 -==> Parameters: 
2018-04-20 22:44:07 -<==      Total: 1
2018-04-20 22:44:07 -耗时 : 6
2018-04-20 22:44:07 -返回值 : com.bootdo.common.utils.PageUtils@62992267
2018-04-20 22:44:11 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 22:44:11 -HTTP METHOD : GET
2018-04-20 22:44:11 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 22:44:11 -参数 : []
2018-04-20 22:44:11 -耗时 : 0
2018-04-20 22:44:11 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 22:44:11 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 22:44:11 -HTTP METHOD : GET
2018-04-20 22:44:11 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 22:44:11 -参数 : [{limit=10, offset=0}]
2018-04-20 22:44:11 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 22:44:11 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:44:11 -<==      Total: 1
2018-04-20 22:44:11 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 22:44:11 -==> Parameters: 
2018-04-20 22:44:11 -<==      Total: 1
2018-04-20 22:44:11 -耗时 : 12
2018-04-20 22:44:11 -返回值 : com.bootdo.common.utils.PageUtils@39bda272
2018-04-20 22:46:15 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 22:46:15 -HTTP METHOD : GET
2018-04-20 22:46:15 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 22:46:15 -参数 : []
2018-04-20 22:46:15 -耗时 : 1
2018-04-20 22:46:15 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 22:46:15 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 22:46:15 -HTTP METHOD : GET
2018-04-20 22:46:15 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 22:46:15 -参数 : [{limit=10, offset=0}]
2018-04-20 22:46:15 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 22:46:15 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:46:15 -<==      Total: 1
2018-04-20 22:46:15 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 22:46:15 -==> Parameters: 
2018-04-20 22:46:15 -<==      Total: 1
2018-04-20 22:46:15 -耗时 : 4
2018-04-20 22:46:15 -返回值 : com.bootdo.common.utils.PageUtils@93c167c
2018-04-20 22:48:15 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 6532 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 22:48:15 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 22:48:15 -The following profiles are active: dev
2018-04-20 22:48:15 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:48:15 CST 2018]; root of context hierarchy
2018-04-20 22:48:15 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 22:48:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 22:48:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$15d0fdc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$82a2c70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 22:48:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 22:48:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 22:48:18 -Tomcat initialized with port(s): 80 (http)
2018-04-20 22:48:18 -Starting service [Tomcat]
2018-04-20 22:48:18 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 22:48:18 -Initializing Spring embedded WebApplicationContext
2018-04-20 22:48:18 -Root WebApplicationContext: initialization completed in 3374 ms
2018-04-20 22:48:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 22:48:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 22:48:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 22:48:19 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 22:48:19 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 22:48:19 -Filter xssFilter was not registered (disabled)
2018-04-20 22:48:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 22:48:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 22:48:19 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 22:48:19 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 22:48:19 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:48:15 CST 2018]; root of context hierarchy
2018-04-20 22:48:19 -{dataSource-1} inited
2018-04-20 22:48:20 -Using default implementation for ThreadExecutor
2018-04-20 22:48:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 22:48:20 -Quartz Scheduler v.2.2.1 created.
2018-04-20 22:48:20 -RAMJobStore initialized.
2018-04-20 22:48:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 22:48:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 22:48:20 -Quartz scheduler version: 2.2.1
2018-04-20 22:48:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@61be6051
2018-04-20 22:48:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 22:48:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:48:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 22:48:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 22:48:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:48:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 22:48:22 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 22:48:22 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 22:48:22 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 22:48:22 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 22:48:22 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 22:48:22 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 22:48:22 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 22:48:22 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 22:48:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 22:48:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 22:48:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 22:48:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 22:48:22 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 22:48:22 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:48:22 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 22:48:22 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 22:48:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 22:48:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 22:48:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 22:48:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 22:48:22 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 22:48:22 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 22:48:22 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 22:48:22 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 22:48:22 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:48:22 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 22:48:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 22:48:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 22:48:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 22:48:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 22:48:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 22:48:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 22:48:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 22:48:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 22:48:22 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 22:48:22 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 22:48:22 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 22:48:22 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 22:48:22 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 22:48:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 22:48:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 22:48:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 22:48:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 22:48:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 22:48:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 22:48:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:48:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 22:48:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 22:48:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 22:48:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:48:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 22:48:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 22:48:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 22:48:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 22:48:23 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 22:48:15 CST 2018]; root of context hierarchy
2018-04-20 22:48:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:48:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:48:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:48:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 22:48:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 22:48:24 -

Using default security password: 6fa06784-a015-4943-9039-66a6a2a7c132

2018-04-20 22:48:25 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 22:48:25 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@a319a2e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2daf0cc9, org.springframework.security.web.context.SecurityContextPersistenceFilter@64acf8d2, org.springframework.security.web.header.HeaderWriterFilter@4806fbf7, org.springframework.security.web.csrf.CsrfFilter@5a95aaae, org.springframework.security.web.authentication.logout.LogoutFilter@729c98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d071e4b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13087c75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54fffa5a, org.springframework.security.web.session.SessionManagementFilter@4516c2ef, org.springframework.security.web.access.ExceptionTranslationFilter@22561412]
2018-04-20 22:48:25 -Registering beans for JMX exposure on startup
2018-04-20 22:48:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 22:48:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 22:48:25 -Starting beans in phase 2147483647
2018-04-20 22:48:25 -Context refreshed
2018-04-20 22:48:25 -Found 1 custom documentation plugin(s)
2018-04-20 22:48:25 -Scanning for api listing references
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_1
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_1
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_2
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_2
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_2
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_3
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPUT_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 22:48:26 -Generating unique operation named: viewUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_2
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_3
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_3
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_4
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_5
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingGET_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPUT_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 22:48:26 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 22:48:26 -Generating unique operation named: viewUsingGET_2
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_3
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_4
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_4
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_6
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_7
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingGET_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPUT_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 22:48:26 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_4
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_5
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_5
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_8
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_4
2018-04-20 22:48:26 -Generating unique operation named: treeUsingGET_1
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_5
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_5
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_6
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_6
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_9
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_10
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingGET_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPUT_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 22:48:26 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 22:48:26 -Generating unique operation named: viewUsingGET_3
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_6
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_7
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_7
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_11
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_12
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingGET_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_7
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPUT_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 22:48:26 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_7
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_7
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_8
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_8
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_8
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_9
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_8
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_9
2018-04-20 22:48:26 -Generating unique operation named: listUsingHEAD_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingPOST_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingPUT_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingPATCH_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingDELETE_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 22:48:26 -Generating unique operation named: listUsingTRACE_1
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_8
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_9
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_10
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_13
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_14
2018-04-20 22:48:26 -Generating unique operation named: saveUsingPOST_10
2018-04-20 22:48:26 -Generating unique operation named: updateUsingGET_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPOST_9
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPUT_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 22:48:26 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 22:48:26 -Generating unique operation named: addUsingGET_9
2018-04-20 22:48:26 -Generating unique operation named: editUsingGET_10
2018-04-20 22:48:26 -Generating unique operation named: listUsingGET_11
2018-04-20 22:48:26 -Generating unique operation named: removeUsingPOST_15
2018-04-20 22:48:27 -Generating unique operation named: removeUsingPOST_16
2018-04-20 22:48:27 -Generating unique operation named: saveUsingPOST_11
2018-04-20 22:48:27 -Generating unique operation named: updateUsingGET_7
2018-04-20 22:48:27 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPOST_10
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPUT_7
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 22:48:27 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 22:48:27 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 22:48:27 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 22:48:27 -Generating unique operation named: addUsingGET_10
2018-04-20 22:48:27 -Generating unique operation named: editUsingGET_11
2018-04-20 22:48:27 -Generating unique operation named: listUsingGET_12
2018-04-20 22:48:27 -Generating unique operation named: removeUsingPOST_17
2018-04-20 22:48:27 -Generating unique operation named: removeUsingPOST_18
2018-04-20 22:48:27 -Generating unique operation named: saveUsingPOST_12
2018-04-20 22:48:27 -Generating unique operation named: updateUsingGET_8
2018-04-20 22:48:27 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPOST_11
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPUT_8
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 22:48:27 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 22:48:27 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 22:48:27 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 22:48:27 -Generating unique operation named: addUsingGET_11
2018-04-20 22:48:27 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 22:48:27 -Generating unique operation named: editUsingGET_12
2018-04-20 22:48:27 -Generating unique operation named: exitUsingPOST_1
2018-04-20 22:48:27 -Generating unique operation named: listUsingGET_13
2018-04-20 22:48:27 -Generating unique operation named: removeUsingPOST_19
2018-04-20 22:48:27 -Generating unique operation named: saveUsingPOST_13
2018-04-20 22:48:27 -Generating unique operation named: updateUsingPOST_12
2018-04-20 22:48:27 -Generating unique operation named: userUsingGET_1
2018-04-20 22:48:27 -Starting Quartz Scheduler now
2018-04-20 22:48:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 22:48:27 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 22:48:27 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 22:48:27 -Using a shared selector for servlet write/read
2018-04-20 22:48:27 -Tomcat started on port(s): 80 (http)
2018-04-20 22:48:27 -Started BootdoApplication in 12.704 seconds (JVM running for 13.155)
2018-04-20 22:48:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 22:48:37 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 22:48:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-04-20 22:48:37 -Enabling session validation scheduler...
2018-04-20 22:48:37 -请求地址 : http://localhost/login;JSESSIONID=08e327f5-12da-476c-84fa-d8953409cd8e
2018-04-20 22:48:37 -HTTP METHOD : GET
2018-04-20 22:48:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:48:37 -参数 : []
2018-04-20 22:48:37 -耗时 : 2
2018-04-20 22:48:37 -返回值 : login
2018-04-20 22:48:37 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 22:48:37 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 22:48:37 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 22:48:37 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 22:48:37 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 22:48:37 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 22:48:37 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 22:48:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:48:40 -==> Parameters: admin(String)
2018-04-20 22:48:40 -<==      Total: 1
2018-04-20 22:48:40 -请求地址 : http://localhost/login
2018-04-20 22:48:40 -HTTP METHOD : POST
2018-04-20 22:48:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:48:40 -参数 : [admin, 123456]
2018-04-20 22:48:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:48:40 -==> Parameters: admin(String)
2018-04-20 22:48:40 -<==      Total: 1
2018-04-20 22:48:40 -耗时 : 9
2018-04-20 22:48:40 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:48:40 -请求地址 : http://localhost/index
2018-04-20 22:48:40 -HTTP METHOD : GET
2018-04-20 22:48:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:48:40 -参数 : [{}]
2018-04-20 22:48:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:48:40 -==> Parameters: 1(Long)
2018-04-20 22:48:40 -<==      Total: 19
2018-04-20 22:48:40 -耗时 : 48
2018-04-20 22:48:40 -返回值 : index_v1
2018-04-20 22:48:40 -请求地址 : http://localhost/main
2018-04-20 22:48:40 -HTTP METHOD : GET
2018-04-20 22:48:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:48:40 -参数 : []
2018-04-20 22:48:40 -耗时 : 0
2018-04-20 22:48:40 -返回值 : main
2018-04-20 22:48:40 -请求地址 : http://localhost/main
2018-04-20 22:48:40 -HTTP METHOD : GET
2018-04-20 22:48:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:48:40 -参数 : []
2018-04-20 22:48:40 -耗时 : 0
2018-04-20 22:48:40 -返回值 : main
2018-04-20 22:49:15 -请求地址 : http://localhost/index
2018-04-20 22:49:15 -HTTP METHOD : GET
2018-04-20 22:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:49:15 -参数 : [{}]
2018-04-20 22:49:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:49:15 -==> Parameters: 1(Long)
2018-04-20 22:49:15 -<==      Total: 19
2018-04-20 22:49:15 -耗时 : 6
2018-04-20 22:49:15 -返回值 : index_v1
2018-04-20 22:49:15 -请求地址 : http://localhost/main
2018-04-20 22:49:15 -HTTP METHOD : GET
2018-04-20 22:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:49:15 -参数 : []
2018-04-20 22:49:15 -耗时 : 0
2018-04-20 22:49:15 -返回值 : main
2018-04-20 22:49:15 -请求地址 : http://localhost/main
2018-04-20 22:49:15 -HTTP METHOD : GET
2018-04-20 22:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:49:15 -参数 : []
2018-04-20 22:49:15 -耗时 : 1
2018-04-20 22:49:15 -返回值 : main
2018-04-20 22:49:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:49:17 -==> Parameters: 1(Long)
2018-04-20 22:49:17 -<==      Total: 58
2018-04-20 22:49:17 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:49:17 -HTTP METHOD : GET
2018-04-20 22:49:17 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:49:17 -参数 : []
2018-04-20 22:49:17 -耗时 : 1
2018-04-20 22:49:17 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:49:18 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:49:18 -HTTP METHOD : GET
2018-04-20 22:49:18 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:49:18 -参数 : [{limit=10, offset=0}]
2018-04-20 22:49:18 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:49:18 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:49:18 -<==      Total: 1
2018-04-20 22:49:18 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:49:18 -==> Parameters: 
2018-04-20 22:49:18 -<==      Total: 1
2018-04-20 22:49:18 -耗时 : 22
2018-04-20 22:49:18 -返回值 : com.bootdo.common.utils.PageUtils@5c33edeb
2018-04-20 22:49:20 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:49:20 -HTTP METHOD : GET
2018-04-20 22:49:20 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:49:20 -参数 : [1, {}]
2018-04-20 22:49:20 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:49:20 -==> Parameters: 1(Long)
2018-04-20 22:49:20 -<==      Total: 1
2018-04-20 22:49:20 -耗时 : 3
2018-04-20 22:49:20 -返回值 : system/logisticsManage/edit
2018-04-20 22:49:22 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 22:49:22 -HTTP METHOD : POST
2018-04-20 22:49:22 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 22:49:22 -参数 : [com.bootdo.system.domain.LogisticsManageDO@74fc464f]
2018-04-20 22:49:22 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 22:49:22 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 0(Integer), 1(Long)
2018-04-20 22:49:22 -<==    Updates: 1
2018-04-20 22:49:22 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 22:49:22 -==> Parameters: 0312456(String)
2018-04-20 22:49:22 -<==      Total: 1
2018-04-20 22:49:22 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 22:49:22 -==> Parameters: 0002(String), 香蕉(String)
2018-04-20 22:49:22 -<==      Total: 1
2018-04-20 22:49:22 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 22:49:22 -==> Parameters: 1524234351597(String), 张三(String), 100.0(Double), 5(Integer), 2018-04-21 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), 2018-04-20 22:25:52.0(Timestamp), 1(Integer), (String), 0002(String), 香蕉(String), 2(Long)
2018-04-20 22:49:23 -<==    Updates: 1
2018-04-20 22:49:23 -耗时 : 382
2018-04-20 22:49:23 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:49:23 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:49:23 -HTTP METHOD : GET
2018-04-20 22:49:23 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:49:23 -参数 : [{limit=10, offset=0}]
2018-04-20 22:49:23 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:49:23 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:49:23 -<==      Total: 1
2018-04-20 22:49:23 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:49:23 -==> Parameters: 
2018-04-20 22:49:23 -<==      Total: 1
2018-04-20 22:49:23 -耗时 : 5
2018-04-20 22:49:23 -返回值 : com.bootdo.common.utils.PageUtils@6e290ced
2018-04-20 22:49:25 -请求地址 : http://localhost/system/order/
2018-04-20 22:49:25 -HTTP METHOD : GET
2018-04-20 22:49:25 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:49:25 -参数 : []
2018-04-20 22:49:25 -耗时 : 1
2018-04-20 22:49:25 -返回值 : system/order/order
2018-04-20 22:49:25 -请求地址 : http://localhost/system/order/list
2018-04-20 22:49:25 -HTTP METHOD : GET
2018-04-20 22:49:25 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:49:25 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:49:25 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:49:25 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:49:25 -<==      Total: 2
2018-04-20 22:49:25 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:49:25 -==> Parameters: 
2018-04-20 22:49:25 -<==      Total: 1
2018-04-20 22:49:25 -耗时 : 21
2018-04-20 22:49:25 -返回值 : com.bootdo.common.utils.PageUtils@3d2ad830
2018-04-20 22:49:37 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 22:49:37 -HTTP METHOD : GET
2018-04-20 22:49:37 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 22:49:37 -参数 : []
2018-04-20 22:49:37 -耗时 : 0
2018-04-20 22:49:37 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 22:49:37 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 22:49:37 -HTTP METHOD : GET
2018-04-20 22:49:37 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 22:49:37 -参数 : [{limit=10, offset=0}]
2018-04-20 22:49:37 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 22:49:37 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:49:37 -<==      Total: 1
2018-04-20 22:49:37 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 22:49:37 -==> Parameters: 
2018-04-20 22:49:37 -<==      Total: 1
2018-04-20 22:49:37 -耗时 : 14
2018-04-20 22:49:37 -返回值 : com.bootdo.common.utils.PageUtils@649df1f4
2018-04-20 22:50:57 -请求地址 : http://localhost/system/logisticsManage/edit/1
2018-04-20 22:50:57 -HTTP METHOD : GET
2018-04-20 22:50:57 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 22:50:57 -参数 : [1, {}]
2018-04-20 22:50:57 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 22:50:57 -==> Parameters: 1(Long)
2018-04-20 22:50:57 -<==      Total: 1
2018-04-20 22:50:57 -耗时 : 4
2018-04-20 22:50:57 -返回值 : system/logisticsManage/edit
2018-04-20 22:50:59 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 22:50:59 -HTTP METHOD : POST
2018-04-20 22:50:59 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 22:50:59 -参数 : [com.bootdo.system.domain.LogisticsManageDO@2d1389ca]
2018-04-20 22:50:59 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 22:50:59 -==> Parameters: 0312456(String), 张三(String), 川A4F567K(String), 1(Integer), 1(Long)
2018-04-20 22:50:59 -<==    Updates: 1
2018-04-20 22:50:59 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 22:50:59 -==> Parameters: 0312456(String)
2018-04-20 22:50:59 -<==      Total: 1
2018-04-20 22:50:59 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 22:50:59 -==> Parameters: 0002(String), 香蕉(String)
2018-04-20 22:50:59 -<==      Total: 1
2018-04-20 22:50:59 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 22:50:59 -==> Parameters: 1524234351597(String), 张三(String), 100.0(Double), 5(Integer), 2018-04-21 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), 2018-04-20 22:25:52.0(Timestamp), 2(Integer), (String), 0002(String), 香蕉(String), 2(Long)
2018-04-20 22:50:59 -<==    Updates: 1
2018-04-20 22:50:59 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc 
2018-04-20 22:50:59 -==> Parameters: 
2018-04-20 22:50:59 -<==      Total: 1
2018-04-20 22:50:59 -==>  Preparing: update t_order_settlement SET `order_sn` = ?, `total_price` = ?, `create_date` = ?, `state` = ? where id = ? 
2018-04-20 22:50:59 -==> Parameters: 1524234351597(String), 100.0(Double), 2018-04-20 22:50:59.49(Timestamp), 1(Integer), 1(Long)
2018-04-20 22:50:59 -<==    Updates: 1
2018-04-20 22:50:59 -耗时 : 235
2018-04-20 22:50:59 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:50:59 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:50:59 -HTTP METHOD : GET
2018-04-20 22:50:59 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:50:59 -参数 : [{limit=10, offset=0}]
2018-04-20 22:50:59 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:50:59 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:50:59 -<==      Total: 1
2018-04-20 22:50:59 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:50:59 -==> Parameters: 
2018-04-20 22:50:59 -<==      Total: 1
2018-04-20 22:50:59 -耗时 : 4
2018-04-20 22:50:59 -返回值 : com.bootdo.common.utils.PageUtils@3a5d1a37
2018-04-20 22:51:36 -请求地址 : http://localhost/index
2018-04-20 22:51:36 -HTTP METHOD : GET
2018-04-20 22:51:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:51:36 -参数 : [{}]
2018-04-20 22:51:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:51:36 -==> Parameters: 1(Long)
2018-04-20 22:51:36 -<==      Total: 19
2018-04-20 22:51:36 -耗时 : 7
2018-04-20 22:51:36 -返回值 : index_v1
2018-04-20 22:51:36 -请求地址 : http://localhost/main
2018-04-20 22:51:36 -HTTP METHOD : GET
2018-04-20 22:51:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:51:36 -参数 : []
2018-04-20 22:51:36 -耗时 : 0
2018-04-20 22:51:36 -返回值 : main
2018-04-20 22:51:36 -请求地址 : http://localhost/main
2018-04-20 22:51:36 -HTTP METHOD : GET
2018-04-20 22:51:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:51:36 -参数 : []
2018-04-20 22:51:36 -耗时 : 0
2018-04-20 22:51:36 -返回值 : main
2018-04-20 22:51:38 -请求地址 : http://localhost/system/order/
2018-04-20 22:51:38 -HTTP METHOD : GET
2018-04-20 22:51:38 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:51:38 -参数 : []
2018-04-20 22:51:38 -耗时 : 1
2018-04-20 22:51:38 -返回值 : system/order/order
2018-04-20 22:51:38 -请求地址 : http://localhost/system/order/list
2018-04-20 22:51:38 -HTTP METHOD : GET
2018-04-20 22:51:38 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:51:38 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:51:38 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:51:38 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:51:38 -<==      Total: 2
2018-04-20 22:51:38 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:51:38 -==> Parameters: 
2018-04-20 22:51:38 -<==      Total: 1
2018-04-20 22:51:38 -耗时 : 7
2018-04-20 22:51:38 -返回值 : com.bootdo.common.utils.PageUtils@73cf7e86
2018-04-20 22:51:47 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 22:51:47 -HTTP METHOD : GET
2018-04-20 22:51:47 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 22:51:47 -参数 : []
2018-04-20 22:51:47 -耗时 : 0
2018-04-20 22:51:47 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 22:51:47 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 22:51:47 -HTTP METHOD : GET
2018-04-20 22:51:47 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 22:51:47 -参数 : [{limit=10, offset=0}]
2018-04-20 22:51:47 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 22:51:47 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:51:47 -<==      Total: 1
2018-04-20 22:51:47 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 22:51:47 -==> Parameters: 
2018-04-20 22:51:47 -<==      Total: 1
2018-04-20 22:51:47 -耗时 : 4
2018-04-20 22:51:47 -返回值 : com.bootdo.common.utils.PageUtils@4f750b44
2018-04-20 22:52:04 -请求地址 : http://localhost/system/order/
2018-04-20 22:52:04 -HTTP METHOD : GET
2018-04-20 22:52:04 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:52:04 -参数 : []
2018-04-20 22:52:04 -耗时 : 1
2018-04-20 22:52:04 -返回值 : system/order/order
2018-04-20 22:52:04 -请求地址 : http://localhost/system/order/list
2018-04-20 22:52:04 -HTTP METHOD : GET
2018-04-20 22:52:04 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:52:04 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:52:04 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:52:04 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:52:04 -<==      Total: 2
2018-04-20 22:52:04 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:52:04 -==> Parameters: 
2018-04-20 22:52:04 -<==      Total: 1
2018-04-20 22:52:04 -耗时 : 4
2018-04-20 22:52:04 -返回值 : com.bootdo.common.utils.PageUtils@1093947
2018-04-20 22:52:06 -请求地址 : http://localhost/sys/menu/
2018-04-20 22:52:06 -HTTP METHOD : GET
2018-04-20 22:52:06 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2018-04-20 22:52:06 -参数 : [{}]
2018-04-20 22:52:06 -耗时 : 0
2018-04-20 22:52:06 -返回值 : system/menu/menu
2018-04-20 22:52:06 -请求地址 : http://localhost/sys/menu/list
2018-04-20 22:52:06 -HTTP METHOD : GET
2018-04-20 22:52:06 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2018-04-20 22:52:06 -参数 : [{sort=order_num}]
2018-04-20 22:52:06 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-04-20 22:52:06 -==> Parameters: 
2018-04-20 22:52:06 -<==      Total: 84
2018-04-20 22:52:06 -耗时 : 19
2018-04-20 22:52:06 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=107, name='订单信息管理', url='/system/order/', perms='system:order:order', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=108, name='批量删除', url='', perms='system:order:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=108, name='新增', url='', perms='system:order:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=108, name='编辑', url='', perms='system:order:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=108, name='删除', url='', perms='system:order:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=105, name='车辆信息管理', url='/system/car', perms='system:car:car', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=114, name='批量删除', url='', perms='system:good:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=114, name='新增', url='', perms='system:good:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=114, name='编辑', url='', perms='system:good:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=114, name='删除', url='', perms='system:good:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=115, name='批量删除', url='', perms='system:car:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=115, name='新增', url='', perms='system:car:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=115, name='编辑', url='', perms='system:car:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=115, name='删除', url='', perms='system:car:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=116, name='批量删除', url='', perms='system:logistics:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=116, name='新增', url='', perms='system:logistics:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=116, name='编辑', url='', perms='system:logistics:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=116, name='删除', url='', perms='system:logistics:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=116, name='查看', url='', perms='system:logistics:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=108, name='查看', url='', perms='system:order:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=114, name='查看', url='', perms='system:good:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=115, name='查看', url='', perms='system:car:view', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=134, name='新增', url='', perms='system:storageInput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=134, name='编辑', url='', perms='system:storageInput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=134, name='删除', url='', perms='system:storageInput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=135, name='新增', url='', perms='system:storageOutput:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=135, name='编辑', url='', perms='system:storageOutput:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=135, name='删除', url='', perms='system:storageOutput:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=146, name='新增', url='', perms='system:logisticsManage:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=146, name='编辑', url='', perms='system:logisticsManage:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=146, name='删除', url='', perms='system:logisticsManage:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='客户信息管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=103, name='物流信息管理', url='/system/logistics', perms='system:logistics:logistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=106, name='订单统计', url='/system/order/statistics', perms='system:order:statistics', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=102, name='入库登记', url='/system/storageInput', perms='system:storageInput:storageInput', type=1, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=102, name='出库登记', url='/system/storageOutput', perms='system:storageOutput:storageOutput', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=103, name='配送管理', url='/system/logisticsManage', perms='system:logisticsManage:logisticsManage', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=106, name='财务结算', url='/system/orderSettlement', perms='system:orderSettlement:orderSettlement', type=1, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='common/generator', perms='common:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=0, name='订单管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=102, name='库存管理', url='/system/storage', perms='system:storage:storage', type=1, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=0, name='货物管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=102, name='货物信息管理', url='/system/good', perms='system:good:good', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='车辆管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='物流管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='财务管理', url='', perms='', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}]
2018-04-20 22:52:38 -请求地址 : http://localhost/
2018-04-20 22:52:38 -HTTP METHOD : GET
2018-04-20 22:52:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:52:38 -参数 : [{}]
2018-04-20 22:52:38 -耗时 : 1
2018-04-20 22:52:38 -返回值 : redirect:/login
2018-04-20 22:52:38 -请求地址 : http://localhost/login
2018-04-20 22:52:38 -HTTP METHOD : GET
2018-04-20 22:52:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:52:38 -参数 : []
2018-04-20 22:52:38 -耗时 : 0
2018-04-20 22:52:38 -返回值 : login
2018-04-20 22:55:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:55:19 -==> Parameters: admin(String)
2018-04-20 22:55:19 -<==      Total: 1
2018-04-20 22:55:19 -请求地址 : http://localhost/login
2018-04-20 22:55:19 -HTTP METHOD : POST
2018-04-20 22:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:55:19 -参数 : [admin, 123456]
2018-04-20 22:55:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:55:19 -==> Parameters: admin(String)
2018-04-20 22:55:19 -<==      Total: 1
2018-04-20 22:55:19 -耗时 : 3
2018-04-20 22:55:19 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:55:19 -请求地址 : http://localhost/index
2018-04-20 22:55:19 -HTTP METHOD : GET
2018-04-20 22:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:55:19 -参数 : [{}]
2018-04-20 22:55:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:55:19 -==> Parameters: 1(Long)
2018-04-20 22:55:19 -<==      Total: 19
2018-04-20 22:55:19 -耗时 : 6
2018-04-20 22:55:19 -返回值 : index_v1
2018-04-20 22:55:20 -请求地址 : http://localhost/main
2018-04-20 22:55:20 -HTTP METHOD : GET
2018-04-20 22:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:55:20 -参数 : []
2018-04-20 22:55:20 -耗时 : 0
2018-04-20 22:55:20 -返回值 : main
2018-04-20 22:55:20 -请求地址 : http://localhost/main
2018-04-20 22:55:20 -HTTP METHOD : GET
2018-04-20 22:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:55:20 -参数 : []
2018-04-20 22:55:20 -耗时 : 1
2018-04-20 22:55:20 -返回值 : main
2018-04-20 22:55:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:55:36 -==> Parameters: 1(Long)
2018-04-20 22:55:36 -<==      Total: 58
2018-04-20 22:55:36 -请求地址 : http://localhost/sys/role
2018-04-20 22:55:36 -HTTP METHOD : GET
2018-04-20 22:55:36 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 22:55:36 -参数 : []
2018-04-20 22:55:36 -耗时 : 1
2018-04-20 22:55:36 -返回值 : system/role/role
2018-04-20 22:55:37 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:55:37 -HTTP METHOD : GET
2018-04-20 22:55:37 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:55:37 -参数 : []
2018-04-20 22:55:37 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:55:37 -==> Parameters: 
2018-04-20 22:55:37 -<==      Total: 2
2018-04-20 22:55:37 -耗时 : 7
2018-04-20 22:55:37 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:55:38 -请求地址 : http://localhost/sys/role/edit/1
2018-04-20 22:55:38 -HTTP METHOD : GET
2018-04-20 22:55:38 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:55:38 -参数 : [1, {}]
2018-04-20 22:55:38 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:55:38 -==> Parameters: 1(Long)
2018-04-20 22:55:38 -<==      Total: 1
2018-04-20 22:55:38 -耗时 : 3
2018-04-20 22:55:38 -返回值 : system/role/edit
2018-04-20 22:55:38 -请求地址 : http://localhost/sys/menu/tree/1
2018-04-20 22:55:38 -HTTP METHOD : GET
2018-04-20 22:55:38 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:55:38 -参数 : [1]
2018-04-20 22:55:38 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:55:38 -==> Parameters: 
2018-04-20 22:55:38 -<==      Total: 84
2018-04-20 22:55:38 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:55:38 -==> Parameters: 1(Long)
2018-04-20 22:55:38 -<==      Total: 63
2018-04-20 22:55:38 -耗时 : 12
2018-04-20 22:55:38 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":true},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":true},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":true},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:55:43 -请求地址 : http://localhost/sys/role/update
2018-04-20 22:55:43 -HTTP METHOD : POST
2018-04-20 22:55:43 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2018-04-20 22:55:43 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[131, 113, 112, 111, 110, 150, 129, 133, 124, 123, 122, 121, 149, 148, 147, 130, 128, 127, 126, 125, 136, 142, 141, 140, 139, 138, 137, 132, 120, 119, 118, 117, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 108, 107, 106, 115, 105, 146, 116, 103, 135, 134, 114, 102, 7, 6, -1, 3]}]
2018-04-20 22:55:43 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2018-04-20 22:55:43 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2018-04-20 22:55:44 -<==    Updates: 1
2018-04-20 22:55:44 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2018-04-20 22:55:44 -==> Parameters: 1(Long)
2018-04-20 22:55:44 -<==    Updates: 63
2018-04-20 22:55:44 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) 
2018-04-20 22:55:44 -==> Parameters: 1(Long), 131(Long), 1(Long), 113(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 150(Long), 1(Long), 129(Long), 1(Long), 133(Long), 1(Long), 124(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 121(Long), 1(Long), 149(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 130(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 136(Long), 1(Long), 142(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 137(Long), 1(Long), 132(Long), 1(Long), 120(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 117(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 108(Long), 1(Long), 107(Long), 1(Long), 106(Long), 1(Long), 115(Long), 1(Long), 105(Long), 1(Long), 146(Long), 1(Long), 116(Long), 1(Long), 103(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 114(Long), 1(Long), 102(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), -1(Long), 1(Long), 3(Long)
2018-04-20 22:55:44 -<==    Updates: 58
2018-04-20 22:55:44 -耗时 : 490
2018-04-20 22:55:44 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:55:44 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:55:44 -HTTP METHOD : GET
2018-04-20 22:55:44 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:55:44 -参数 : []
2018-04-20 22:55:44 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:55:44 -==> Parameters: 
2018-04-20 22:55:44 -<==      Total: 2
2018-04-20 22:55:44 -耗时 : 3
2018-04-20 22:55:44 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:55:46 -请求地址 : http://localhost/
2018-04-20 22:55:46 -HTTP METHOD : GET
2018-04-20 22:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:55:46 -参数 : [{}]
2018-04-20 22:55:46 -耗时 : 0
2018-04-20 22:55:46 -返回值 : redirect:/login
2018-04-20 22:55:46 -请求地址 : http://localhost/login
2018-04-20 22:55:46 -HTTP METHOD : GET
2018-04-20 22:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:55:46 -参数 : []
2018-04-20 22:55:46 -耗时 : 0
2018-04-20 22:55:46 -返回值 : login
2018-04-20 22:55:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:55:47 -==> Parameters: admin(String)
2018-04-20 22:55:47 -<==      Total: 1
2018-04-20 22:55:47 -请求地址 : http://localhost/login
2018-04-20 22:55:47 -HTTP METHOD : POST
2018-04-20 22:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:55:47 -参数 : [admin, 123456]
2018-04-20 22:55:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:55:47 -==> Parameters: admin(String)
2018-04-20 22:55:47 -<==      Total: 1
2018-04-20 22:55:47 -耗时 : 3
2018-04-20 22:55:47 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:55:47 -请求地址 : http://localhost/index
2018-04-20 22:55:47 -HTTP METHOD : GET
2018-04-20 22:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:55:47 -参数 : [{}]
2018-04-20 22:55:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:55:47 -==> Parameters: 1(Long)
2018-04-20 22:55:47 -<==      Total: 18
2018-04-20 22:55:47 -耗时 : 5
2018-04-20 22:55:47 -返回值 : index_v1
2018-04-20 22:55:47 -请求地址 : http://localhost/main
2018-04-20 22:55:47 -HTTP METHOD : GET
2018-04-20 22:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:55:47 -参数 : []
2018-04-20 22:55:47 -耗时 : 0
2018-04-20 22:55:47 -返回值 : main
2018-04-20 22:55:47 -请求地址 : http://localhost/main
2018-04-20 22:55:47 -HTTP METHOD : GET
2018-04-20 22:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:55:47 -参数 : []
2018-04-20 22:55:47 -耗时 : 0
2018-04-20 22:55:47 -返回值 : main
2018-04-20 22:55:50 -请求地址 : http://localhost/
2018-04-20 22:55:50 -HTTP METHOD : GET
2018-04-20 22:55:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 22:55:50 -参数 : [{}]
2018-04-20 22:55:50 -耗时 : 0
2018-04-20 22:55:50 -返回值 : redirect:/login
2018-04-20 22:55:50 -请求地址 : http://localhost/login
2018-04-20 22:55:50 -HTTP METHOD : GET
2018-04-20 22:55:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 22:55:50 -参数 : []
2018-04-20 22:55:50 -耗时 : 0
2018-04-20 22:55:50 -返回值 : login
2018-04-20 22:55:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:55:57 -==> Parameters: admin(String)
2018-04-20 22:55:57 -<==      Total: 1
2018-04-20 22:55:57 -请求地址 : http://localhost/login
2018-04-20 22:55:57 -HTTP METHOD : POST
2018-04-20 22:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 22:55:57 -参数 : [admin, 123456]
2018-04-20 22:55:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 22:55:57 -==> Parameters: admin(String)
2018-04-20 22:55:57 -<==      Total: 1
2018-04-20 22:55:57 -耗时 : 4
2018-04-20 22:55:57 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:55:57 -请求地址 : http://localhost/index
2018-04-20 22:55:57 -HTTP METHOD : GET
2018-04-20 22:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 22:55:57 -参数 : [{}]
2018-04-20 22:55:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 22:55:57 -==> Parameters: 1(Long)
2018-04-20 22:55:57 -<==      Total: 18
2018-04-20 22:55:57 -耗时 : 8
2018-04-20 22:55:57 -返回值 : index_v1
2018-04-20 22:55:57 -请求地址 : http://localhost/main
2018-04-20 22:55:57 -HTTP METHOD : GET
2018-04-20 22:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:55:57 -参数 : []
2018-04-20 22:55:57 -耗时 : 0
2018-04-20 22:55:57 -返回值 : main
2018-04-20 22:55:57 -请求地址 : http://localhost/main
2018-04-20 22:55:57 -HTTP METHOD : GET
2018-04-20 22:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 22:55:57 -参数 : []
2018-04-20 22:55:57 -耗时 : 0
2018-04-20 22:55:57 -返回值 : main
2018-04-20 22:56:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 22:56:00 -==> Parameters: 1(Long)
2018-04-20 22:56:00 -<==      Total: 53
2018-04-20 22:56:00 -请求地址 : http://localhost/sys/user/
2018-04-20 22:56:00 -HTTP METHOD : GET
2018-04-20 22:56:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-04-20 22:56:00 -参数 : [{}]
2018-04-20 22:56:00 -耗时 : 1
2018-04-20 22:56:00 -返回值 : system/user/user
2018-04-20 22:56:00 -请求地址 : http://localhost/sys/user/list
2018-04-20 22:56:00 -HTTP METHOD : GET
2018-04-20 22:56:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 22:56:00 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 22:56:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 22:56:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:56:00 -<==      Total: 4
2018-04-20 22:56:00 -==>  Preparing: select count(*) from sys_user 
2018-04-20 22:56:00 -==> Parameters: 
2018-04-20 22:56:00 -<==      Total: 1
2018-04-20 22:56:00 -耗时 : 14
2018-04-20 22:56:00 -返回值 : com.bootdo.common.utils.PageUtils@1fb92c5f
2018-04-20 22:56:02 -请求地址 : http://localhost/sys/role
2018-04-20 22:56:02 -HTTP METHOD : GET
2018-04-20 22:56:02 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 22:56:02 -参数 : []
2018-04-20 22:56:02 -耗时 : 0
2018-04-20 22:56:02 -返回值 : system/role/role
2018-04-20 22:56:02 -请求地址 : http://localhost/sys/role/list
2018-04-20 22:56:02 -HTTP METHOD : GET
2018-04-20 22:56:02 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 22:56:02 -参数 : []
2018-04-20 22:56:02 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:56:02 -==> Parameters: 
2018-04-20 22:56:02 -<==      Total: 2
2018-04-20 22:56:02 -耗时 : 4
2018-04-20 22:56:02 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 22:56:04 -请求地址 : http://localhost/sys/role/edit/1
2018-04-20 22:56:04 -HTTP METHOD : GET
2018-04-20 22:56:04 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:56:04 -参数 : [1, {}]
2018-04-20 22:56:04 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:56:04 -==> Parameters: 1(Long)
2018-04-20 22:56:04 -<==      Total: 1
2018-04-20 22:56:04 -耗时 : 2
2018-04-20 22:56:04 -返回值 : system/role/edit
2018-04-20 22:56:04 -请求地址 : http://localhost/sys/menu/tree/1
2018-04-20 22:56:04 -HTTP METHOD : GET
2018-04-20 22:56:04 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:56:04 -参数 : [1]
2018-04-20 22:56:04 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:56:04 -==> Parameters: 
2018-04-20 22:56:04 -<==      Total: 84
2018-04-20 22:56:04 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:56:04 -==> Parameters: 1(Long)
2018-04-20 22:56:04 -<==      Total: 58
2018-04-20 22:56:04 -耗时 : 10
2018-04-20 22:56:04 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":true},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":true},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":true},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:56:09 -请求地址 : http://localhost/sys/role/edit/2
2018-04-20 22:56:09 -HTTP METHOD : GET
2018-04-20 22:56:09 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2018-04-20 22:56:09 -参数 : [2, {}]
2018-04-20 22:56:09 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-04-20 22:56:09 -==> Parameters: 2(Long)
2018-04-20 22:56:09 -<==      Total: 1
2018-04-20 22:56:09 -耗时 : 6
2018-04-20 22:56:09 -返回值 : system/role/edit
2018-04-20 22:56:09 -请求地址 : http://localhost/sys/menu/tree/2
2018-04-20 22:56:09 -HTTP METHOD : GET
2018-04-20 22:56:09 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2018-04-20 22:56:09 -参数 : [2]
2018-04-20 22:56:09 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-04-20 22:56:09 -==> Parameters: 
2018-04-20 22:56:09 -<==      Total: 84
2018-04-20 22:56:09 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-04-20 22:56:09 -==> Parameters: 2(Long)
2018-04-20 22:56:09 -<==      Total: 13
2018-04-20 22:56:09 -耗时 : 16
2018-04-20 22:56:09 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":false},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":false},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":false},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":false},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":false},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"客户信息管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-04-20 22:56:17 -请求地址 : http://localhost/sys/user/add
2018-04-20 22:56:17 -HTTP METHOD : GET
2018-04-20 22:56:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2018-04-20 22:56:17 -参数 : [{}]
2018-04-20 22:56:17 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:56:17 -==> Parameters: 
2018-04-20 22:56:17 -<==      Total: 2
2018-04-20 22:56:17 -耗时 : 2
2018-04-20 22:56:17 -返回值 : system/user/add
2018-04-20 22:56:25 -请求地址 : http://localhost/sys/user/edit/1
2018-04-20 22:56:25 -HTTP METHOD : GET
2018-04-20 22:56:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-04-20 22:56:25 -参数 : [{}, 1]
2018-04-20 22:56:25 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:56:25 -==> Parameters: 1(Long)
2018-04-20 22:56:25 -<==      Total: 1
2018-04-20 22:56:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 22:56:25 -==> Parameters: 1(Long)
2018-04-20 22:56:25 -<==      Total: 1
2018-04-20 22:56:25 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:56:25 -==> Parameters: 1(Long)
2018-04-20 22:56:25 -<==      Total: 1
2018-04-20 22:56:25 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:56:25 -==> Parameters: 
2018-04-20 22:56:25 -<==      Total: 2
2018-04-20 22:56:25 -耗时 : 11
2018-04-20 22:56:25 -返回值 : system/user/edit
2018-04-20 22:56:28 -请求地址 : http://localhost/sys/user/edit/5
2018-04-20 22:56:28 -HTTP METHOD : GET
2018-04-20 22:56:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-04-20 22:56:28 -参数 : [{}, 5]
2018-04-20 22:56:28 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:56:28 -==> Parameters: 5(Long)
2018-04-20 22:56:28 -<==      Total: 1
2018-04-20 22:56:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 22:56:28 -==> Parameters: 5(Long)
2018-04-20 22:56:28 -<==      Total: 1
2018-04-20 22:56:28 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 22:56:28 -==> Parameters: 5(Long)
2018-04-20 22:56:28 -<==      Total: 1
2018-04-20 22:56:28 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 22:56:28 -==> Parameters: 
2018-04-20 22:56:28 -<==      Total: 2
2018-04-20 22:56:28 -耗时 : 8
2018-04-20 22:56:28 -返回值 : system/user/edit
2018-04-20 22:56:35 -请求地址 : http://localhost/system/order/
2018-04-20 22:56:35 -HTTP METHOD : GET
2018-04-20 22:56:35 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 22:56:35 -参数 : []
2018-04-20 22:56:35 -耗时 : 1
2018-04-20 22:56:35 -返回值 : system/order/order
2018-04-20 22:56:35 -请求地址 : http://localhost/system/order/list
2018-04-20 22:56:35 -HTTP METHOD : GET
2018-04-20 22:56:35 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:56:35 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:56:35 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:56:35 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:56:35 -<==      Total: 2
2018-04-20 22:56:35 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:56:35 -==> Parameters: 
2018-04-20 22:56:35 -<==      Total: 1
2018-04-20 22:56:35 -耗时 : 4
2018-04-20 22:56:35 -返回值 : com.bootdo.common.utils.PageUtils@4fffade2
2018-04-20 22:56:38 -请求地址 : http://localhost/system/order/add
2018-04-20 22:56:38 -HTTP METHOD : GET
2018-04-20 22:56:38 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2018-04-20 22:56:38 -参数 : []
2018-04-20 22:56:38 -耗时 : 0
2018-04-20 22:56:38 -返回值 : system/order/add
2018-04-20 22:56:45 -请求地址 : http://localhost/system/good
2018-04-20 22:56:45 -HTTP METHOD : GET
2018-04-20 22:56:45 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 22:56:45 -参数 : []
2018-04-20 22:56:45 -耗时 : 0
2018-04-20 22:56:45 -返回值 : system/good/good
2018-04-20 22:56:45 -请求地址 : http://localhost/system/good/list
2018-04-20 22:56:45 -HTTP METHOD : GET
2018-04-20 22:56:45 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 22:56:45 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 22:56:45 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 22:56:45 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:56:45 -<==      Total: 2
2018-04-20 22:56:45 -==>  Preparing: select count(*) from t_good 
2018-04-20 22:56:45 -==> Parameters: 
2018-04-20 22:56:45 -<==      Total: 1
2018-04-20 22:56:45 -耗时 : 49
2018-04-20 22:56:45 -返回值 : com.bootdo.common.utils.PageUtils@20d6e52b
2018-04-20 22:56:53 -请求地址 : http://localhost/system/order/add
2018-04-20 22:56:53 -HTTP METHOD : GET
2018-04-20 22:56:53 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2018-04-20 22:56:53 -参数 : []
2018-04-20 22:56:53 -耗时 : 0
2018-04-20 22:56:53 -返回值 : system/order/add
2018-04-20 22:57:59 -请求地址 : http://localhost/system/order/save
2018-04-20 22:57:59 -HTTP METHOD : POST
2018-04-20 22:57:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2018-04-20 22:57:59 -参数 : [com.bootdo.system.domain.OrderDO@31ee051f]
2018-04-20 22:57:59 -==>  Preparing: insert into t_order ( `order_sn`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 22:57:59 -==> Parameters: 1524236279989(String), 李四(String), 500.0(Double), 100(Integer), 2018-04-20 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), 13701234565(String), null, 2018-04-20 22:57:59.989(Timestamp), 0(Integer), (String), 0001(String), 苹果(String)
2018-04-20 22:58:00 -<==    Updates: 1
2018-04-20 22:58:00 -==>  Preparing: insert into t_order_settlement ( `order_sn`, `total_price`, `create_date`, `state` ) values ( ?, ?, ?, ? ) 
2018-04-20 22:58:00 -==> Parameters: 1524236279989(String), 500.0(Double), 2018-04-20 22:58:00.203(Timestamp), 0(Integer)
2018-04-20 22:58:00 -<==    Updates: 1
2018-04-20 22:58:00 -耗时 : 350
2018-04-20 22:58:00 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:58:00 -请求地址 : http://localhost/system/order/list
2018-04-20 22:58:00 -HTTP METHOD : GET
2018-04-20 22:58:00 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:58:00 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:58:00 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:58:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:58:00 -<==      Total: 3
2018-04-20 22:58:00 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:58:00 -==> Parameters: 
2018-04-20 22:58:00 -<==      Total: 1
2018-04-20 22:58:00 -耗时 : 4
2018-04-20 22:58:00 -返回值 : com.bootdo.common.utils.PageUtils@788bedf
2018-04-20 22:58:04 -请求地址 : http://localhost/system/order/edit/3
2018-04-20 22:58:04 -HTTP METHOD : GET
2018-04-20 22:58:04 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2018-04-20 22:58:04 -参数 : [3, {}]
2018-04-20 22:58:04 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2018-04-20 22:58:04 -==> Parameters: 3(Long)
2018-04-20 22:58:04 -<==      Total: 1
2018-04-20 22:58:04 -耗时 : 3
2018-04-20 22:58:04 -返回值 : system/order/edit
2018-04-20 22:58:09 -请求地址 : http://localhost/system/order/update
2018-04-20 22:58:09 -HTTP METHOD : POST
2018-04-20 22:58:09 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2018-04-20 22:58:09 -参数 : [com.bootdo.system.domain.OrderDO@49b52284]
2018-04-20 22:58:09 -==>  Preparing: update t_order SET `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 22:58:09 -==> Parameters: 李四(String), 500.0(Double), 100(Integer), 2018-04-21 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), 13701234565(String), (String), 0001(String), 苹果(String), 3(Long)
2018-04-20 22:58:09 -<==    Updates: 1
2018-04-20 22:58:09 -耗时 : 145
2018-04-20 22:58:09 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:58:09 -请求地址 : http://localhost/system/order/list
2018-04-20 22:58:09 -HTTP METHOD : GET
2018-04-20 22:58:09 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 22:58:09 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 22:58:09 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 22:58:09 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:58:09 -<==      Total: 3
2018-04-20 22:58:09 -==>  Preparing: select count(*) from t_order 
2018-04-20 22:58:09 -==> Parameters: 
2018-04-20 22:58:09 -<==      Total: 1
2018-04-20 22:58:09 -耗时 : 6
2018-04-20 22:58:09 -返回值 : com.bootdo.common.utils.PageUtils@76bd70e7
2018-04-20 22:58:20 -请求地址 : http://localhost/system/logistics
2018-04-20 22:58:20 -HTTP METHOD : GET
2018-04-20 22:58:20 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 22:58:20 -参数 : []
2018-04-20 22:58:20 -耗时 : 1
2018-04-20 22:58:20 -返回值 : system/logistics/logistics
2018-04-20 22:58:20 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:58:20 -HTTP METHOD : GET
2018-04-20 22:58:20 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:58:20 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:58:20 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:58:20 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:58:20 -<==      Total: 1
2018-04-20 22:58:20 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:58:20 -==> Parameters: 
2018-04-20 22:58:20 -<==      Total: 1
2018-04-20 22:58:20 -耗时 : 17
2018-04-20 22:58:20 -返回值 : com.bootdo.common.utils.PageUtils@18f26933
2018-04-20 22:58:24 -请求地址 : http://localhost/system/logistics/add
2018-04-20 22:58:24 -HTTP METHOD : GET
2018-04-20 22:58:24 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-20 22:58:24 -参数 : []
2018-04-20 22:58:24 -耗时 : 0
2018-04-20 22:58:24 -返回值 : system/logistics/add
2018-04-20 22:58:35 -请求地址 : http://localhost/system/good
2018-04-20 22:58:35 -HTTP METHOD : GET
2018-04-20 22:58:35 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 22:58:35 -参数 : []
2018-04-20 22:58:35 -耗时 : 1
2018-04-20 22:58:35 -返回值 : system/good/good
2018-04-20 22:58:35 -请求地址 : http://localhost/system/good/list
2018-04-20 22:58:35 -HTTP METHOD : GET
2018-04-20 22:58:35 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 22:58:35 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 22:58:35 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 22:58:35 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:58:35 -<==      Total: 2
2018-04-20 22:58:35 -==>  Preparing: select count(*) from t_good 
2018-04-20 22:58:35 -==> Parameters: 
2018-04-20 22:58:35 -<==      Total: 1
2018-04-20 22:58:35 -耗时 : 5
2018-04-20 22:58:35 -返回值 : com.bootdo.common.utils.PageUtils@2ef1fd17
2018-04-20 22:59:48 -请求地址 : http://localhost/system/logistics/save
2018-04-20 22:59:48 -HTTP METHOD : POST
2018-04-20 22:59:48 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.save
2018-04-20 22:59:48 -参数 : [com.bootdo.system.domain.LogisticsDO@1dc55af2]
2018-04-20 22:59:48 -==>  Preparing: insert into t_logistics ( `no`, `good_number`, `good_name`, `send_name`, `send_address`, `send_telephone`, `send_province`, `send_city`, `send_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `arrive_province`, `arrive_city`, `arrive_date` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 22:59:48 -==> Parameters: 0123456789(String), 0001(String), 苹果(String), 李四(String), 四川成都(String), 13801234567(String), 四川(String), 成都(String), 2018-04-20 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), (String), (String), 成都(String), 2018-04-23 00:00:00.0(Timestamp)
2018-04-20 22:59:48 -<==    Updates: 1
2018-04-20 22:59:48 -耗时 : 234
2018-04-20 22:59:48 -返回值 : {msg=操作成功, code=0}
2018-04-20 22:59:48 -请求地址 : http://localhost/system/logistics/list
2018-04-20 22:59:48 -HTTP METHOD : GET
2018-04-20 22:59:48 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 22:59:48 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 22:59:48 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 22:59:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 22:59:48 -<==      Total: 2
2018-04-20 22:59:49 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 22:59:49 -==> Parameters: 
2018-04-20 22:59:49 -<==      Total: 1
2018-04-20 22:59:49 -耗时 : 4
2018-04-20 22:59:49 -返回值 : com.bootdo.common.utils.PageUtils@7b27857c
2018-04-20 23:00:01 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 23:00:01 -HTTP METHOD : GET
2018-04-20 23:00:01 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 23:00:01 -参数 : []
2018-04-20 23:00:01 -耗时 : 0
2018-04-20 23:00:01 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 23:00:01 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 23:00:01 -HTTP METHOD : GET
2018-04-20 23:00:01 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 23:00:01 -参数 : [{limit=10, offset=0}]
2018-04-20 23:00:01 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 23:00:01 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:01 -<==      Total: 1
2018-04-20 23:00:01 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 23:00:01 -==> Parameters: 
2018-04-20 23:00:01 -<==      Total: 1
2018-04-20 23:00:01 -耗时 : 5
2018-04-20 23:00:01 -返回值 : com.bootdo.common.utils.PageUtils@422862ca
2018-04-20 23:00:03 -请求地址 : http://localhost/system/logisticsManage/add
2018-04-20 23:00:03 -HTTP METHOD : GET
2018-04-20 23:00:03 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.add
2018-04-20 23:00:03 -参数 : []
2018-04-20 23:00:03 -耗时 : 1
2018-04-20 23:00:03 -返回值 : system/logisticsManage/add
2018-04-20 23:00:12 -请求地址 : http://localhost/system/car
2018-04-20 23:00:12 -HTTP METHOD : GET
2018-04-20 23:00:12 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:00:12 -参数 : []
2018-04-20 23:00:12 -耗时 : 0
2018-04-20 23:00:12 -返回值 : system/car/car
2018-04-20 23:00:12 -请求地址 : http://localhost/system/car/list
2018-04-20 23:00:12 -HTTP METHOD : GET
2018-04-20 23:00:12 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:00:12 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:00:12 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-20 23:00:12 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:12 -<==      Total: 1
2018-04-20 23:00:12 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:00:12 -==> Parameters: 
2018-04-20 23:00:12 -<==      Total: 1
2018-04-20 23:00:12 -耗时 : 13
2018-04-20 23:00:12 -返回值 : com.bootdo.common.utils.PageUtils@1872cf6d
2018-04-20 23:00:30 -请求地址 : http://localhost/system/logisticsManage/save
2018-04-20 23:00:30 -HTTP METHOD : POST
2018-04-20 23:00:30 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.save
2018-04-20 23:00:30 -参数 : [com.bootdo.system.domain.LogisticsManageDO@71945b40]
2018-04-20 23:00:30 -==>  Preparing: insert into t_logistics_manage ( `logistics_no`, `drivier_name`, `car_no`, `create_date`, `status` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:00:30 -==> Parameters: 0123456789(String), 张三(String), 川A4F567K(String), 2018-04-20 23:00:30.489(Timestamp), 0(Integer)
2018-04-20 23:00:30 -<==    Updates: 1
2018-04-20 23:00:30 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 23:00:30 -==> Parameters: 0123456789(String)
2018-04-20 23:00:30 -<==      Total: 1
2018-04-20 23:00:30 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 23:00:30 -==> Parameters: 0001(String), 苹果(String)
2018-04-20 23:00:30 -<==      Total: 1
2018-04-20 23:00:30 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 23:00:30 -==> Parameters: 1524236279989(String), 李四(String), 500.0(Double), 100(Integer), 2018-04-21 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), 13701234565(String), 2018-04-20 22:58:00.0(Timestamp), 1(Integer), (String), 0001(String), 苹果(String), 3(Long)
2018-04-20 23:00:30 -<==    Updates: 1
2018-04-20 23:00:30 -耗时 : 448
2018-04-20 23:00:30 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:00:30 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 23:00:30 -HTTP METHOD : GET
2018-04-20 23:00:30 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 23:00:30 -参数 : [{limit=10, offset=0}]
2018-04-20 23:00:30 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 23:00:30 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:30 -<==      Total: 2
2018-04-20 23:00:30 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 23:00:30 -==> Parameters: 
2018-04-20 23:00:30 -<==      Total: 1
2018-04-20 23:00:30 -耗时 : 3
2018-04-20 23:00:30 -返回值 : com.bootdo.common.utils.PageUtils@3268283d
2018-04-20 23:00:35 -请求地址 : http://localhost/system/order/
2018-04-20 23:00:35 -HTTP METHOD : GET
2018-04-20 23:00:35 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:00:35 -参数 : []
2018-04-20 23:00:35 -耗时 : 1
2018-04-20 23:00:35 -返回值 : system/order/order
2018-04-20 23:00:35 -请求地址 : http://localhost/system/order/list
2018-04-20 23:00:35 -HTTP METHOD : GET
2018-04-20 23:00:35 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:00:35 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:00:35 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:00:35 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:35 -<==      Total: 3
2018-04-20 23:00:35 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:00:35 -==> Parameters: 
2018-04-20 23:00:35 -<==      Total: 1
2018-04-20 23:00:35 -耗时 : 4
2018-04-20 23:00:35 -返回值 : com.bootdo.common.utils.PageUtils@7297929f
2018-04-20 23:00:40 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 23:00:40 -HTTP METHOD : GET
2018-04-20 23:00:40 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 23:00:40 -参数 : []
2018-04-20 23:00:40 -耗时 : 1
2018-04-20 23:00:40 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 23:00:40 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 23:00:40 -HTTP METHOD : GET
2018-04-20 23:00:40 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 23:00:40 -参数 : [{limit=10, offset=0}]
2018-04-20 23:00:40 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 23:00:40 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:40 -<==      Total: 2
2018-04-20 23:00:40 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 23:00:40 -==> Parameters: 
2018-04-20 23:00:40 -<==      Total: 1
2018-04-20 23:00:40 -耗时 : 3
2018-04-20 23:00:40 -返回值 : com.bootdo.common.utils.PageUtils@1fa3baaa
2018-04-20 23:00:48 -请求地址 : http://localhost/system/logisticsManage/edit/2
2018-04-20 23:00:48 -HTTP METHOD : GET
2018-04-20 23:00:48 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 23:00:48 -参数 : [2, {}]
2018-04-20 23:00:48 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 23:00:48 -==> Parameters: 2(Long)
2018-04-20 23:00:48 -<==      Total: 1
2018-04-20 23:00:48 -耗时 : 3
2018-04-20 23:00:48 -返回值 : system/logisticsManage/edit
2018-04-20 23:00:51 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 23:00:51 -HTTP METHOD : POST
2018-04-20 23:00:51 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 23:00:51 -参数 : [com.bootdo.system.domain.LogisticsManageDO@3a244683]
2018-04-20 23:00:51 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 23:00:51 -==> Parameters: 0123456789(String), 张三(String), 川A4F567K(String), 1(Integer), 2(Long)
2018-04-20 23:00:51 -<==    Updates: 1
2018-04-20 23:00:51 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 23:00:51 -==> Parameters: 0123456789(String)
2018-04-20 23:00:51 -<==      Total: 1
2018-04-20 23:00:51 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 23:00:51 -==> Parameters: 0001(String), 苹果(String)
2018-04-20 23:00:51 -<==      Total: 1
2018-04-20 23:00:51 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 23:00:51 -==> Parameters: 1524236279989(String), 李四(String), 500.0(Double), 100(Integer), 2018-04-21 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), 13701234565(String), 2018-04-20 22:58:00.0(Timestamp), 2(Integer), (String), 0001(String), 苹果(String), 3(Long)
2018-04-20 23:00:51 -<==    Updates: 1
2018-04-20 23:00:51 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc 
2018-04-20 23:00:51 -==> Parameters: 
2018-04-20 23:00:51 -<==      Total: 2
2018-04-20 23:00:51 -==>  Preparing: update t_order_settlement SET `order_sn` = ?, `total_price` = ?, `create_date` = ?, `state` = ? where id = ? 
2018-04-20 23:00:51 -==> Parameters: 1524236279989(String), 500.0(Double), 2018-04-20 23:00:51.182(Timestamp), 1(Integer), 2(Long)
2018-04-20 23:00:51 -<==    Updates: 1
2018-04-20 23:00:51 -耗时 : 154
2018-04-20 23:00:51 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:00:51 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 23:00:51 -HTTP METHOD : GET
2018-04-20 23:00:51 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 23:00:51 -参数 : [{limit=10, offset=0}]
2018-04-20 23:00:51 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 23:00:51 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:51 -<==      Total: 2
2018-04-20 23:00:51 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 23:00:51 -==> Parameters: 
2018-04-20 23:00:51 -<==      Total: 1
2018-04-20 23:00:51 -耗时 : 8
2018-04-20 23:00:51 -返回值 : com.bootdo.common.utils.PageUtils@51f190da
2018-04-20 23:00:59 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 23:00:59 -HTTP METHOD : GET
2018-04-20 23:00:59 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 23:00:59 -参数 : []
2018-04-20 23:00:59 -耗时 : 1
2018-04-20 23:00:59 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 23:00:59 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 23:00:59 -HTTP METHOD : GET
2018-04-20 23:00:59 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 23:00:59 -参数 : [{limit=10, offset=0}]
2018-04-20 23:00:59 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 23:00:59 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:00:59 -<==      Total: 2
2018-04-20 23:00:59 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 23:00:59 -==> Parameters: 
2018-04-20 23:00:59 -<==      Total: 1
2018-04-20 23:00:59 -耗时 : 5
2018-04-20 23:00:59 -返回值 : com.bootdo.common.utils.PageUtils@6d8aa2f2
2018-04-20 23:01:06 -请求地址 : http://localhost/system/order/
2018-04-20 23:01:06 -HTTP METHOD : GET
2018-04-20 23:01:06 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:01:06 -参数 : []
2018-04-20 23:01:06 -耗时 : 0
2018-04-20 23:01:06 -返回值 : system/order/order
2018-04-20 23:01:06 -请求地址 : http://localhost/system/order/list
2018-04-20 23:01:06 -HTTP METHOD : GET
2018-04-20 23:01:06 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:01:06 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:01:06 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:01:06 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:01:06 -<==      Total: 3
2018-04-20 23:01:06 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:01:06 -==> Parameters: 
2018-04-20 23:01:06 -<==      Total: 1
2018-04-20 23:01:06 -耗时 : 5
2018-04-20 23:01:06 -返回值 : com.bootdo.common.utils.PageUtils@400d423d
2018-04-20 23:01:11 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:01:11 -HTTP METHOD : GET
2018-04-20 23:01:11 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:01:11 -参数 : []
2018-04-20 23:01:11 -耗时 : 0
2018-04-20 23:01:11 -返回值 : system/order/statistics
2018-04-20 23:01:11 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:01:11 -HTTP METHOD : GET
2018-04-20 23:01:11 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:01:11 -参数 : [{limit=10, offset=0}]
2018-04-20 23:01:11 -Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.statistics(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statistics(OrderServiceImpl.java:34)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:71)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$a2e5db71.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 23:01:33 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:01:33 -HTTP METHOD : GET
2018-04-20 23:01:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:01:33 -参数 : []
2018-04-20 23:01:33 -耗时 : 1
2018-04-20 23:01:33 -返回值 : system/order/statistics
2018-04-20 23:01:33 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:01:33 -HTTP METHOD : GET
2018-04-20 23:01:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:01:33 -参数 : [{limit=10, offset=0}]
2018-04-20 23:01:33 -Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statistics
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.statistics(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statistics(OrderServiceImpl.java:34)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:71)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$a2e5db71.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 23:07:55 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 7688 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:07:55 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:07:55 -The following profiles are active: dev
2018-04-20 23:07:55 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:07:55 CST 2018]; root of context hierarchy
2018-04-20 23:07:55 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:07:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:07:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eaae2314] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$dd0751bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:07:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:07:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:07:58 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:07:58 -Starting service [Tomcat]
2018-04-20 23:07:58 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:07:59 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:07:59 -Root WebApplicationContext: initialization completed in 3277 ms
2018-04-20 23:07:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:07:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:07:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:07:59 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:07:59 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:07:59 -Filter xssFilter was not registered (disabled)
2018-04-20 23:07:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:07:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:07:59 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:07:59 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:07:59 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:07:55 CST 2018]; root of context hierarchy
2018-04-20 23:08:00 -{dataSource-1} inited
2018-04-20 23:08:01 -Using default implementation for ThreadExecutor
2018-04-20 23:08:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:08:01 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:08:01 -RAMJobStore initialized.
2018-04-20 23:08:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:08:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:08:01 -Quartz scheduler version: 2.2.1
2018-04-20 23:08:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5100c143
2018-04-20 23:08:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:08:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:08:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:08:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:08:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:08:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:08:02 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:08:02 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:08:02 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:08:02 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:08:02 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:08:02 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:08:02 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:08:02 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:08:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:08:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:08:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:08:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:08:02 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:08:02 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:08:02 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:08:02 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:08:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:08:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:08:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:08:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:08:02 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:08:02 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:08:02 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:08:02 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:08:02 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:08:02 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:08:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:08:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:08:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:08:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:08:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:08:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:08:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:08:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:08:02 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:08:02 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:08:02 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:08:02 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:08:02 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:08:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:08:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:08:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:08:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:08:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:08:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:08:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:08:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:08:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:08:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:08:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:08:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:08:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:08:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:08:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:08:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:08:03 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:07:55 CST 2018]; root of context hierarchy
2018-04-20 23:08:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:08:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:08:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:08:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:08:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:08:05 -

Using default security password: b65a2ec8-2307-4a98-89ed-65fef99e1cc0

2018-04-20 23:08:05 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:08:05 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@513bec8c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@693ed09d, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b468710, org.springframework.security.web.header.HeaderWriterFilter@4028aab2, org.springframework.security.web.csrf.CsrfFilter@1d7d968c, org.springframework.security.web.authentication.logout.LogoutFilter@7683d632, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8de4206, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@576a8b00, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fc8163, org.springframework.security.web.session.SessionManagementFilter@99af41d, org.springframework.security.web.access.ExceptionTranslationFilter@17b387ef]
2018-04-20 23:08:06 -Registering beans for JMX exposure on startup
2018-04-20 23:08:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:08:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:08:06 -Starting beans in phase 2147483647
2018-04-20 23:08:06 -Context refreshed
2018-04-20 23:08:06 -Found 1 custom documentation plugin(s)
2018-04-20 23:08:06 -Scanning for api listing references
2018-04-20 23:08:06 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_2
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_2
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:08:07 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_2
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_3
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_3
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:08:07 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_3
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_4
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_4
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_4
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_5
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_5
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:08:07 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_5
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_6
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_6
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:08:07 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_6
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_7
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_7
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_7
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_8
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_8
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_9
2018-04-20 23:08:07 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_8
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_9
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_10
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_9
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_10
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_11
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_10
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_11
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_12
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:08:07 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:08:07 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:08:07 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:08:07 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:08:07 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:08:07 -Generating unique operation named: addUsingGET_11
2018-04-20 23:08:07 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:08:07 -Generating unique operation named: editUsingGET_12
2018-04-20 23:08:07 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:08:07 -Generating unique operation named: listUsingGET_13
2018-04-20 23:08:07 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:08:07 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:08:07 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:08:07 -Generating unique operation named: userUsingGET_1
2018-04-20 23:08:07 -Starting Quartz Scheduler now
2018-04-20 23:08:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:08:07 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:08:07 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:08:07 -Using a shared selector for servlet write/read
2018-04-20 23:08:07 -Tomcat started on port(s): 80 (http)
2018-04-20 23:08:07 -Started BootdoApplication in 13.049 seconds (JVM running for 13.511)
2018-04-20 23:08:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:08:15 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:08:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-04-20 23:08:15 -Enabling session validation scheduler...
2018-04-20 23:08:15 -请求地址 : http://localhost/login;JSESSIONID=fc9c4968-8fbf-4d4b-b902-f74c2be2fefe
2018-04-20 23:08:15 -HTTP METHOD : GET
2018-04-20 23:08:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:08:15 -参数 : []
2018-04-20 23:08:15 -耗时 : 2
2018-04-20 23:08:15 -返回值 : login
2018-04-20 23:08:15 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:08:15 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:08:15 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:08:15 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:08:15 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:08:15 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:08:15 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:08:16 -请求地址 : http://localhost/login
2018-04-20 23:08:16 -HTTP METHOD : GET
2018-04-20 23:08:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:08:16 -参数 : []
2018-04-20 23:08:16 -耗时 : 0
2018-04-20 23:08:16 -返回值 : login
2018-04-20 23:08:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:08:17 -==> Parameters: admin(String)
2018-04-20 23:08:17 -<==      Total: 1
2018-04-20 23:08:17 -请求地址 : http://localhost/login
2018-04-20 23:08:17 -HTTP METHOD : POST
2018-04-20 23:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:08:17 -参数 : [admin, 123456]
2018-04-20 23:08:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:08:17 -==> Parameters: admin(String)
2018-04-20 23:08:17 -<==      Total: 1
2018-04-20 23:08:17 -耗时 : 10
2018-04-20 23:08:17 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:08:17 -请求地址 : http://localhost/index
2018-04-20 23:08:17 -HTTP METHOD : GET
2018-04-20 23:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:08:17 -参数 : [{}]
2018-04-20 23:08:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:08:17 -==> Parameters: 1(Long)
2018-04-20 23:08:17 -<==      Total: 18
2018-04-20 23:08:17 -耗时 : 46
2018-04-20 23:08:17 -返回值 : index_v1
2018-04-20 23:08:17 -请求地址 : http://localhost/main
2018-04-20 23:08:17 -HTTP METHOD : GET
2018-04-20 23:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:08:17 -参数 : []
2018-04-20 23:08:17 -耗时 : 0
2018-04-20 23:08:17 -返回值 : main
2018-04-20 23:08:17 -请求地址 : http://localhost/main
2018-04-20 23:08:17 -HTTP METHOD : GET
2018-04-20 23:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:08:17 -参数 : []
2018-04-20 23:08:17 -耗时 : 0
2018-04-20 23:08:17 -返回值 : main
2018-04-20 23:08:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:08:19 -==> Parameters: 1(Long)
2018-04-20 23:08:19 -<==      Total: 53
2018-04-20 23:08:19 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:08:19 -HTTP METHOD : GET
2018-04-20 23:08:19 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:08:19 -参数 : []
2018-04-20 23:08:19 -耗时 : 1
2018-04-20 23:08:19 -返回值 : system/order/statistics
2018-04-20 23:08:20 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:08:20 -HTTP METHOD : GET
2018-04-20 23:08:20 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:08:20 -参数 : [{limit=10, offset=0}]
2018-04-20 23:08:20 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:08:20 -==> Parameters: 
2018-04-20 23:08:20 -<==      Total: 2
2018-04-20 23:08:20 -Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statisticsCount
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dao.OrderDao.statisticsCount
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.statisticsCount(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statisticsCount(OrderServiceImpl.java:39)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:72)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$ef189baa.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 23:09:08 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 2872 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:09:08 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:09:08 -The following profiles are active: dev
2018-04-20 23:09:08 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:09:08 CST 2018]; root of context hierarchy
2018-04-20 23:09:08 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:09:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:09:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f27a7f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8180d69e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:09:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:09:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:09:11 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:09:11 -Starting service [Tomcat]
2018-04-20 23:09:11 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:09:11 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:09:11 -Root WebApplicationContext: initialization completed in 3262 ms
2018-04-20 23:09:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:09:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:09:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:09:12 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:09:12 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:09:12 -Filter xssFilter was not registered (disabled)
2018-04-20 23:09:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:09:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:09:12 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:09:12 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:09:12 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:09:08 CST 2018]; root of context hierarchy
2018-04-20 23:09:12 -{dataSource-1} inited
2018-04-20 23:09:13 -Using default implementation for ThreadExecutor
2018-04-20 23:09:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:09:13 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:09:13 -RAMJobStore initialized.
2018-04-20 23:09:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:09:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:09:13 -Quartz scheduler version: 2.2.1
2018-04-20 23:09:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@e18d2a2
2018-04-20 23:09:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:09:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:09:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:09:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:09:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:09:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:09:15 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:09:15 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:09:15 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:09:15 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:09:15 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:09:15 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:09:15 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:09:15 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:09:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:09:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:09:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:09:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:09:15 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:09:15 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:09:15 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:09:15 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:09:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:09:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:09:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:09:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:09:15 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:09:15 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:09:15 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:09:15 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:09:15 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:09:15 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:09:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:09:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:09:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:09:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:09:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:09:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:09:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:09:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:09:15 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:09:15 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:09:15 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:09:15 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:09:15 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:09:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:09:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:09:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:09:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:09:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:09:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:09:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:09:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:09:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:09:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:09:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:09:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:09:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:09:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:09:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:09:16 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:09:08 CST 2018]; root of context hierarchy
2018-04-20 23:09:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:09:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:09:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:09:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:09:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:09:19 -

Using default security password: a310e51c-bda0-459a-b205-9582a9ced2df

2018-04-20 23:09:19 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:09:19 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@5929059c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@256aabbe, org.springframework.security.web.context.SecurityContextPersistenceFilter@12b66c89, org.springframework.security.web.header.HeaderWriterFilter@1a06ec24, org.springframework.security.web.csrf.CsrfFilter@5184da2b, org.springframework.security.web.authentication.logout.LogoutFilter@6e53bb4f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13868c41, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58d4fe33, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b7a0f18, org.springframework.security.web.session.SessionManagementFilter@4df13b7e, org.springframework.security.web.access.ExceptionTranslationFilter@38a61c81]
2018-04-20 23:09:20 -Registering beans for JMX exposure on startup
2018-04-20 23:09:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:09:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:09:20 -Starting beans in phase 2147483647
2018-04-20 23:09:20 -Context refreshed
2018-04-20 23:09:20 -Found 1 custom documentation plugin(s)
2018-04-20 23:09:20 -Scanning for api listing references
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:09:21 -Generating unique operation named: addUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_2
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_2
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:09:21 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:09:21 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: addUsingGET_2
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_3
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_3
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:09:21 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:09:21 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:09:21 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:09:21 -Generating unique operation named: addUsingGET_3
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_4
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_4
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:09:21 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:09:21 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:09:21 -Generating unique operation named: addUsingGET_4
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_5
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_5
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:09:21 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:09:21 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:09:21 -Generating unique operation named: addUsingGET_5
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_6
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_6
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:09:21 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:09:21 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:09:21 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:09:21 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:09:21 -Generating unique operation named: addUsingGET_6
2018-04-20 23:09:21 -Generating unique operation named: editUsingGET_7
2018-04-20 23:09:21 -Generating unique operation named: listUsingGET_7
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:09:21 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:09:21 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:09:21 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:09:21 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:09:21 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:09:21 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:09:21 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:09:22 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:09:22 -Generating unique operation named: addUsingGET_7
2018-04-20 23:09:22 -Generating unique operation named: editUsingGET_8
2018-04-20 23:09:22 -Generating unique operation named: listUsingGET_8
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:09:22 -Generating unique operation named: listUsingGET_9
2018-04-20 23:09:22 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:09:22 -Generating unique operation named: addUsingGET_8
2018-04-20 23:09:22 -Generating unique operation named: editUsingGET_9
2018-04-20 23:09:22 -Generating unique operation named: listUsingGET_10
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:09:22 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:09:22 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:09:22 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:09:22 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:09:22 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:09:22 -Generating unique operation named: addUsingGET_9
2018-04-20 23:09:22 -Generating unique operation named: editUsingGET_10
2018-04-20 23:09:22 -Generating unique operation named: listUsingGET_11
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:09:22 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:09:22 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:09:22 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:09:22 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:09:22 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:09:22 -Generating unique operation named: addUsingGET_10
2018-04-20 23:09:22 -Generating unique operation named: editUsingGET_11
2018-04-20 23:09:22 -Generating unique operation named: listUsingGET_12
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:09:22 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:09:22 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:09:22 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:09:22 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:09:22 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:09:22 -Generating unique operation named: addUsingGET_11
2018-04-20 23:09:22 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:09:22 -Generating unique operation named: editUsingGET_12
2018-04-20 23:09:22 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:09:22 -Generating unique operation named: listUsingGET_13
2018-04-20 23:09:22 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:09:22 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:09:22 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:09:22 -Generating unique operation named: userUsingGET_1
2018-04-20 23:09:22 -Starting Quartz Scheduler now
2018-04-20 23:09:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:09:22 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:09:22 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:09:22 -Using a shared selector for servlet write/read
2018-04-20 23:09:22 -Tomcat started on port(s): 80 (http)
2018-04-20 23:09:22 -Started BootdoApplication in 15.046 seconds (JVM running for 15.536)
2018-04-20 23:09:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:09:55 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:09:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-04-20 23:09:55 -Enabling session validation scheduler...
2018-04-20 23:09:55 -请求地址 : http://localhost/login;JSESSIONID=17b25490-0c5c-4073-a1b3-ba159af2edb5
2018-04-20 23:09:55 -HTTP METHOD : GET
2018-04-20 23:09:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:09:55 -参数 : []
2018-04-20 23:09:55 -耗时 : 2
2018-04-20 23:09:55 -返回值 : login
2018-04-20 23:09:55 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:09:55 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:09:55 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:09:55 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:09:55 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:09:55 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:09:55 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:09:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:09:57 -==> Parameters: admin(String)
2018-04-20 23:09:57 -<==      Total: 1
2018-04-20 23:09:57 -请求地址 : http://localhost/login
2018-04-20 23:09:57 -HTTP METHOD : POST
2018-04-20 23:09:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:09:57 -参数 : [admin, 123456]
2018-04-20 23:09:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:09:57 -==> Parameters: admin(String)
2018-04-20 23:09:57 -<==      Total: 1
2018-04-20 23:09:57 -耗时 : 12
2018-04-20 23:09:57 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:09:57 -请求地址 : http://localhost/index
2018-04-20 23:09:57 -HTTP METHOD : GET
2018-04-20 23:09:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:09:57 -参数 : [{}]
2018-04-20 23:09:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:09:57 -==> Parameters: 1(Long)
2018-04-20 23:09:57 -<==      Total: 18
2018-04-20 23:09:57 -耗时 : 47
2018-04-20 23:09:57 -返回值 : index_v1
2018-04-20 23:09:57 -请求地址 : http://localhost/main
2018-04-20 23:09:57 -HTTP METHOD : GET
2018-04-20 23:09:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:09:57 -参数 : []
2018-04-20 23:09:57 -耗时 : 0
2018-04-20 23:09:57 -返回值 : main
2018-04-20 23:09:57 -请求地址 : http://localhost/main
2018-04-20 23:09:57 -HTTP METHOD : GET
2018-04-20 23:09:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:09:57 -参数 : []
2018-04-20 23:09:57 -耗时 : 0
2018-04-20 23:09:57 -返回值 : main
2018-04-20 23:09:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:09:59 -==> Parameters: 1(Long)
2018-04-20 23:09:59 -<==      Total: 53
2018-04-20 23:09:59 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:09:59 -HTTP METHOD : GET
2018-04-20 23:09:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:09:59 -参数 : []
2018-04-20 23:09:59 -耗时 : 1
2018-04-20 23:09:59 -返回值 : system/order/statistics
2018-04-20 23:09:59 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:09:59 -HTTP METHOD : GET
2018-04-20 23:09:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:09:59 -参数 : [{limit=10, offset=0}]
2018-04-20 23:09:59 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:09:59 -==> Parameters: 
2018-04-20 23:09:59 -<==      Total: 2
2018-04-20 23:09:59 -==>  Preparing: select count(*) from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:09:59 -==> Parameters: 
2018-04-20 23:09:59 -<==      Total: 2
2018-04-20 23:09:59 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy91.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.statisticsCount(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statisticsCount(OrderServiceImpl.java:39)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:72)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$5170659a.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2018-04-20 23:13:38 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 5628 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:13:38 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:13:38 -The following profiles are active: dev
2018-04-20 23:13:38 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:13:38 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:13:38 CST 2018]; root of context hierarchy
2018-04-20 23:13:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:13:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e05ef48d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d2b82334] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:13:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:13:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:13:41 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:13:42 -Starting service [Tomcat]
2018-04-20 23:13:42 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:13:42 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:13:42 -Root WebApplicationContext: initialization completed in 3431 ms
2018-04-20 23:13:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:13:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:13:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:13:42 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:13:42 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:13:42 -Filter xssFilter was not registered (disabled)
2018-04-20 23:13:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:13:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:13:42 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:13:42 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:13:42 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:13:38 CST 2018]; root of context hierarchy
2018-04-20 23:13:43 -{dataSource-1} inited
2018-04-20 23:13:44 -Using default implementation for ThreadExecutor
2018-04-20 23:13:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:13:44 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:13:44 -RAMJobStore initialized.
2018-04-20 23:13:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:13:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:13:44 -Quartz scheduler version: 2.2.1
2018-04-20 23:13:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e79c25
2018-04-20 23:13:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:13:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:13:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:13:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:13:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:13:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:13:45 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:13:45 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:13:45 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:13:45 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:13:45 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:13:45 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:13:45 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:13:45 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:13:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:13:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:13:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:13:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:13:45 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:13:45 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:13:45 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:13:45 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:13:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:13:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:13:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:13:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:13:45 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:13:45 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:13:45 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:13:45 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:13:45 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:13:45 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:13:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:13:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:13:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:13:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:13:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:13:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:13:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:13:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:13:45 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:13:45 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:13:45 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:13:45 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:13:45 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:13:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:13:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:13:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:13:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:13:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:13:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:13:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:13:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:13:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:13:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:13:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:13:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:13:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:13:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:13:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:13:46 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:13:38 CST 2018]; root of context hierarchy
2018-04-20 23:13:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:13:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:13:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:13:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:13:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:13:48 -

Using default security password: 9a04d6b1-7612-4d29-9fb1-0b2ecee7059f

2018-04-20 23:13:48 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:13:48 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@10df1f34, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fe77a97, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e755d5f, org.springframework.security.web.header.HeaderWriterFilter@5ee95d42, org.springframework.security.web.csrf.CsrfFilter@6c930e7e, org.springframework.security.web.authentication.logout.LogoutFilter@1d7d968c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@458704ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2eb9c7ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5cea47a1, org.springframework.security.web.session.SessionManagementFilter@37dc7661, org.springframework.security.web.access.ExceptionTranslationFilter@f245168]
2018-04-20 23:13:49 -Registering beans for JMX exposure on startup
2018-04-20 23:13:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:13:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:13:49 -Starting beans in phase 2147483647
2018-04-20 23:13:49 -Context refreshed
2018-04-20 23:13:49 -Found 1 custom documentation plugin(s)
2018-04-20 23:13:49 -Scanning for api listing references
2018-04-20 23:13:49 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:13:49 -Generating unique operation named: editUsingGET_1
2018-04-20 23:13:49 -Generating unique operation named: listUsingGET_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:13:49 -Generating unique operation named: addUsingGET_1
2018-04-20 23:13:49 -Generating unique operation named: editUsingGET_2
2018-04-20 23:13:49 -Generating unique operation named: listUsingGET_2
2018-04-20 23:13:49 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:13:49 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:13:49 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:13:49 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:13:49 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:13:49 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:13:49 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:13:49 -Generating unique operation named: addUsingGET_2
2018-04-20 23:13:49 -Generating unique operation named: editUsingGET_3
2018-04-20 23:13:49 -Generating unique operation named: listUsingGET_3
2018-04-20 23:13:49 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:13:49 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:13:49 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:13:49 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:13:50 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_3
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_4
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_4
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_4
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_5
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_5
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:13:50 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_5
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_6
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_6
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:13:50 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_6
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_7
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_7
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_7
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_8
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_8
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_9
2018-04-20 23:13:50 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_8
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_9
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_10
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:13:50 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_9
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_10
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_11
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:13:50 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_10
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_11
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_12
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:13:50 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:13:50 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:13:50 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:13:50 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:13:50 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:13:50 -Generating unique operation named: addUsingGET_11
2018-04-20 23:13:50 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:13:50 -Generating unique operation named: editUsingGET_12
2018-04-20 23:13:50 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:13:50 -Generating unique operation named: listUsingGET_13
2018-04-20 23:13:50 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:13:50 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:13:50 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:13:50 -Generating unique operation named: userUsingGET_1
2018-04-20 23:13:50 -Starting Quartz Scheduler now
2018-04-20 23:13:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:13:50 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:13:50 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:13:50 -Using a shared selector for servlet write/read
2018-04-20 23:13:50 -Tomcat started on port(s): 80 (http)
2018-04-20 23:13:50 -Started BootdoApplication in 12.876 seconds (JVM running for 13.348)
2018-04-20 23:14:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:14:07 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:14:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-20 23:14:07 -Enabling session validation scheduler...
2018-04-20 23:14:07 -请求地址 : http://localhost/login;JSESSIONID=ee2ff571-617e-47ed-b0f4-18ed9d29ad14
2018-04-20 23:14:07 -HTTP METHOD : GET
2018-04-20 23:14:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:14:07 -参数 : []
2018-04-20 23:14:07 -耗时 : 2
2018-04-20 23:14:07 -返回值 : login
2018-04-20 23:14:07 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:14:07 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:14:07 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:14:07 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:14:07 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:14:07 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:14:07 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:14:07 -请求地址 : http://localhost/login
2018-04-20 23:14:07 -HTTP METHOD : GET
2018-04-20 23:14:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:14:07 -参数 : []
2018-04-20 23:14:07 -耗时 : 0
2018-04-20 23:14:07 -返回值 : login
2018-04-20 23:14:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:14:08 -==> Parameters: admin(String)
2018-04-20 23:14:08 -<==      Total: 1
2018-04-20 23:14:08 -请求地址 : http://localhost/login
2018-04-20 23:14:08 -HTTP METHOD : POST
2018-04-20 23:14:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:14:08 -参数 : [admin, 123456]
2018-04-20 23:14:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:14:08 -==> Parameters: admin(String)
2018-04-20 23:14:08 -<==      Total: 1
2018-04-20 23:14:08 -耗时 : 10
2018-04-20 23:14:08 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:14:08 -请求地址 : http://localhost/index
2018-04-20 23:14:08 -HTTP METHOD : GET
2018-04-20 23:14:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:14:08 -参数 : [{}]
2018-04-20 23:14:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:14:08 -==> Parameters: 1(Long)
2018-04-20 23:14:08 -<==      Total: 18
2018-04-20 23:14:08 -耗时 : 43
2018-04-20 23:14:08 -返回值 : index_v1
2018-04-20 23:14:09 -请求地址 : http://localhost/main
2018-04-20 23:14:09 -HTTP METHOD : GET
2018-04-20 23:14:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:14:09 -参数 : []
2018-04-20 23:14:09 -耗时 : 0
2018-04-20 23:14:09 -返回值 : main
2018-04-20 23:14:09 -请求地址 : http://localhost/main
2018-04-20 23:14:09 -HTTP METHOD : GET
2018-04-20 23:14:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:14:09 -参数 : []
2018-04-20 23:14:09 -耗时 : 0
2018-04-20 23:14:09 -返回值 : main
2018-04-20 23:14:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:14:11 -==> Parameters: 1(Long)
2018-04-20 23:14:11 -<==      Total: 53
2018-04-20 23:14:11 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:14:11 -HTTP METHOD : GET
2018-04-20 23:14:11 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:14:11 -参数 : []
2018-04-20 23:14:11 -耗时 : 0
2018-04-20 23:14:11 -返回值 : system/order/statistics
2018-04-20 23:14:11 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:14:11 -HTTP METHOD : GET
2018-04-20 23:14:11 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:14:11 -参数 : [{limit=10, offset=0}]
2018-04-20 23:14:11 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:14:11 -==> Parameters: 
2018-04-20 23:14:11 -<==      Total: 2
2018-04-20 23:14:11 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2018-04-20 23:14:11 -==> Parameters: 
2018-04-20 23:14:11 -<==      Total: 1
2018-04-20 23:14:11 -Mapper method 'com.bootdo.system.dao.OrderDao.statisticsCount attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.system.dao.OrderDao.statisticsCount attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.statisticsCount(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.statisticsCount(OrderServiceImpl.java:39)
	at com.bootdo.system.controller.OrderController.statisticsList(OrderController.java:72)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$ea2d4096.statisticsList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 23:14:55 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 5204 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:14:55 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:14:55 -The following profiles are active: dev
2018-04-20 23:14:55 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:14:55 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:14:55 CST 2018]; root of context hierarchy
2018-04-20 23:14:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:14:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f5ec6571] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e8459418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:14:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:14:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:14:58 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:14:58 -Starting service [Tomcat]
2018-04-20 23:14:58 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:14:59 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:14:59 -Root WebApplicationContext: initialization completed in 3483 ms
2018-04-20 23:14:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:14:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:14:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:14:59 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:14:59 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:14:59 -Filter xssFilter was not registered (disabled)
2018-04-20 23:14:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:14:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:14:59 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:14:59 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:14:59 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:14:55 CST 2018]; root of context hierarchy
2018-04-20 23:15:00 -{dataSource-1} inited
2018-04-20 23:15:01 -Using default implementation for ThreadExecutor
2018-04-20 23:15:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:15:01 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:15:01 -RAMJobStore initialized.
2018-04-20 23:15:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:15:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:15:01 -Quartz scheduler version: 2.2.1
2018-04-20 23:15:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@13f2d42c
2018-04-20 23:15:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:15:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:15:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:15:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:15:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:15:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:15:02 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:15:02 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:15:02 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:15:02 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:15:02 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:15:02 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:15:02 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:15:02 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:15:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:15:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:15:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:15:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:15:02 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:15:02 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:15:02 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:15:02 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:15:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:15:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:15:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:15:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:15:02 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:15:02 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:15:02 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:15:02 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:15:02 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:15:02 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:15:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:15:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:15:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:15:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:15:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:15:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:15:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:15:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:15:02 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:15:02 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:15:02 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:15:02 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:15:02 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:15:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:15:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:15:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:15:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:15:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:15:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:15:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:15:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:15:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:15:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:15:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:15:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:15:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:15:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:15:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:15:03 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:14:55 CST 2018]; root of context hierarchy
2018-04-20 23:15:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:15:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:15:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:15:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:15:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:15:05 -

Using default security password: b541b4e1-f2df-42d7-acf3-febceaf5b9f7

2018-04-20 23:15:05 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:15:05 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@460df441, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@761f1a28, org.springframework.security.web.context.SecurityContextPersistenceFilter@1dd6e400, org.springframework.security.web.header.HeaderWriterFilter@1784a296, org.springframework.security.web.csrf.CsrfFilter@35d53cd8, org.springframework.security.web.authentication.logout.LogoutFilter@1892865f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7699e60a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74901d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d65c0ac, org.springframework.security.web.session.SessionManagementFilter@6b35b0f4, org.springframework.security.web.access.ExceptionTranslationFilter@5feb8e9a]
2018-04-20 23:15:06 -Registering beans for JMX exposure on startup
2018-04-20 23:15:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:15:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:15:06 -Starting beans in phase 2147483647
2018-04-20 23:15:06 -Context refreshed
2018-04-20 23:15:06 -Found 1 custom documentation plugin(s)
2018-04-20 23:15:06 -Scanning for api listing references
2018-04-20 23:15:06 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:15:06 -Generating unique operation named: editUsingGET_1
2018-04-20 23:15:06 -Generating unique operation named: listUsingGET_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:15:06 -Generating unique operation named: addUsingGET_1
2018-04-20 23:15:06 -Generating unique operation named: editUsingGET_2
2018-04-20 23:15:06 -Generating unique operation named: listUsingGET_2
2018-04-20 23:15:06 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:15:06 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:15:06 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:15:06 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:15:06 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:15:06 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:15:07 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_2
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_3
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_3
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:15:07 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_3
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_4
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_4
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_4
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_5
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_5
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:15:07 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_5
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_6
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_6
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:15:07 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_6
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_7
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_7
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_7
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_8
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_8
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_9
2018-04-20 23:15:07 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_8
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_9
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_10
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_9
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_10
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_11
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_10
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_11
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_12
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:15:07 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:15:07 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:15:07 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:15:07 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:15:07 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:15:07 -Generating unique operation named: addUsingGET_11
2018-04-20 23:15:07 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:15:07 -Generating unique operation named: editUsingGET_12
2018-04-20 23:15:07 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:15:07 -Generating unique operation named: listUsingGET_13
2018-04-20 23:15:07 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:15:07 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:15:07 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:15:07 -Generating unique operation named: userUsingGET_1
2018-04-20 23:15:07 -Starting Quartz Scheduler now
2018-04-20 23:15:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:15:07 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:15:07 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:15:07 -Using a shared selector for servlet write/read
2018-04-20 23:15:07 -Tomcat started on port(s): 80 (http)
2018-04-20 23:15:07 -Started BootdoApplication in 13.181 seconds (JVM running for 13.677)
2018-04-20 23:15:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:15:12 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:15:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-20 23:15:12 -Enabling session validation scheduler...
2018-04-20 23:15:12 -请求地址 : http://localhost/login;JSESSIONID=69db3ac2-bd86-45bd-b27c-851c194d1e6f
2018-04-20 23:15:12 -HTTP METHOD : GET
2018-04-20 23:15:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:15:12 -参数 : []
2018-04-20 23:15:12 -耗时 : 2
2018-04-20 23:15:12 -返回值 : login
2018-04-20 23:15:12 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:15:12 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:15:12 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:15:12 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:15:12 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:15:12 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:15:12 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:15:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:15:14 -==> Parameters: admin(String)
2018-04-20 23:15:14 -<==      Total: 1
2018-04-20 23:15:14 -请求地址 : http://localhost/login
2018-04-20 23:15:14 -HTTP METHOD : POST
2018-04-20 23:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:15:14 -参数 : [admin, 123456]
2018-04-20 23:15:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:15:14 -==> Parameters: admin(String)
2018-04-20 23:15:14 -<==      Total: 1
2018-04-20 23:15:14 -耗时 : 9
2018-04-20 23:15:14 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:15:14 -请求地址 : http://localhost/index
2018-04-20 23:15:14 -HTTP METHOD : GET
2018-04-20 23:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:15:14 -参数 : [{}]
2018-04-20 23:15:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:15:14 -==> Parameters: 1(Long)
2018-04-20 23:15:14 -<==      Total: 18
2018-04-20 23:15:14 -耗时 : 48
2018-04-20 23:15:14 -返回值 : index_v1
2018-04-20 23:15:14 -请求地址 : http://localhost/main
2018-04-20 23:15:14 -HTTP METHOD : GET
2018-04-20 23:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:15:14 -参数 : []
2018-04-20 23:15:14 -耗时 : 1
2018-04-20 23:15:14 -返回值 : main
2018-04-20 23:15:14 -请求地址 : http://localhost/main
2018-04-20 23:15:14 -HTTP METHOD : GET
2018-04-20 23:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:15:14 -参数 : []
2018-04-20 23:15:14 -耗时 : 0
2018-04-20 23:15:14 -返回值 : main
2018-04-20 23:15:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:15:18 -==> Parameters: 1(Long)
2018-04-20 23:15:18 -<==      Total: 53
2018-04-20 23:15:18 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:15:18 -HTTP METHOD : GET
2018-04-20 23:15:18 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:15:18 -参数 : []
2018-04-20 23:15:18 -耗时 : 1
2018-04-20 23:15:18 -返回值 : system/order/statistics
2018-04-20 23:15:18 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:15:18 -HTTP METHOD : GET
2018-04-20 23:15:18 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:15:18 -参数 : [{limit=10, offset=0}]
2018-04-20 23:15:18 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:15:18 -==> Parameters: 
2018-04-20 23:15:18 -<==      Total: 2
2018-04-20 23:15:18 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2018-04-20 23:15:18 -==> Parameters: 
2018-04-20 23:15:18 -<==      Total: 1
2018-04-20 23:15:18 -耗时 : 29
2018-04-20 23:15:18 -返回值 : com.bootdo.common.utils.PageUtils@60244543
2018-04-20 23:15:27 -请求地址 : http://localhost/system/storageInput
2018-04-20 23:15:27 -HTTP METHOD : GET
2018-04-20 23:15:27 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 23:15:27 -参数 : []
2018-04-20 23:15:27 -耗时 : 1
2018-04-20 23:15:27 -返回值 : system/storageInput/storageInput
2018-04-20 23:15:27 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:15:27 -HTTP METHOD : GET
2018-04-20 23:15:27 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:15:27 -参数 : [{limit=10, offset=0}]
2018-04-20 23:15:27 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:15:27 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:15:27 -<==      Total: 0
2018-04-20 23:15:27 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:15:27 -==> Parameters: 
2018-04-20 23:15:27 -<==      Total: 1
2018-04-20 23:15:27 -耗时 : 16
2018-04-20 23:15:27 -返回值 : com.bootdo.common.utils.PageUtils@69612fd5
2018-04-20 23:15:29 -请求地址 : http://localhost/system/storage
2018-04-20 23:15:29 -HTTP METHOD : GET
2018-04-20 23:15:29 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:15:29 -参数 : []
2018-04-20 23:15:29 -耗时 : 1
2018-04-20 23:15:29 -返回值 : system/storage/storage
2018-04-20 23:15:29 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:15:29 -HTTP METHOD : GET
2018-04-20 23:15:29 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:15:29 -参数 : [{limit=10, offset=0}]
2018-04-20 23:15:29 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:15:29 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:15:29 -<==      Total: 0
2018-04-20 23:15:29 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:15:29 -==> Parameters: 
2018-04-20 23:15:29 -<==      Total: 1
2018-04-20 23:15:29 -耗时 : 150
2018-04-20 23:15:29 -返回值 : com.bootdo.common.utils.PageUtils@23cba7a3
2018-04-20 23:15:29 -请求地址 : http://localhost/system/good
2018-04-20 23:15:29 -HTTP METHOD : GET
2018-04-20 23:15:29 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:15:29 -参数 : []
2018-04-20 23:15:29 -耗时 : 1
2018-04-20 23:15:29 -返回值 : system/good/good
2018-04-20 23:15:30 -请求地址 : http://localhost/system/good/list
2018-04-20 23:15:30 -HTTP METHOD : GET
2018-04-20 23:15:30 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:15:30 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:15:30 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:15:30 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:15:30 -<==      Total: 2
2018-04-20 23:15:30 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:15:30 -==> Parameters: 
2018-04-20 23:15:30 -<==      Total: 1
2018-04-20 23:15:30 -耗时 : 13
2018-04-20 23:15:30 -返回值 : com.bootdo.common.utils.PageUtils@2de3a489
2018-04-20 23:15:33 -请求地址 : http://localhost/system/storageInput/add
2018-04-20 23:15:33 -HTTP METHOD : GET
2018-04-20 23:15:33 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.add
2018-04-20 23:15:33 -参数 : []
2018-04-20 23:15:33 -耗时 : 1
2018-04-20 23:15:33 -返回值 : system/storageInput/add
2018-04-20 23:16:02 -请求地址 : http://localhost/system/storageInput/save
2018-04-20 23:16:02 -HTTP METHOD : POST
2018-04-20 23:16:02 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.save
2018-04-20 23:16:02 -参数 : [com.bootdo.system.domain.StorageInputDO@59169bd6]
2018-04-20 23:16:02 -==>  Preparing: insert into t_storage_input ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:16:02 -==> Parameters: 香蕉(String), 0002(String), 5.0(Double), 100(Integer), 2018-04-20 23:16:02.095(Timestamp)
2018-04-20 23:16:02 -<==    Updates: 1
2018-04-20 23:16:02 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:16:02 -==> Parameters: 香蕉(String), 0002(String)
2018-04-20 23:16:02 -<==      Total: 0
2018-04-20 23:16:02 -耗时 : 273
2018-04-20 23:16:02 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:16:02 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:16:02 -HTTP METHOD : GET
2018-04-20 23:16:02 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:16:02 -参数 : [{limit=10, offset=0}]
2018-04-20 23:16:02 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:16:02 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:16:02 -<==      Total: 1
2018-04-20 23:16:02 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:16:02 -==> Parameters: 
2018-04-20 23:16:02 -<==      Total: 1
2018-04-20 23:16:02 -耗时 : 6
2018-04-20 23:16:02 -返回值 : com.bootdo.common.utils.PageUtils@119ffc0d
2018-04-20 23:16:24 -请求地址 : http://localhost/system/storage
2018-04-20 23:16:24 -HTTP METHOD : GET
2018-04-20 23:16:24 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:16:24 -参数 : []
2018-04-20 23:16:24 -耗时 : 0
2018-04-20 23:16:24 -返回值 : system/storage/storage
2018-04-20 23:16:24 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:16:24 -HTTP METHOD : GET
2018-04-20 23:16:24 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:16:24 -参数 : [{limit=10, offset=0}]
2018-04-20 23:16:24 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:16:24 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:16:24 -<==      Total: 0
2018-04-20 23:16:24 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:16:24 -==> Parameters: 
2018-04-20 23:16:24 -<==      Total: 1
2018-04-20 23:16:24 -耗时 : 6
2018-04-20 23:16:24 -返回值 : com.bootdo.common.utils.PageUtils@105e8488
2018-04-20 23:18:09 -请求地址 : http://localhost/system/good
2018-04-20 23:18:09 -HTTP METHOD : GET
2018-04-20 23:18:09 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:18:09 -参数 : []
2018-04-20 23:18:09 -耗时 : 1
2018-04-20 23:18:09 -返回值 : system/good/good
2018-04-20 23:18:09 -请求地址 : http://localhost/system/good/list
2018-04-20 23:18:09 -HTTP METHOD : GET
2018-04-20 23:18:09 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:18:09 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:18:09 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:18:09 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:18:09 -<==      Total: 2
2018-04-20 23:18:09 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:18:09 -==> Parameters: 
2018-04-20 23:18:09 -<==      Total: 1
2018-04-20 23:18:09 -耗时 : 6
2018-04-20 23:18:09 -返回值 : com.bootdo.common.utils.PageUtils@7a6b2c98
2018-04-20 23:18:11 -请求地址 : http://localhost/system/good/add
2018-04-20 23:18:11 -HTTP METHOD : GET
2018-04-20 23:18:11 -CLASS_METHOD : com.bootdo.system.controller.GoodController.add
2018-04-20 23:18:11 -参数 : []
2018-04-20 23:18:11 -耗时 : 0
2018-04-20 23:18:11 -返回值 : system/good/add
2018-04-20 23:18:46 -请求地址 : http://localhost/system/good/save
2018-04-20 23:18:46 -HTTP METHOD : POST
2018-04-20 23:18:46 -CLASS_METHOD : com.bootdo.system.controller.GoodController.save
2018-04-20 23:18:46 -参数 : [com.bootdo.system.domain.GoodDO@6c8b624e]
2018-04-20 23:18:46 -==>  Preparing: insert into t_good ( `title`, `type`, `number`, `price`, `weight`, `place`, `img`, `imgmore`, `create_by`, `create_date`, `remark`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:18:46 -==> Parameters: 李子(String), 水果(String), 0003(String), 4.0(Double), 2.0(Double), 广东(String), null, null, null, 2018-04-20 23:18:46.989(Timestamp), (String), 0(Integer)
2018-04-20 23:18:47 -<==    Updates: 1
2018-04-20 23:18:47 -==>  Preparing: insert into t_storage ( `good_name`, `good_number`, `good_count` ) values ( ?, ?, ? ) 
2018-04-20 23:18:47 -==> Parameters: 李子(String), 0003(String), 0(Integer)
2018-04-20 23:18:47 -<==    Updates: 1
2018-04-20 23:18:47 -耗时 : 464
2018-04-20 23:18:47 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:18:47 -请求地址 : http://localhost/system/good/list
2018-04-20 23:18:47 -HTTP METHOD : GET
2018-04-20 23:18:47 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:18:47 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:18:47 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:18:47 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:18:47 -<==      Total: 3
2018-04-20 23:18:47 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:18:47 -==> Parameters: 
2018-04-20 23:18:47 -<==      Total: 1
2018-04-20 23:18:47 -耗时 : 6
2018-04-20 23:18:47 -返回值 : com.bootdo.common.utils.PageUtils@6e0648a4
2018-04-20 23:18:50 -请求地址 : http://localhost/system/storage
2018-04-20 23:18:50 -HTTP METHOD : GET
2018-04-20 23:18:50 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:18:50 -参数 : []
2018-04-20 23:18:50 -耗时 : 0
2018-04-20 23:18:50 -返回值 : system/storage/storage
2018-04-20 23:18:50 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:18:50 -HTTP METHOD : GET
2018-04-20 23:18:50 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:18:50 -参数 : [{limit=10, offset=0}]
2018-04-20 23:18:50 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:18:50 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:18:50 -<==      Total: 1
2018-04-20 23:18:50 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:18:50 -==> Parameters: 
2018-04-20 23:18:50 -<==      Total: 1
2018-04-20 23:18:50 -耗时 : 4
2018-04-20 23:18:50 -返回值 : com.bootdo.common.utils.PageUtils@3fea4e03
2018-04-20 23:18:54 -请求地址 : http://localhost/system/storageInput
2018-04-20 23:18:54 -HTTP METHOD : GET
2018-04-20 23:18:54 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 23:18:54 -参数 : []
2018-04-20 23:18:54 -耗时 : 0
2018-04-20 23:18:54 -返回值 : system/storageInput/storageInput
2018-04-20 23:18:54 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:18:54 -HTTP METHOD : GET
2018-04-20 23:18:54 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:18:54 -参数 : [{limit=10, offset=0}]
2018-04-20 23:18:54 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:18:54 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:18:54 -<==      Total: 1
2018-04-20 23:18:54 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:18:54 -==> Parameters: 
2018-04-20 23:18:54 -<==      Total: 1
2018-04-20 23:18:54 -耗时 : 4
2018-04-20 23:18:54 -返回值 : com.bootdo.common.utils.PageUtils@748d67eb
2018-04-20 23:18:55 -请求地址 : http://localhost/system/storageInput/add
2018-04-20 23:18:55 -HTTP METHOD : GET
2018-04-20 23:18:55 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.add
2018-04-20 23:18:55 -参数 : []
2018-04-20 23:18:55 -耗时 : 1
2018-04-20 23:18:55 -返回值 : system/storageInput/add
2018-04-20 23:19:19 -请求地址 : http://localhost/system/storageInput/save
2018-04-20 23:19:19 -HTTP METHOD : POST
2018-04-20 23:19:19 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.save
2018-04-20 23:19:19 -参数 : [com.bootdo.system.domain.StorageInputDO@16fb9206]
2018-04-20 23:19:19 -==>  Preparing: insert into t_storage_input ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:19:19 -==> Parameters: 李子(String), 0003(String), 5.0(Double), 100(Integer), 2018-04-20 23:19:19.007(Timestamp)
2018-04-20 23:19:19 -<==    Updates: 1
2018-04-20 23:19:19 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:19:19 -==> Parameters: 李子(String), 0003(String)
2018-04-20 23:19:19 -<==      Total: 1
2018-04-20 23:19:19 -==>  Preparing: update t_storage SET `good_name` = ?, `good_number` = ?, `good_count` = ? where id = ? 
2018-04-20 23:19:19 -==> Parameters: 李子(String), 0003(String), 100(Integer), 1(Long)
2018-04-20 23:19:19 -<==    Updates: 1
2018-04-20 23:19:19 -耗时 : 915
2018-04-20 23:19:19 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:19:19 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:19:19 -HTTP METHOD : GET
2018-04-20 23:19:19 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:19:19 -参数 : [{limit=10, offset=0}]
2018-04-20 23:19:19 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:19:19 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:19:19 -<==      Total: 2
2018-04-20 23:19:19 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:19:19 -==> Parameters: 
2018-04-20 23:19:19 -<==      Total: 1
2018-04-20 23:19:19 -耗时 : 5
2018-04-20 23:19:19 -返回值 : com.bootdo.common.utils.PageUtils@198f88c2
2018-04-20 23:19:41 -请求地址 : http://localhost/system/storage
2018-04-20 23:19:41 -HTTP METHOD : GET
2018-04-20 23:19:41 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:19:41 -参数 : []
2018-04-20 23:19:41 -耗时 : 0
2018-04-20 23:19:41 -返回值 : system/storage/storage
2018-04-20 23:19:41 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:19:41 -HTTP METHOD : GET
2018-04-20 23:19:41 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:19:41 -参数 : [{limit=10, offset=0}]
2018-04-20 23:19:41 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:19:41 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:19:41 -<==      Total: 1
2018-04-20 23:19:41 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:19:41 -==> Parameters: 
2018-04-20 23:19:41 -<==      Total: 1
2018-04-20 23:19:41 -耗时 : 4
2018-04-20 23:19:41 -返回值 : com.bootdo.common.utils.PageUtils@8ad8e4e
2018-04-20 23:19:44 -请求地址 : http://localhost/system/storageOutput
2018-04-20 23:19:44 -HTTP METHOD : GET
2018-04-20 23:19:44 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 23:19:44 -参数 : []
2018-04-20 23:19:44 -耗时 : 0
2018-04-20 23:19:44 -返回值 : system/storageOutput/storageOutput
2018-04-20 23:19:44 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:19:44 -HTTP METHOD : GET
2018-04-20 23:19:44 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:19:44 -参数 : [{limit=10, offset=0}]
2018-04-20 23:19:44 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:19:44 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:19:44 -<==      Total: 0
2018-04-20 23:19:44 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:19:44 -==> Parameters: 
2018-04-20 23:19:44 -<==      Total: 1
2018-04-20 23:19:44 -耗时 : 12
2018-04-20 23:19:44 -返回值 : com.bootdo.common.utils.PageUtils@6cba274c
2018-04-20 23:19:45 -请求地址 : http://localhost/system/storageOutput/add
2018-04-20 23:19:45 -HTTP METHOD : GET
2018-04-20 23:19:45 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.add
2018-04-20 23:19:45 -参数 : []
2018-04-20 23:19:45 -耗时 : 0
2018-04-20 23:19:45 -返回值 : system/storageOutput/add
2018-04-20 23:20:03 -请求地址 : http://localhost/system/storageOutput/save
2018-04-20 23:20:03 -HTTP METHOD : POST
2018-04-20 23:20:03 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.save
2018-04-20 23:20:03 -参数 : [com.bootdo.system.domain.StorageOutputDO@4cbce36d]
2018-04-20 23:20:03 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:20:03 -==> Parameters: 李子(String), 0003(String)
2018-04-20 23:20:03 -<==      Total: 1
2018-04-20 23:20:03 -==>  Preparing: insert into t_storage_output ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:20:03 -==> Parameters: 李子(String), 0003(String), 5.0(Double), 50(Integer), 2018-04-20 23:20:03.174(Timestamp)
2018-04-20 23:20:03 -<==    Updates: 1
2018-04-20 23:20:03 -==>  Preparing: update t_storage SET `good_name` = ?, `good_number` = ?, `good_count` = ? where id = ? 
2018-04-20 23:20:03 -==> Parameters: 李子(String), 0003(String), 50(Integer), 1(Long)
2018-04-20 23:20:03 -<==    Updates: 1
2018-04-20 23:20:03 -耗时 : 527
2018-04-20 23:20:03 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:20:03 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:20:03 -HTTP METHOD : GET
2018-04-20 23:20:03 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:20:03 -参数 : [{limit=10, offset=0}]
2018-04-20 23:20:03 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:20:03 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:20:03 -<==      Total: 1
2018-04-20 23:20:03 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:20:03 -==> Parameters: 
2018-04-20 23:20:03 -<==      Total: 1
2018-04-20 23:20:03 -耗时 : 4
2018-04-20 23:20:03 -返回值 : com.bootdo.common.utils.PageUtils@3e69c4c0
2018-04-20 23:20:10 -请求地址 : http://localhost/system/storage
2018-04-20 23:20:10 -HTTP METHOD : GET
2018-04-20 23:20:10 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:20:10 -参数 : []
2018-04-20 23:20:10 -耗时 : 0
2018-04-20 23:20:10 -返回值 : system/storage/storage
2018-04-20 23:20:10 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:20:10 -HTTP METHOD : GET
2018-04-20 23:20:10 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:20:10 -参数 : [{limit=10, offset=0}]
2018-04-20 23:20:10 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:20:10 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:20:10 -<==      Total: 1
2018-04-20 23:20:10 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:20:10 -==> Parameters: 
2018-04-20 23:20:10 -<==      Total: 1
2018-04-20 23:20:10 -耗时 : 4
2018-04-20 23:20:10 -返回值 : com.bootdo.common.utils.PageUtils@2522789
2018-04-20 23:22:40 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:22:40 -HTTP METHOD : GET
2018-04-20 23:22:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:22:40 -参数 : []
2018-04-20 23:22:40 -耗时 : 0
2018-04-20 23:22:40 -返回值 : system/order/statistics
2018-04-20 23:22:40 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:22:40 -HTTP METHOD : GET
2018-04-20 23:22:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:22:40 -参数 : [{limit=10, offset=0}]
2018-04-20 23:22:40 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:22:40 -==> Parameters: 
2018-04-20 23:22:40 -<==      Total: 2
2018-04-20 23:22:40 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2018-04-20 23:22:40 -==> Parameters: 
2018-04-20 23:22:40 -<==      Total: 1
2018-04-20 23:22:40 -耗时 : 11
2018-04-20 23:22:40 -返回值 : com.bootdo.common.utils.PageUtils@741792d2
2018-04-20 23:22:44 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 23:22:44 -HTTP METHOD : GET
2018-04-20 23:22:44 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 23:22:44 -参数 : []
2018-04-20 23:22:44 -耗时 : 1
2018-04-20 23:22:44 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 23:22:45 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 23:22:45 -HTTP METHOD : GET
2018-04-20 23:22:45 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 23:22:45 -参数 : [{limit=10, offset=0}]
2018-04-20 23:22:45 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 23:22:45 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:22:45 -<==      Total: 2
2018-04-20 23:22:45 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 23:22:45 -==> Parameters: 
2018-04-20 23:22:45 -<==      Total: 1
2018-04-20 23:22:45 -耗时 : 25
2018-04-20 23:22:45 -返回值 : com.bootdo.common.utils.PageUtils@7133842e
2018-04-20 23:22:53 -请求地址 : http://localhost/system/good
2018-04-20 23:22:53 -HTTP METHOD : GET
2018-04-20 23:22:53 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:22:53 -参数 : []
2018-04-20 23:22:53 -耗时 : 1
2018-04-20 23:22:53 -返回值 : system/good/good
2018-04-20 23:22:53 -请求地址 : http://localhost/system/good/list
2018-04-20 23:22:53 -HTTP METHOD : GET
2018-04-20 23:22:53 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:22:53 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:22:53 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:22:53 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:22:53 -<==      Total: 3
2018-04-20 23:22:53 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:22:53 -==> Parameters: 
2018-04-20 23:22:53 -<==      Total: 1
2018-04-20 23:22:53 -耗时 : 4
2018-04-20 23:22:53 -返回值 : com.bootdo.common.utils.PageUtils@5ad3c7f8
2018-04-20 23:22:55 -请求地址 : http://localhost/system/storage
2018-04-20 23:22:55 -HTTP METHOD : GET
2018-04-20 23:22:55 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:22:55 -参数 : []
2018-04-20 23:22:55 -耗时 : 0
2018-04-20 23:22:55 -返回值 : system/storage/storage
2018-04-20 23:22:55 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:22:55 -HTTP METHOD : GET
2018-04-20 23:22:55 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:22:55 -参数 : [{limit=10, offset=0}]
2018-04-20 23:22:55 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:22:55 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:22:55 -<==      Total: 1
2018-04-20 23:22:55 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:22:55 -==> Parameters: 
2018-04-20 23:22:55 -<==      Total: 1
2018-04-20 23:22:55 -耗时 : 19
2018-04-20 23:22:55 -返回值 : com.bootdo.common.utils.PageUtils@240dd154
2018-04-20 23:22:56 -请求地址 : http://localhost/system/storageOutput
2018-04-20 23:22:56 -HTTP METHOD : GET
2018-04-20 23:22:56 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 23:22:56 -参数 : []
2018-04-20 23:22:56 -耗时 : 0
2018-04-20 23:22:56 -返回值 : system/storageOutput/storageOutput
2018-04-20 23:22:56 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:22:56 -HTTP METHOD : GET
2018-04-20 23:22:56 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:22:56 -参数 : [{limit=10, offset=0}]
2018-04-20 23:22:56 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:22:56 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:22:56 -<==      Total: 1
2018-04-20 23:22:56 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:22:56 -==> Parameters: 
2018-04-20 23:22:56 -<==      Total: 1
2018-04-20 23:22:56 -耗时 : 5
2018-04-20 23:22:56 -返回值 : com.bootdo.common.utils.PageUtils@715c59bd
2018-04-20 23:22:57 -请求地址 : http://localhost/system/storageInput
2018-04-20 23:22:57 -HTTP METHOD : GET
2018-04-20 23:22:57 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 23:22:57 -参数 : []
2018-04-20 23:22:57 -耗时 : 1
2018-04-20 23:22:57 -返回值 : system/storageInput/storageInput
2018-04-20 23:22:57 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:22:57 -HTTP METHOD : GET
2018-04-20 23:22:57 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:22:57 -参数 : [{limit=10, offset=0}]
2018-04-20 23:22:57 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:22:57 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:22:57 -<==      Total: 2
2018-04-20 23:22:57 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:22:57 -==> Parameters: 
2018-04-20 23:22:57 -<==      Total: 1
2018-04-20 23:22:57 -耗时 : 4
2018-04-20 23:22:57 -返回值 : com.bootdo.common.utils.PageUtils@255f1478
2018-04-20 23:22:59 -请求地址 : http://localhost/system/good/add
2018-04-20 23:22:59 -HTTP METHOD : GET
2018-04-20 23:22:59 -CLASS_METHOD : com.bootdo.system.controller.GoodController.add
2018-04-20 23:22:59 -参数 : []
2018-04-20 23:22:59 -耗时 : 1
2018-04-20 23:22:59 -返回值 : system/good/add
2018-04-20 23:23:36 -请求地址 : http://localhost/system/good/save
2018-04-20 23:23:36 -HTTP METHOD : POST
2018-04-20 23:23:36 -CLASS_METHOD : com.bootdo.system.controller.GoodController.save
2018-04-20 23:23:36 -参数 : [com.bootdo.system.domain.GoodDO@616b108]
2018-04-20 23:23:36 -==>  Preparing: insert into t_good ( `title`, `type`, `number`, `price`, `weight`, `place`, `img`, `imgmore`, `create_by`, `create_date`, `remark`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:23:36 -==> Parameters: 桃子(String), 水果(String), 0004(String), 10.0(Double), 2.0(Double), 龙泉(String), null, null, null, 2018-04-20 23:23:36.776(Timestamp), (String), 0(Integer)
2018-04-20 23:23:36 -<==    Updates: 1
2018-04-20 23:23:36 -==>  Preparing: insert into t_storage ( `good_name`, `good_number`, `good_count` ) values ( ?, ?, ? ) 
2018-04-20 23:23:36 -==> Parameters: 桃子(String), 0004(String), 0(Integer)
2018-04-20 23:23:37 -<==    Updates: 1
2018-04-20 23:23:37 -耗时 : 365
2018-04-20 23:23:37 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:23:37 -请求地址 : http://localhost/system/good/list
2018-04-20 23:23:37 -HTTP METHOD : GET
2018-04-20 23:23:37 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:23:37 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:23:37 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:23:37 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:23:37 -<==      Total: 4
2018-04-20 23:23:37 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:23:37 -==> Parameters: 
2018-04-20 23:23:37 -<==      Total: 1
2018-04-20 23:23:37 -耗时 : 5
2018-04-20 23:23:37 -返回值 : com.bootdo.common.utils.PageUtils@2997b79d
2018-04-20 23:23:46 -请求地址 : http://localhost/system/storage
2018-04-20 23:23:46 -HTTP METHOD : GET
2018-04-20 23:23:46 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:23:46 -参数 : []
2018-04-20 23:23:46 -耗时 : 0
2018-04-20 23:23:46 -返回值 : system/storage/storage
2018-04-20 23:23:46 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:23:46 -HTTP METHOD : GET
2018-04-20 23:23:46 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:23:46 -参数 : [{limit=10, offset=0}]
2018-04-20 23:23:46 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:23:46 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:23:46 -<==      Total: 2
2018-04-20 23:23:46 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:23:46 -==> Parameters: 
2018-04-20 23:23:46 -<==      Total: 1
2018-04-20 23:23:46 -耗时 : 4
2018-04-20 23:23:46 -返回值 : com.bootdo.common.utils.PageUtils@6005a9bc
2018-04-20 23:23:53 -请求地址 : http://localhost/system/storageInput
2018-04-20 23:23:53 -HTTP METHOD : GET
2018-04-20 23:23:53 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 23:23:53 -参数 : []
2018-04-20 23:23:53 -耗时 : 0
2018-04-20 23:23:53 -返回值 : system/storageInput/storageInput
2018-04-20 23:23:53 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:23:53 -HTTP METHOD : GET
2018-04-20 23:23:53 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:23:53 -参数 : [{limit=10, offset=0}]
2018-04-20 23:23:53 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:23:53 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:23:53 -<==      Total: 2
2018-04-20 23:23:53 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:23:53 -==> Parameters: 
2018-04-20 23:23:53 -<==      Total: 1
2018-04-20 23:23:53 -耗时 : 7
2018-04-20 23:23:53 -返回值 : com.bootdo.common.utils.PageUtils@aa3dc2b
2018-04-20 23:23:55 -请求地址 : http://localhost/system/storageInput/add
2018-04-20 23:23:55 -HTTP METHOD : GET
2018-04-20 23:23:55 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.add
2018-04-20 23:23:55 -参数 : []
2018-04-20 23:23:55 -耗时 : 0
2018-04-20 23:23:55 -返回值 : system/storageInput/add
2018-04-20 23:24:08 -请求地址 : http://localhost/system/storageInput/save
2018-04-20 23:24:08 -HTTP METHOD : POST
2018-04-20 23:24:08 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.save
2018-04-20 23:24:08 -参数 : [com.bootdo.system.domain.StorageInputDO@67e68c97]
2018-04-20 23:24:08 -==>  Preparing: insert into t_storage_input ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:24:08 -==> Parameters: 桃子(String), 0004(String), 10.0(Double), 1000(Integer), 2018-04-20 23:24:08.913(Timestamp)
2018-04-20 23:24:09 -<==    Updates: 1
2018-04-20 23:24:09 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:24:09 -==> Parameters: 桃子(String), 0004(String)
2018-04-20 23:24:09 -<==      Total: 1
2018-04-20 23:24:09 -==>  Preparing: update t_storage SET `good_name` = ?, `good_number` = ?, `good_count` = ? where id = ? 
2018-04-20 23:24:09 -==> Parameters: 桃子(String), 0004(String), 1000(Integer), 2(Long)
2018-04-20 23:24:09 -<==    Updates: 1
2018-04-20 23:24:09 -耗时 : 276
2018-04-20 23:24:09 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:24:09 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:24:09 -HTTP METHOD : GET
2018-04-20 23:24:09 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:24:09 -参数 : [{limit=10, offset=0}]
2018-04-20 23:24:09 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:24:09 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:24:09 -<==      Total: 3
2018-04-20 23:24:09 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:24:09 -==> Parameters: 
2018-04-20 23:24:09 -<==      Total: 1
2018-04-20 23:24:09 -耗时 : 5
2018-04-20 23:24:09 -返回值 : com.bootdo.common.utils.PageUtils@837cb37
2018-04-20 23:24:12 -请求地址 : http://localhost/system/storage
2018-04-20 23:24:12 -HTTP METHOD : GET
2018-04-20 23:24:12 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:24:12 -参数 : []
2018-04-20 23:24:12 -耗时 : 1
2018-04-20 23:24:12 -返回值 : system/storage/storage
2018-04-20 23:24:12 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:24:12 -HTTP METHOD : GET
2018-04-20 23:24:12 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:24:12 -参数 : [{limit=10, offset=0}]
2018-04-20 23:24:12 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:24:12 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:24:12 -<==      Total: 2
2018-04-20 23:24:12 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:24:12 -==> Parameters: 
2018-04-20 23:24:12 -<==      Total: 1
2018-04-20 23:24:12 -耗时 : 3
2018-04-20 23:24:12 -返回值 : com.bootdo.common.utils.PageUtils@57f77382
2018-04-20 23:24:16 -请求地址 : http://localhost/system/storageOutput
2018-04-20 23:24:16 -HTTP METHOD : GET
2018-04-20 23:24:16 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 23:24:16 -参数 : []
2018-04-20 23:24:16 -耗时 : 0
2018-04-20 23:24:16 -返回值 : system/storageOutput/storageOutput
2018-04-20 23:24:16 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:24:16 -HTTP METHOD : GET
2018-04-20 23:24:16 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:24:16 -参数 : [{limit=10, offset=0}]
2018-04-20 23:24:16 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:24:16 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:24:16 -<==      Total: 1
2018-04-20 23:24:16 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:24:16 -==> Parameters: 
2018-04-20 23:24:16 -<==      Total: 1
2018-04-20 23:24:16 -耗时 : 4
2018-04-20 23:24:16 -返回值 : com.bootdo.common.utils.PageUtils@2147e123
2018-04-20 23:24:18 -请求地址 : http://localhost/system/storageOutput/add
2018-04-20 23:24:18 -HTTP METHOD : GET
2018-04-20 23:24:18 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.add
2018-04-20 23:24:18 -参数 : []
2018-04-20 23:24:18 -耗时 : 1
2018-04-20 23:24:18 -返回值 : system/storageOutput/add
2018-04-20 23:24:36 -请求地址 : http://localhost/system/storageOutput/save
2018-04-20 23:24:36 -HTTP METHOD : POST
2018-04-20 23:24:36 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.save
2018-04-20 23:24:36 -参数 : [com.bootdo.system.domain.StorageOutputDO@78713929]
2018-04-20 23:24:36 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:24:36 -==> Parameters: 桃子(String), 0004(String)
2018-04-20 23:24:36 -<==      Total: 1
2018-04-20 23:24:36 -==>  Preparing: insert into t_storage_output ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:24:36 -==> Parameters: 桃子(String), 0004(String), 10.0(Double), 800(Integer), 2018-04-20 23:24:36.523(Timestamp)
2018-04-20 23:24:36 -<==    Updates: 1
2018-04-20 23:24:36 -==>  Preparing: update t_storage SET `good_name` = ?, `good_number` = ?, `good_count` = ? where id = ? 
2018-04-20 23:24:36 -==> Parameters: 桃子(String), 0004(String), 200(Integer), 2(Long)
2018-04-20 23:24:36 -<==    Updates: 1
2018-04-20 23:24:36 -耗时 : 446
2018-04-20 23:24:36 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:24:36 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:24:36 -HTTP METHOD : GET
2018-04-20 23:24:36 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:24:36 -参数 : [{limit=10, offset=0}]
2018-04-20 23:24:36 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:24:36 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:24:36 -<==      Total: 2
2018-04-20 23:24:36 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:24:36 -==> Parameters: 
2018-04-20 23:24:36 -<==      Total: 1
2018-04-20 23:24:36 -耗时 : 4
2018-04-20 23:24:36 -返回值 : com.bootdo.common.utils.PageUtils@2fd98e86
2018-04-20 23:24:41 -请求地址 : http://localhost/system/storage
2018-04-20 23:24:41 -HTTP METHOD : GET
2018-04-20 23:24:41 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:24:41 -参数 : []
2018-04-20 23:24:41 -耗时 : 1
2018-04-20 23:24:41 -返回值 : system/storage/storage
2018-04-20 23:24:41 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:24:41 -HTTP METHOD : GET
2018-04-20 23:24:41 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:24:41 -参数 : [{limit=10, offset=0}]
2018-04-20 23:24:41 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:24:41 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:24:41 -<==      Total: 2
2018-04-20 23:24:41 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:24:41 -==> Parameters: 
2018-04-20 23:24:41 -<==      Total: 1
2018-04-20 23:24:41 -耗时 : 5
2018-04-20 23:24:41 -返回值 : com.bootdo.common.utils.PageUtils@53721f09
2018-04-20 23:24:53 -请求地址 : http://localhost/
2018-04-20 23:24:53 -HTTP METHOD : GET
2018-04-20 23:24:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:24:53 -参数 : [{}]
2018-04-20 23:24:53 -耗时 : 0
2018-04-20 23:24:53 -返回值 : redirect:/login
2018-04-20 23:24:53 -请求地址 : http://localhost/login
2018-04-20 23:24:53 -HTTP METHOD : GET
2018-04-20 23:24:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:24:53 -参数 : []
2018-04-20 23:24:53 -耗时 : 1
2018-04-20 23:24:53 -返回值 : login
2018-04-20 23:24:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:24:57 -==> Parameters: test(String)
2018-04-20 23:24:57 -<==      Total: 1
2018-04-20 23:24:57 -请求地址 : http://localhost/login
2018-04-20 23:24:57 -HTTP METHOD : POST
2018-04-20 23:24:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:24:57 -参数 : [test, 123456]
2018-04-20 23:24:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:24:57 -==> Parameters: test(String)
2018-04-20 23:24:57 -<==      Total: 1
2018-04-20 23:24:57 -耗时 : 4
2018-04-20 23:24:57 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:24:57 -请求地址 : http://localhost/index
2018-04-20 23:24:57 -HTTP METHOD : GET
2018-04-20 23:24:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:24:57 -参数 : [{}]
2018-04-20 23:24:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:24:57 -==> Parameters: 2(Long)
2018-04-20 23:24:57 -<==      Total: 8
2018-04-20 23:24:57 -耗时 : 11
2018-04-20 23:24:57 -返回值 : index_v1
2018-04-20 23:24:58 -请求地址 : http://localhost/main
2018-04-20 23:24:58 -HTTP METHOD : GET
2018-04-20 23:24:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:24:58 -参数 : []
2018-04-20 23:24:58 -耗时 : 0
2018-04-20 23:24:58 -返回值 : main
2018-04-20 23:24:58 -请求地址 : http://localhost/main
2018-04-20 23:24:58 -HTTP METHOD : GET
2018-04-20 23:24:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:24:58 -参数 : []
2018-04-20 23:24:58 -耗时 : 0
2018-04-20 23:24:58 -返回值 : main
2018-04-20 23:25:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:25:00 -==> Parameters: 2(Long)
2018-04-20 23:25:00 -<==      Total: 9
2018-04-20 23:25:00 -请求地址 : http://localhost/system/logistics
2018-04-20 23:25:00 -HTTP METHOD : GET
2018-04-20 23:25:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 23:25:00 -参数 : []
2018-04-20 23:25:00 -耗时 : 0
2018-04-20 23:25:00 -返回值 : system/logistics/logistics
2018-04-20 23:25:00 -请求地址 : http://localhost/system/logistics/list
2018-04-20 23:25:00 -HTTP METHOD : GET
2018-04-20 23:25:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 23:25:00 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 23:25:00 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 23:25:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:25:00 -<==      Total: 2
2018-04-20 23:25:00 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 23:25:00 -==> Parameters: 
2018-04-20 23:25:00 -<==      Total: 1
2018-04-20 23:25:00 -耗时 : 13
2018-04-20 23:25:00 -返回值 : com.bootdo.common.utils.PageUtils@7d62d73f
2018-04-20 23:25:04 -请求地址 : http://localhost/system/car
2018-04-20 23:25:04 -HTTP METHOD : GET
2018-04-20 23:25:04 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:25:04 -参数 : []
2018-04-20 23:25:04 -耗时 : 1
2018-04-20 23:25:04 -返回值 : system/car/car
2018-04-20 23:25:04 -请求地址 : http://localhost/system/car/list
2018-04-20 23:25:04 -HTTP METHOD : GET
2018-04-20 23:25:04 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:25:04 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:25:04 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-20 23:25:04 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:25:04 -<==      Total: 1
2018-04-20 23:25:04 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:25:04 -==> Parameters: 
2018-04-20 23:25:04 -<==      Total: 1
2018-04-20 23:25:04 -耗时 : 21
2018-04-20 23:25:04 -返回值 : com.bootdo.common.utils.PageUtils@168cee6d
2018-04-20 23:25:07 -请求地址 : http://localhost/system/good
2018-04-20 23:25:07 -HTTP METHOD : GET
2018-04-20 23:25:07 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:25:07 -参数 : []
2018-04-20 23:25:07 -耗时 : 0
2018-04-20 23:25:07 -返回值 : system/good/good
2018-04-20 23:25:07 -请求地址 : http://localhost/system/good/list
2018-04-20 23:25:07 -HTTP METHOD : GET
2018-04-20 23:25:07 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:25:07 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:25:07 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:25:07 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:25:07 -<==      Total: 4
2018-04-20 23:25:07 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:25:07 -==> Parameters: 
2018-04-20 23:25:07 -<==      Total: 1
2018-04-20 23:25:07 -耗时 : 6
2018-04-20 23:25:07 -返回值 : com.bootdo.common.utils.PageUtils@1c0493ee
2018-04-20 23:25:10 -请求地址 : http://localhost/system/order/
2018-04-20 23:25:10 -HTTP METHOD : GET
2018-04-20 23:25:10 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:25:10 -参数 : []
2018-04-20 23:25:10 -耗时 : 0
2018-04-20 23:25:10 -返回值 : system/order/order
2018-04-20 23:25:11 -请求地址 : http://localhost/system/order/list
2018-04-20 23:25:11 -HTTP METHOD : GET
2018-04-20 23:25:11 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:25:11 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:25:11 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:25:11 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:25:11 -<==      Total: 3
2018-04-20 23:25:11 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:25:11 -==> Parameters: 
2018-04-20 23:25:11 -<==      Total: 1
2018-04-20 23:25:11 -耗时 : 7
2018-04-20 23:25:11 -返回值 : com.bootdo.common.utils.PageUtils@1c34faea
2018-04-20 23:25:14 -请求地址 : http://localhost/
2018-04-20 23:25:14 -HTTP METHOD : GET
2018-04-20 23:25:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:25:14 -参数 : [{}]
2018-04-20 23:25:14 -耗时 : 0
2018-04-20 23:25:14 -返回值 : redirect:/login
2018-04-20 23:25:14 -请求地址 : http://localhost/login
2018-04-20 23:25:14 -HTTP METHOD : GET
2018-04-20 23:25:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:25:14 -参数 : []
2018-04-20 23:25:14 -耗时 : 0
2018-04-20 23:25:14 -返回值 : login
2018-04-20 23:25:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:25:16 -==> Parameters: admin(String)
2018-04-20 23:25:16 -<==      Total: 1
2018-04-20 23:25:16 -请求地址 : http://localhost/login
2018-04-20 23:25:16 -HTTP METHOD : POST
2018-04-20 23:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:25:16 -参数 : [admin, 123456]
2018-04-20 23:25:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:25:16 -==> Parameters: admin(String)
2018-04-20 23:25:16 -<==      Total: 1
2018-04-20 23:25:16 -耗时 : 3
2018-04-20 23:25:16 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:25:16 -请求地址 : http://localhost/index
2018-04-20 23:25:16 -HTTP METHOD : GET
2018-04-20 23:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:25:16 -参数 : [{}]
2018-04-20 23:25:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:25:16 -==> Parameters: 1(Long)
2018-04-20 23:25:16 -<==      Total: 18
2018-04-20 23:25:16 -耗时 : 7
2018-04-20 23:25:16 -返回值 : index_v1
2018-04-20 23:25:16 -请求地址 : http://localhost/main
2018-04-20 23:25:16 -HTTP METHOD : GET
2018-04-20 23:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:25:16 -参数 : []
2018-04-20 23:25:16 -耗时 : 0
2018-04-20 23:25:16 -返回值 : main
2018-04-20 23:25:16 -请求地址 : http://localhost/main
2018-04-20 23:25:16 -HTTP METHOD : GET
2018-04-20 23:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:25:16 -参数 : []
2018-04-20 23:25:16 -耗时 : 0
2018-04-20 23:25:16 -返回值 : main
2018-04-20 23:25:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:25:19 -==> Parameters: 1(Long)
2018-04-20 23:25:19 -<==      Total: 53
2018-04-20 23:25:19 -请求地址 : http://localhost/system/car
2018-04-20 23:25:19 -HTTP METHOD : GET
2018-04-20 23:25:19 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:25:19 -参数 : []
2018-04-20 23:25:19 -耗时 : 1
2018-04-20 23:25:19 -返回值 : system/car/car
2018-04-20 23:25:19 -请求地址 : http://localhost/system/car/list
2018-04-20 23:25:19 -HTTP METHOD : GET
2018-04-20 23:25:19 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:25:19 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:25:19 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car order by id desc limit ?, ? 
2018-04-20 23:25:19 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:25:19 -<==      Total: 1
2018-04-20 23:25:19 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:25:19 -==> Parameters: 
2018-04-20 23:25:19 -<==      Total: 1
2018-04-20 23:25:19 -耗时 : 4
2018-04-20 23:25:19 -返回值 : com.bootdo.common.utils.PageUtils@24454973
2018-04-20 23:25:21 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:25:21 -HTTP METHOD : GET
2018-04-20 23:25:21 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:25:21 -参数 : [1, {}]
2018-04-20 23:25:21 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight` from t_car where id = ? 
2018-04-20 23:25:21 -==> Parameters: 1(Long)
2018-04-20 23:25:21 -<==      Total: 1
2018-04-20 23:25:21 -耗时 : 3
2018-04-20 23:25:21 -返回值 : system/car/edit
2018-04-20 23:25:21 -[THYMELEAF][http-nio-80-exec-8] Exception processing template "system/car/edit": Exception evaluating SpringEL expression: "car.status" (system/car/edit)
2018-04-20 23:25:21 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "car.status" (system/car/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'status' cannot be found on object of type 'com.bootdo.system.domain.CarDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2018-04-20 23:28:09 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 8888 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:28:09 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:28:09 -The following profiles are active: dev
2018-04-20 23:28:09 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:28:09 CST 2018]; root of context hierarchy
2018-04-20 23:28:09 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:28:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:28:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c18881aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b3e1b051] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:28:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:28:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:28:12 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:28:12 -Starting service [Tomcat]
2018-04-20 23:28:12 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:28:13 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:28:13 -Root WebApplicationContext: initialization completed in 3324 ms
2018-04-20 23:28:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:28:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:28:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:28:13 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:28:13 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:28:13 -Filter xssFilter was not registered (disabled)
2018-04-20 23:28:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:28:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:28:13 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:28:13 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:28:13 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:28:09 CST 2018]; root of context hierarchy
2018-04-20 23:28:14 -{dataSource-1} inited
2018-04-20 23:28:15 -Using default implementation for ThreadExecutor
2018-04-20 23:28:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:28:15 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:28:15 -RAMJobStore initialized.
2018-04-20 23:28:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:28:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:28:15 -Quartz scheduler version: 2.2.1
2018-04-20 23:28:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@35d88a54
2018-04-20 23:28:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:28:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:28:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:28:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:28:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:28:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:28:16 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:28:16 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:28:16 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:28:16 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:28:16 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:28:16 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:28:16 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:28:16 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:28:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:28:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:28:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:28:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:28:16 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:28:16 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:28:16 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:28:16 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:28:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:28:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:28:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:28:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:28:16 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:28:16 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:28:16 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:28:16 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:28:16 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:28:16 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:28:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:28:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:28:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:28:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:28:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:28:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:28:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:28:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:28:16 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:28:16 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:28:16 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:28:16 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:28:16 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:28:16 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:28:16 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:28:16 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:28:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:28:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:28:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:28:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:28:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:28:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:28:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:28:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:28:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:28:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:28:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:28:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:28:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:28:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:28:17 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:28:09 CST 2018]; root of context hierarchy
2018-04-20 23:28:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:28:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:28:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:28:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:28:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:28:19 -

Using default security password: 27be6776-fb4e-4da4-9399-c73a4bed54b1

2018-04-20 23:28:19 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:28:19 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@2a5ed225, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a525f88, org.springframework.security.web.context.SecurityContextPersistenceFilter@37a939bc, org.springframework.security.web.header.HeaderWriterFilter@5e557671, org.springframework.security.web.csrf.CsrfFilter@7be1e187, org.springframework.security.web.authentication.logout.LogoutFilter@10466c55, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ab3f611, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6442cf3e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1cf4d454, org.springframework.security.web.session.SessionManagementFilter@7298c2d9, org.springframework.security.web.access.ExceptionTranslationFilter@10280879]
2018-04-20 23:28:20 -Registering beans for JMX exposure on startup
2018-04-20 23:28:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:28:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:28:20 -Starting beans in phase 2147483647
2018-04-20 23:28:20 -Context refreshed
2018-04-20 23:28:20 -Found 1 custom documentation plugin(s)
2018-04-20 23:28:20 -Scanning for api listing references
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:28:20 -Generating unique operation named: editUsingGET_1
2018-04-20 23:28:20 -Generating unique operation named: listUsingGET_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:28:20 -Generating unique operation named: addUsingGET_1
2018-04-20 23:28:20 -Generating unique operation named: editUsingGET_2
2018-04-20 23:28:20 -Generating unique operation named: listUsingGET_2
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:28:20 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:28:20 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:28:20 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:28:20 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:28:20 -Generating unique operation named: addUsingGET_2
2018-04-20 23:28:20 -Generating unique operation named: editUsingGET_3
2018-04-20 23:28:20 -Generating unique operation named: listUsingGET_3
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:28:20 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:28:20 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:28:20 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:28:20 -Generating unique operation named: addUsingGET_3
2018-04-20 23:28:20 -Generating unique operation named: editUsingGET_4
2018-04-20 23:28:20 -Generating unique operation named: listUsingGET_4
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:28:20 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:28:20 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:28:20 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_4
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_5
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_5
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:28:21 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_5
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_6
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_6
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:28:21 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:28:21 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:28:21 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:28:21 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:28:21 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_6
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_7
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_7
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:28:21 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_7
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_8
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_8
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_9
2018-04-20 23:28:21 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_8
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_9
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_10
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:28:21 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:28:21 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_9
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_10
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_11
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:28:21 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:28:21 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_10
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_11
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_12
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:28:21 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:28:21 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:28:21 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:28:21 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:28:21 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:28:21 -Generating unique operation named: addUsingGET_11
2018-04-20 23:28:21 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:28:21 -Generating unique operation named: editUsingGET_12
2018-04-20 23:28:21 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:28:21 -Generating unique operation named: listUsingGET_13
2018-04-20 23:28:21 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:28:21 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:28:21 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:28:21 -Generating unique operation named: userUsingGET_1
2018-04-20 23:28:21 -Starting Quartz Scheduler now
2018-04-20 23:28:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:28:21 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:28:21 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:28:21 -Using a shared selector for servlet write/read
2018-04-20 23:28:21 -Tomcat started on port(s): 80 (http)
2018-04-20 23:28:21 -Started BootdoApplication in 12.639 seconds (JVM running for 13.088)
2018-04-20 23:28:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:28:35 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:28:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-04-20 23:28:35 -Enabling session validation scheduler...
2018-04-20 23:28:35 -请求地址 : http://localhost/login;JSESSIONID=dbda65a7-a566-46cb-83ba-2250522585c7
2018-04-20 23:28:35 -HTTP METHOD : GET
2018-04-20 23:28:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:28:35 -参数 : []
2018-04-20 23:28:35 -耗时 : 2
2018-04-20 23:28:35 -返回值 : login
2018-04-20 23:28:35 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:28:35 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:28:35 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:28:35 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:28:35 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:28:35 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:28:35 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:28:36 -请求地址 : http://localhost/login
2018-04-20 23:28:36 -HTTP METHOD : GET
2018-04-20 23:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:28:36 -参数 : []
2018-04-20 23:28:36 -耗时 : 1
2018-04-20 23:28:36 -返回值 : login
2018-04-20 23:28:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:28:37 -==> Parameters: admin(String)
2018-04-20 23:28:37 -<==      Total: 1
2018-04-20 23:28:37 -请求地址 : http://localhost/login
2018-04-20 23:28:37 -HTTP METHOD : POST
2018-04-20 23:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:28:37 -参数 : [admin, 123456]
2018-04-20 23:28:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:28:37 -==> Parameters: admin(String)
2018-04-20 23:28:37 -<==      Total: 1
2018-04-20 23:28:37 -耗时 : 9
2018-04-20 23:28:37 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:28:37 -请求地址 : http://localhost/index
2018-04-20 23:28:37 -HTTP METHOD : GET
2018-04-20 23:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:28:37 -参数 : [{}]
2018-04-20 23:28:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:28:37 -==> Parameters: 1(Long)
2018-04-20 23:28:37 -<==      Total: 18
2018-04-20 23:28:37 -耗时 : 50
2018-04-20 23:28:37 -返回值 : index_v1
2018-04-20 23:28:37 -请求地址 : http://localhost/main
2018-04-20 23:28:37 -HTTP METHOD : GET
2018-04-20 23:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:28:37 -参数 : []
2018-04-20 23:28:37 -耗时 : 0
2018-04-20 23:28:37 -返回值 : main
2018-04-20 23:28:37 -请求地址 : http://localhost/main
2018-04-20 23:28:37 -HTTP METHOD : GET
2018-04-20 23:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:28:37 -参数 : []
2018-04-20 23:28:37 -耗时 : 1
2018-04-20 23:28:37 -返回值 : main
2018-04-20 23:28:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:28:39 -==> Parameters: 1(Long)
2018-04-20 23:28:39 -<==      Total: 53
2018-04-20 23:28:39 -请求地址 : http://localhost/system/car
2018-04-20 23:28:39 -HTTP METHOD : GET
2018-04-20 23:28:39 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:28:39 -参数 : []
2018-04-20 23:28:39 -耗时 : 0
2018-04-20 23:28:39 -返回值 : system/car/car
2018-04-20 23:28:39 -请求地址 : http://localhost/system/car/list
2018-04-20 23:28:39 -HTTP METHOD : GET
2018-04-20 23:28:39 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:28:39 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:28:39 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,'status' from t_car order by id desc limit ?, ? 
2018-04-20 23:28:39 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:28:39 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-04-20 23:28:39 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-04-20 23:28:39 -Error attempting to get column 'status' from result set.  Cause: java.sql.SQLException: Invalid value for getInt() - 'status'
; SQL []; Invalid value for getInt() - 'status'; nested exception is java.sql.SQLException: Invalid value for getInt() - 'status'
org.springframework.dao.TransientDataAccessResourceException: Error attempting to get column 'status' from result set.  Cause: java.sql.SQLException: Invalid value for getInt() - 'status'
; SQL []; Invalid value for getInt() - 'status'; nested exception is java.sql.SQLException: Invalid value for getInt() - 'status'
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:108)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy91.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy97.list(Unknown Source)
	at com.bootdo.system.service.impl.CarServiceImpl.list(CarServiceImpl.java:27)
	at com.bootdo.system.controller.CarController.list(CarController.java:49)
	at com.bootdo.system.controller.CarController$$FastClassBySpringCGLIB$$8d880099.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.CarController$$EnhancerBySpringCGLIB$$dcdc1c75.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Invalid value for getInt() - 'status'
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ResultSetImpl.getInt(ResultSetImpl.java:2512)
	at com.mysql.jdbc.ResultSetImpl.getInt(ResultSetImpl.java:2567)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getInt(FilterChainImpl.java:843)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getInt(FilterAdapter.java:1622)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getInt(FilterChainImpl.java:841)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getInt(FilterAdapter.java:1622)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getInt(FilterChainImpl.java:841)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getInt(FilterAdapter.java:1622)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getInt(FilterChainImpl.java:841)
	at com.alibaba.druid.proxy.jdbc.ResultSetProxyImpl.getInt(ResultSetProxyImpl.java:493)
	at com.alibaba.druid.pool.DruidPooledResultSet.getInt(DruidPooledResultSet.java:293)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ResultSetLogger.invoke(ResultSetLogger.java:68)
	at com.sun.proxy.$Proxy130.getInt(Unknown Source)
	at org.apache.ibatis.type.IntegerTypeHandler.getNullableResult(IntegerTypeHandler.java:37)
	at org.apache.ibatis.type.IntegerTypeHandler.getNullableResult(IntegerTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyAutomaticMappings(DefaultResultSetHandler.java:512)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:393)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:347)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:322)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:295)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:192)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 111 common frames omitted
2018-04-20 23:30:28 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 8656 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:30:28 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:30:28 -The following profiles are active: dev
2018-04-20 23:30:28 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:30:28 CST 2018]; root of context hierarchy
2018-04-20 23:30:28 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:30:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:30:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e3bfc43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$40952aea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:30:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:30:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:30:31 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:30:31 -Starting service [Tomcat]
2018-04-20 23:30:31 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:30:31 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:30:31 -Root WebApplicationContext: initialization completed in 3297 ms
2018-04-20 23:30:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:30:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:30:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:30:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:30:32 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:30:32 -Filter xssFilter was not registered (disabled)
2018-04-20 23:30:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:30:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:30:32 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:30:32 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:30:32 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:30:28 CST 2018]; root of context hierarchy
2018-04-20 23:30:32 -{dataSource-1} inited
2018-04-20 23:30:33 -Using default implementation for ThreadExecutor
2018-04-20 23:30:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:30:33 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:30:33 -RAMJobStore initialized.
2018-04-20 23:30:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:30:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:30:33 -Quartz scheduler version: 2.2.1
2018-04-20 23:30:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@57f1a1de
2018-04-20 23:30:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:30:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:30:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:30:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:30:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:30:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:30:35 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:30:35 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:30:35 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:30:35 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:30:35 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:30:35 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:30:35 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:30:35 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:30:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:30:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:30:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:30:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:30:35 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:30:35 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:30:35 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:30:35 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:30:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:30:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:30:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:30:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:30:35 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:30:35 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:30:35 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:30:35 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:30:35 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:30:35 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:30:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:30:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:30:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:30:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:30:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:30:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:30:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:30:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:30:35 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:30:35 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:30:35 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:30:35 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:30:35 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:30:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:30:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:30:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:30:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:30:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:30:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:30:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:30:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:30:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:30:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:30:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:30:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:30:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:30:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:30:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:30:36 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:30:28 CST 2018]; root of context hierarchy
2018-04-20 23:30:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:30:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:30:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:30:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:30:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:30:37 -

Using default security password: 43fe9518-3b5d-4cc8-a1cb-acff8c5934c6

2018-04-20 23:30:37 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:30:37 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@71c91121, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@584f4ca5, org.springframework.security.web.context.SecurityContextPersistenceFilter@66b3eab0, org.springframework.security.web.header.HeaderWriterFilter@4f3e65f4, org.springframework.security.web.csrf.CsrfFilter@47393345, org.springframework.security.web.authentication.logout.LogoutFilter@7d65c0ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d1f9ec3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@727e61ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@568fd3de, org.springframework.security.web.session.SessionManagementFilter@3fe11091, org.springframework.security.web.access.ExceptionTranslationFilter@49ea4b65]
2018-04-20 23:30:38 -Registering beans for JMX exposure on startup
2018-04-20 23:30:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:30:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:30:38 -Starting beans in phase 2147483647
2018-04-20 23:30:38 -Context refreshed
2018-04-20 23:30:38 -Found 1 custom documentation plugin(s)
2018-04-20 23:30:38 -Scanning for api listing references
2018-04-20 23:30:38 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_2
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_2
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:30:39 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_2
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_3
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_3
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:30:39 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_3
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_4
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_4
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_4
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_5
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_5
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:30:39 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_5
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_6
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_6
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:30:39 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_6
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_7
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_7
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_7
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_8
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_8
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_9
2018-04-20 23:30:39 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_8
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_9
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_10
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_9
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_10
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_11
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_10
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_11
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_12
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:30:39 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:30:39 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:30:39 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:30:39 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:30:39 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:30:39 -Generating unique operation named: addUsingGET_11
2018-04-20 23:30:39 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:30:39 -Generating unique operation named: editUsingGET_12
2018-04-20 23:30:39 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:30:39 -Generating unique operation named: listUsingGET_13
2018-04-20 23:30:39 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:30:39 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:30:39 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:30:39 -Generating unique operation named: userUsingGET_1
2018-04-20 23:30:39 -Starting Quartz Scheduler now
2018-04-20 23:30:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:30:39 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:30:39 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:30:39 -Using a shared selector for servlet write/read
2018-04-20 23:30:39 -Tomcat started on port(s): 80 (http)
2018-04-20 23:30:39 -Started BootdoApplication in 12.32 seconds (JVM running for 12.772)
2018-04-20 23:30:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:30:43 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:30:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-04-20 23:30:43 -Enabling session validation scheduler...
2018-04-20 23:30:43 -请求地址 : http://localhost/login;JSESSIONID=5f3a9c1b-7ed3-46c5-95ac-7340520f609d
2018-04-20 23:30:43 -HTTP METHOD : GET
2018-04-20 23:30:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:30:43 -参数 : []
2018-04-20 23:30:43 -耗时 : 3
2018-04-20 23:30:43 -返回值 : login
2018-04-20 23:30:43 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:30:43 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:30:43 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:30:43 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:30:43 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:30:43 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:30:43 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:30:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:30:45 -==> Parameters: admin(String)
2018-04-20 23:30:45 -<==      Total: 1
2018-04-20 23:30:45 -请求地址 : http://localhost/login
2018-04-20 23:30:45 -HTTP METHOD : POST
2018-04-20 23:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:30:45 -参数 : [admin, 123456]
2018-04-20 23:30:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:30:45 -==> Parameters: admin(String)
2018-04-20 23:30:45 -<==      Total: 1
2018-04-20 23:30:45 -耗时 : 12
2018-04-20 23:30:45 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:30:45 -请求地址 : http://localhost/index
2018-04-20 23:30:45 -HTTP METHOD : GET
2018-04-20 23:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:30:45 -参数 : [{}]
2018-04-20 23:30:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:30:45 -==> Parameters: 1(Long)
2018-04-20 23:30:45 -<==      Total: 18
2018-04-20 23:30:45 -耗时 : 43
2018-04-20 23:30:45 -返回值 : index_v1
2018-04-20 23:30:45 -请求地址 : http://localhost/main
2018-04-20 23:30:45 -HTTP METHOD : GET
2018-04-20 23:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:30:45 -参数 : []
2018-04-20 23:30:45 -耗时 : 0
2018-04-20 23:30:45 -返回值 : main
2018-04-20 23:30:45 -请求地址 : http://localhost/main
2018-04-20 23:30:45 -HTTP METHOD : GET
2018-04-20 23:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:30:45 -参数 : []
2018-04-20 23:30:45 -耗时 : 0
2018-04-20 23:30:45 -返回值 : main
2018-04-20 23:30:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:30:48 -==> Parameters: 1(Long)
2018-04-20 23:30:48 -<==      Total: 53
2018-04-20 23:30:48 -请求地址 : http://localhost/system/car
2018-04-20 23:30:48 -HTTP METHOD : GET
2018-04-20 23:30:48 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:30:48 -参数 : []
2018-04-20 23:30:48 -耗时 : 0
2018-04-20 23:30:48 -返回值 : system/car/car
2018-04-20 23:30:48 -请求地址 : http://localhost/system/car/list
2018-04-20 23:30:48 -HTTP METHOD : GET
2018-04-20 23:30:48 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:30:48 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:30:48 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:30:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:30:48 -<==      Total: 1
2018-04-20 23:30:48 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:30:48 -==> Parameters: 
2018-04-20 23:30:48 -<==      Total: 1
2018-04-20 23:30:48 -耗时 : 23
2018-04-20 23:30:48 -返回值 : com.bootdo.common.utils.PageUtils@1432fcec
2018-04-20 23:30:50 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:30:50 -HTTP METHOD : GET
2018-04-20 23:30:50 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:30:50 -参数 : [1, {}]
2018-04-20 23:30:50 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:30:50 -==> Parameters: 1(Long)
2018-04-20 23:30:50 -<==      Total: 1
2018-04-20 23:30:50 -耗时 : 4
2018-04-20 23:30:50 -返回值 : system/car/edit
2018-04-20 23:30:53 -请求地址 : http://localhost/system/car/update
2018-04-20 23:30:53 -HTTP METHOD : POST
2018-04-20 23:30:53 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:30:53 -参数 : [com.bootdo.system.domain.CarDO@6d22eb2b]
2018-04-20 23:30:53 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ? `status` = ? where id = ? 
2018-04-20 23:30:53 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-04-20 23:30:53 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-04-20 23:30:53 -
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
### SQL: update t_car     SET `type` = ?,     `name` = ?,     `no` = ?,     `driver_name` = ?,     `driver_telephone` = ?,     `driver_age` = ?,     `car_age` = ?,     `weight` = ?    `status` = ?    where id = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
### SQL: update t_car     SET `type` = ?,     `name` = ?,     `no` = ?,     `driver_name` = ?,     `driver_telephone` = ?,     `driver_age` = ?,     `car_age` = ?,     `weight` = ?    `status` = ?    where id = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:90)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy91.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy97.update(Unknown Source)
	at com.bootdo.system.service.impl.CarServiceImpl.update(CarServiceImpl.java:42)
	at com.bootdo.system.controller.CarController.update(CarController.java:96)
	at com.bootdo.system.controller.CarController$$FastClassBySpringCGLIB$$8d880099.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.CarController$$EnhancerBySpringCGLIB$$c474df31.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status` : update t_car 
		 SET `type` = ?, 
			`name` = ?, 
			`no` = ?, 
			`driver_name` = ?, 
			`driver_telephone` = ?, 
			`driver_age` = ?, 
			`car_age` = ?, 
			`weight` = ?
			`status` = ? 
		where id = ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy128.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'?
			`status` = ? 
		where id = ?',expect IDENTIFIER, actual IDENTIFIER `status`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 136 common frames omitted
2018-04-20 23:32:08 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 9012 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:32:08 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:32:08 -The following profiles are active: dev
2018-04-20 23:32:08 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:32:08 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:32:08 CST 2018]; root of context hierarchy
2018-04-20 23:32:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:32:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$37161a21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$296f48c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:32:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:32:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:32:12 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:32:12 -Starting service [Tomcat]
2018-04-20 23:32:12 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:32:12 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:32:12 -Root WebApplicationContext: initialization completed in 3245 ms
2018-04-20 23:32:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:32:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:32:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:32:12 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:32:12 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:32:12 -Filter xssFilter was not registered (disabled)
2018-04-20 23:32:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:32:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:32:12 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:32:12 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:32:12 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:32:08 CST 2018]; root of context hierarchy
2018-04-20 23:32:13 -{dataSource-1} inited
2018-04-20 23:32:14 -Using default implementation for ThreadExecutor
2018-04-20 23:32:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:32:14 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:32:14 -RAMJobStore initialized.
2018-04-20 23:32:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:32:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:32:14 -Quartz scheduler version: 2.2.1
2018-04-20 23:32:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1ce6a9bd
2018-04-20 23:32:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:32:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:32:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:32:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:32:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:32:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:32:15 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:32:15 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:32:15 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:32:15 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:32:15 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:32:15 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:32:15 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:32:15 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:32:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:32:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:32:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:32:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:32:15 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:32:15 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:32:15 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:32:15 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:32:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:32:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:32:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:32:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:32:15 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:32:15 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:32:15 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:32:15 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:32:15 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:32:15 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:32:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:32:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:32:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:32:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:32:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:32:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:32:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:32:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:32:15 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:32:15 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:32:15 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:32:15 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:32:15 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:32:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:32:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:32:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:32:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:32:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:32:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:32:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:32:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:32:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:32:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:32:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:32:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:32:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:32:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:32:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:32:16 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:32:08 CST 2018]; root of context hierarchy
2018-04-20 23:32:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:32:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:32:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:32:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:32:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:32:18 -

Using default security password: e3de7648-e235-4e03-acdc-c8536f1eeccc

2018-04-20 23:32:18 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:32:18 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@15f229e8, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29ce33e9, org.springframework.security.web.context.SecurityContextPersistenceFilter@34588991, org.springframework.security.web.header.HeaderWriterFilter@6a30f6b1, org.springframework.security.web.csrf.CsrfFilter@5bfdc92b, org.springframework.security.web.authentication.logout.LogoutFilter@2082e0e4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68722de3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@672f69f7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f86f7da, org.springframework.security.web.session.SessionManagementFilter@4202276, org.springframework.security.web.access.ExceptionTranslationFilter@7fb1820d]
2018-04-20 23:32:19 -Registering beans for JMX exposure on startup
2018-04-20 23:32:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:32:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:32:19 -Starting beans in phase 2147483647
2018-04-20 23:32:19 -Context refreshed
2018-04-20 23:32:19 -Found 1 custom documentation plugin(s)
2018-04-20 23:32:19 -Scanning for api listing references
2018-04-20 23:32:19 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:32:19 -Generating unique operation named: editUsingGET_1
2018-04-20 23:32:19 -Generating unique operation named: listUsingGET_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:32:19 -Generating unique operation named: addUsingGET_1
2018-04-20 23:32:19 -Generating unique operation named: editUsingGET_2
2018-04-20 23:32:19 -Generating unique operation named: listUsingGET_2
2018-04-20 23:32:19 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:32:19 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:32:19 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:32:19 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:32:19 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:32:19 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:32:19 -Generating unique operation named: addUsingGET_2
2018-04-20 23:32:19 -Generating unique operation named: editUsingGET_3
2018-04-20 23:32:19 -Generating unique operation named: listUsingGET_3
2018-04-20 23:32:19 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:32:19 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:32:19 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:32:19 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:32:19 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:32:19 -Generating unique operation named: addUsingGET_3
2018-04-20 23:32:19 -Generating unique operation named: editUsingGET_4
2018-04-20 23:32:19 -Generating unique operation named: listUsingGET_4
2018-04-20 23:32:19 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:32:20 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_4
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_5
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_5
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:32:20 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_5
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_6
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_6
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:32:20 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:32:20 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_6
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_7
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_7
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:32:20 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_7
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_8
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_8
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_9
2018-04-20 23:32:20 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_8
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_9
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_10
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:32:20 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:32:20 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_9
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_10
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_11
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:32:20 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:32:20 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_10
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_11
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_12
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:32:20 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:32:20 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:32:20 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:32:20 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:32:20 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:32:20 -Generating unique operation named: addUsingGET_11
2018-04-20 23:32:20 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:32:20 -Generating unique operation named: editUsingGET_12
2018-04-20 23:32:20 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:32:20 -Generating unique operation named: listUsingGET_13
2018-04-20 23:32:20 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:32:20 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:32:20 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:32:20 -Generating unique operation named: userUsingGET_1
2018-04-20 23:32:20 -Starting Quartz Scheduler now
2018-04-20 23:32:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:32:20 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:32:20 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:32:20 -Using a shared selector for servlet write/read
2018-04-20 23:32:20 -Tomcat started on port(s): 80 (http)
2018-04-20 23:32:20 -Started BootdoApplication in 12.689 seconds (JVM running for 13.17)
2018-04-20 23:32:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:32:27 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:32:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-04-20 23:32:27 -Enabling session validation scheduler...
2018-04-20 23:32:27 -请求地址 : http://localhost/login;JSESSIONID=4abdb781-f5e1-4a9e-91cc-45c6d662b83f
2018-04-20 23:32:27 -HTTP METHOD : GET
2018-04-20 23:32:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:32:27 -参数 : []
2018-04-20 23:32:27 -耗时 : 4
2018-04-20 23:32:27 -返回值 : login
2018-04-20 23:32:27 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:32:27 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:32:27 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:32:27 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:32:27 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:32:27 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:32:27 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:32:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:32:29 -==> Parameters: admin(String)
2018-04-20 23:32:29 -<==      Total: 1
2018-04-20 23:32:29 -请求地址 : http://localhost/login
2018-04-20 23:32:29 -HTTP METHOD : POST
2018-04-20 23:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:32:29 -参数 : [admin, 123456]
2018-04-20 23:32:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:32:29 -==> Parameters: admin(String)
2018-04-20 23:32:29 -<==      Total: 1
2018-04-20 23:32:29 -耗时 : 12
2018-04-20 23:32:29 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:32:29 -请求地址 : http://localhost/index
2018-04-20 23:32:29 -HTTP METHOD : GET
2018-04-20 23:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:32:29 -参数 : [{}]
2018-04-20 23:32:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:32:29 -==> Parameters: 1(Long)
2018-04-20 23:32:29 -<==      Total: 18
2018-04-20 23:32:29 -耗时 : 50
2018-04-20 23:32:29 -返回值 : index_v1
2018-04-20 23:32:29 -请求地址 : http://localhost/main
2018-04-20 23:32:29 -HTTP METHOD : GET
2018-04-20 23:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:32:29 -参数 : []
2018-04-20 23:32:29 -耗时 : 1
2018-04-20 23:32:29 -返回值 : main
2018-04-20 23:32:29 -请求地址 : http://localhost/main
2018-04-20 23:32:29 -HTTP METHOD : GET
2018-04-20 23:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:32:29 -参数 : []
2018-04-20 23:32:29 -耗时 : 1
2018-04-20 23:32:29 -返回值 : main
2018-04-20 23:32:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:32:33 -==> Parameters: 1(Long)
2018-04-20 23:32:33 -<==      Total: 53
2018-04-20 23:32:33 -请求地址 : http://localhost/system/car
2018-04-20 23:32:33 -HTTP METHOD : GET
2018-04-20 23:32:33 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:32:33 -参数 : []
2018-04-20 23:32:33 -耗时 : 0
2018-04-20 23:32:33 -返回值 : system/car/car
2018-04-20 23:32:33 -请求地址 : http://localhost/system/car/list
2018-04-20 23:32:33 -HTTP METHOD : GET
2018-04-20 23:32:33 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:32:33 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:32:33 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:32:33 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:32:33 -<==      Total: 1
2018-04-20 23:32:33 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:32:33 -==> Parameters: 
2018-04-20 23:32:33 -<==      Total: 1
2018-04-20 23:32:33 -耗时 : 66
2018-04-20 23:32:33 -返回值 : com.bootdo.common.utils.PageUtils@64ce5fef
2018-04-20 23:32:34 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:32:34 -HTTP METHOD : GET
2018-04-20 23:32:34 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:32:34 -参数 : [1, {}]
2018-04-20 23:32:34 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:32:34 -==> Parameters: 1(Long)
2018-04-20 23:32:34 -<==      Total: 1
2018-04-20 23:32:34 -耗时 : 4
2018-04-20 23:32:34 -返回值 : system/car/edit
2018-04-20 23:32:37 -请求地址 : http://localhost/system/car/update
2018-04-20 23:32:37 -HTTP METHOD : POST
2018-04-20 23:32:37 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:32:37 -参数 : [com.bootdo.system.domain.CarDO@27479d06]
2018-04-20 23:32:37 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:32:37 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 0(Integer), 1(Long)
2018-04-20 23:32:37 -<==    Updates: 1
2018-04-20 23:32:37 -耗时 : 53
2018-04-20 23:32:37 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:32:37 -请求地址 : http://localhost/system/car/list
2018-04-20 23:32:37 -HTTP METHOD : GET
2018-04-20 23:32:37 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:32:37 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:32:37 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:32:37 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:32:37 -<==      Total: 1
2018-04-20 23:32:37 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:32:37 -==> Parameters: 
2018-04-20 23:32:37 -<==      Total: 1
2018-04-20 23:32:37 -耗时 : 7
2018-04-20 23:32:37 -返回值 : com.bootdo.common.utils.PageUtils@8fbca60
2018-04-20 23:32:39 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:32:39 -HTTP METHOD : GET
2018-04-20 23:32:39 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:32:39 -参数 : [1, {}]
2018-04-20 23:32:39 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:32:39 -==> Parameters: 1(Long)
2018-04-20 23:32:39 -<==      Total: 1
2018-04-20 23:32:39 -耗时 : 3
2018-04-20 23:32:39 -返回值 : system/car/edit
2018-04-20 23:32:42 -请求地址 : http://localhost/system/car/update
2018-04-20 23:32:42 -HTTP METHOD : POST
2018-04-20 23:32:42 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:32:42 -参数 : [com.bootdo.system.domain.CarDO@1090c2c8]
2018-04-20 23:32:42 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:32:42 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 0(Integer), 1(Long)
2018-04-20 23:32:42 -<==    Updates: 1
2018-04-20 23:32:42 -耗时 : 166
2018-04-20 23:32:42 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:32:42 -请求地址 : http://localhost/system/car/list
2018-04-20 23:32:42 -HTTP METHOD : GET
2018-04-20 23:32:42 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:32:42 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:32:42 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:32:42 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:32:42 -<==      Total: 1
2018-04-20 23:32:42 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:32:42 -==> Parameters: 
2018-04-20 23:32:42 -<==      Total: 1
2018-04-20 23:32:42 -耗时 : 5
2018-04-20 23:32:42 -返回值 : com.bootdo.common.utils.PageUtils@3c0c25d8
2018-04-20 23:32:46 -请求地址 : http://localhost/system/car
2018-04-20 23:32:46 -HTTP METHOD : GET
2018-04-20 23:32:46 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:32:46 -参数 : []
2018-04-20 23:32:46 -耗时 : 1
2018-04-20 23:32:46 -返回值 : system/car/car
2018-04-20 23:32:46 -请求地址 : http://localhost/system/car/list
2018-04-20 23:32:46 -HTTP METHOD : GET
2018-04-20 23:32:46 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:32:46 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:32:46 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:32:46 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:32:46 -<==      Total: 1
2018-04-20 23:32:46 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:32:46 -==> Parameters: 
2018-04-20 23:32:46 -<==      Total: 1
2018-04-20 23:32:46 -耗时 : 7
2018-04-20 23:32:46 -返回值 : com.bootdo.common.utils.PageUtils@10eaa5b3
2018-04-20 23:34:28 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:34:28 -HTTP METHOD : GET
2018-04-20 23:34:28 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:34:28 -参数 : [1, {}]
2018-04-20 23:34:28 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:34:28 -==> Parameters: 1(Long)
2018-04-20 23:34:28 -<==      Total: 1
2018-04-20 23:34:28 -耗时 : 5
2018-04-20 23:34:28 -返回值 : system/car/edit
2018-04-20 23:34:30 -请求地址 : http://localhost/system/car/update
2018-04-20 23:34:30 -HTTP METHOD : POST
2018-04-20 23:34:30 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:34:30 -参数 : [com.bootdo.system.domain.CarDO@790eac3d]
2018-04-20 23:34:43 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:34:43 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 0(Integer), 1(Long)
2018-04-20 23:34:43 -<==    Updates: 1
2018-04-20 23:34:43 -耗时 : 12574
2018-04-20 23:34:43 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:34:43 -请求地址 : http://localhost/system/car/list
2018-04-20 23:34:43 -HTTP METHOD : GET
2018-04-20 23:34:43 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:34:43 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:34:43 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:34:43 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:34:43 -<==      Total: 1
2018-04-20 23:34:43 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:34:43 -==> Parameters: 
2018-04-20 23:34:43 -<==      Total: 1
2018-04-20 23:34:43 -耗时 : 8
2018-04-20 23:34:43 -返回值 : com.bootdo.common.utils.PageUtils@4eee959a
2018-04-20 23:35:20 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:35:20 -HTTP METHOD : GET
2018-04-20 23:35:20 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:35:20 -参数 : [1, {}]
2018-04-20 23:35:20 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:35:20 -==> Parameters: 1(Long)
2018-04-20 23:35:20 -<==      Total: 1
2018-04-20 23:35:20 -耗时 : 2
2018-04-20 23:35:20 -返回值 : system/car/edit
2018-04-20 23:36:49 -请求地址 : http://localhost/index
2018-04-20 23:36:49 -HTTP METHOD : GET
2018-04-20 23:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:36:49 -参数 : [{}]
2018-04-20 23:36:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:36:49 -==> Parameters: 1(Long)
2018-04-20 23:36:49 -<==      Total: 18
2018-04-20 23:36:49 -耗时 : 10
2018-04-20 23:36:49 -返回值 : index_v1
2018-04-20 23:36:49 -请求地址 : http://localhost/main
2018-04-20 23:36:49 -HTTP METHOD : GET
2018-04-20 23:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:36:49 -参数 : []
2018-04-20 23:36:49 -耗时 : 0
2018-04-20 23:36:49 -返回值 : main
2018-04-20 23:36:49 -请求地址 : http://localhost/main
2018-04-20 23:36:49 -HTTP METHOD : GET
2018-04-20 23:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:36:49 -参数 : []
2018-04-20 23:36:49 -耗时 : 4
2018-04-20 23:36:49 -返回值 : main
2018-04-20 23:36:50 -请求地址 : http://localhost/system/car
2018-04-20 23:36:50 -HTTP METHOD : GET
2018-04-20 23:36:50 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:36:50 -参数 : []
2018-04-20 23:36:50 -耗时 : 1
2018-04-20 23:36:50 -返回值 : system/car/car
2018-04-20 23:36:51 -请求地址 : http://localhost/system/car/list
2018-04-20 23:36:51 -HTTP METHOD : GET
2018-04-20 23:36:51 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:36:51 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:36:51 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:36:51 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:36:51 -<==      Total: 1
2018-04-20 23:36:51 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:36:51 -==> Parameters: 
2018-04-20 23:36:51 -<==      Total: 1
2018-04-20 23:36:51 -耗时 : 15
2018-04-20 23:36:51 -返回值 : com.bootdo.common.utils.PageUtils@369b3ad2
2018-04-20 23:36:52 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:36:52 -HTTP METHOD : GET
2018-04-20 23:36:52 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:36:52 -参数 : [1, {}]
2018-04-20 23:36:52 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:36:52 -==> Parameters: 1(Long)
2018-04-20 23:36:52 -<==      Total: 1
2018-04-20 23:36:52 -耗时 : 4
2018-04-20 23:36:52 -返回值 : system/car/edit
2018-04-20 23:36:55 -请求地址 : http://localhost/system/car/update
2018-04-20 23:36:55 -HTTP METHOD : POST
2018-04-20 23:36:55 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:36:55 -参数 : [com.bootdo.system.domain.CarDO@165fed31]
2018-04-20 23:37:06 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:37:06 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 1(Integer), 1(Long)
2018-04-20 23:37:06 -<==    Updates: 1
2018-04-20 23:37:06 -耗时 : 11814
2018-04-20 23:37:06 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:37:06 -请求地址 : http://localhost/system/car/list
2018-04-20 23:37:06 -HTTP METHOD : GET
2018-04-20 23:37:06 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:37:06 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:37:06 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:37:06 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:37:06 -<==      Total: 1
2018-04-20 23:37:06 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:37:06 -==> Parameters: 
2018-04-20 23:37:06 -<==      Total: 1
2018-04-20 23:37:06 -耗时 : 17
2018-04-20 23:37:06 -返回值 : com.bootdo.common.utils.PageUtils@64f9594b
2018-04-20 23:37:19 -请求地址 : http://localhost/system/car
2018-04-20 23:37:19 -HTTP METHOD : GET
2018-04-20 23:37:19 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:37:19 -参数 : []
2018-04-20 23:37:19 -耗时 : 0
2018-04-20 23:37:19 -返回值 : system/car/car
2018-04-20 23:37:19 -请求地址 : http://localhost/system/car/list
2018-04-20 23:37:19 -HTTP METHOD : GET
2018-04-20 23:37:19 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:37:19 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:37:19 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:37:19 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:37:19 -<==      Total: 1
2018-04-20 23:37:19 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:37:19 -==> Parameters: 
2018-04-20 23:37:19 -<==      Total: 1
2018-04-20 23:37:19 -耗时 : 5
2018-04-20 23:37:19 -返回值 : com.bootdo.common.utils.PageUtils@4d168045
2018-04-20 23:37:21 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:37:21 -HTTP METHOD : GET
2018-04-20 23:37:21 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:37:21 -参数 : [1, {}]
2018-04-20 23:37:21 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:37:21 -==> Parameters: 1(Long)
2018-04-20 23:37:21 -<==      Total: 1
2018-04-20 23:37:21 -耗时 : 7
2018-04-20 23:37:21 -返回值 : system/car/edit
2018-04-20 23:37:24 -请求地址 : http://localhost/system/car/update
2018-04-20 23:37:24 -HTTP METHOD : POST
2018-04-20 23:37:24 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:37:24 -参数 : [com.bootdo.system.domain.CarDO@4cd31583]
2018-04-20 23:37:30 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:37:30 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 0(Integer), 1(Long)
2018-04-20 23:37:30 -<==    Updates: 1
2018-04-20 23:37:30 -耗时 : 5761
2018-04-20 23:37:30 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:37:30 -请求地址 : http://localhost/system/car/list
2018-04-20 23:37:30 -HTTP METHOD : GET
2018-04-20 23:37:30 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:37:30 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:37:30 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:37:30 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:37:30 -<==      Total: 1
2018-04-20 23:37:30 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:37:30 -==> Parameters: 
2018-04-20 23:37:30 -<==      Total: 1
2018-04-20 23:37:30 -耗时 : 4
2018-04-20 23:37:30 -返回值 : com.bootdo.common.utils.PageUtils@5f13bee3
2018-04-20 23:37:33 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:37:33 -HTTP METHOD : GET
2018-04-20 23:37:33 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:37:33 -参数 : [1, {}]
2018-04-20 23:37:33 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:37:33 -==> Parameters: 1(Long)
2018-04-20 23:37:33 -<==      Total: 1
2018-04-20 23:37:33 -耗时 : 8
2018-04-20 23:37:33 -返回值 : system/car/edit
2018-04-20 23:37:36 -请求地址 : http://localhost/system/car/update
2018-04-20 23:37:36 -HTTP METHOD : POST
2018-04-20 23:37:36 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:37:36 -参数 : [com.bootdo.system.domain.CarDO@117417ae]
2018-04-20 23:37:36 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:37:36 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 1(Integer), 1(Long)
2018-04-20 23:37:36 -<==    Updates: 1
2018-04-20 23:37:36 -耗时 : 49
2018-04-20 23:37:36 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:37:36 -请求地址 : http://localhost/system/car/list
2018-04-20 23:37:36 -HTTP METHOD : GET
2018-04-20 23:37:36 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:37:36 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:37:36 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:37:36 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:37:36 -<==      Total: 1
2018-04-20 23:37:36 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:37:36 -==> Parameters: 
2018-04-20 23:37:36 -<==      Total: 1
2018-04-20 23:37:36 -耗时 : 6
2018-04-20 23:37:36 -返回值 : com.bootdo.common.utils.PageUtils@79cc35c8
2018-04-20 23:37:50 -请求地址 : http://localhost/
2018-04-20 23:37:50 -HTTP METHOD : GET
2018-04-20 23:37:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:37:50 -参数 : [{}]
2018-04-20 23:37:50 -耗时 : 0
2018-04-20 23:37:50 -返回值 : redirect:/login
2018-04-20 23:37:50 -请求地址 : http://localhost/login
2018-04-20 23:37:50 -HTTP METHOD : GET
2018-04-20 23:37:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:37:50 -参数 : []
2018-04-20 23:37:50 -耗时 : 1
2018-04-20 23:37:50 -返回值 : login
2018-04-20 23:37:52 -请求地址 : http://localhost/register
2018-04-20 23:37:52 -HTTP METHOD : GET
2018-04-20 23:37:52 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-20 23:37:52 -参数 : [{}]
2018-04-20 23:37:52 -耗时 : 0
2018-04-20 23:37:52 -返回值 : system/user/register
2018-04-20 23:38:11 -请求地址 : http://localhost/register/exit
2018-04-20 23:38:11 -HTTP METHOD : POST
2018-04-20 23:38:11 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-20 23:38:11 -参数 : [{username=test3}]
2018-04-20 23:38:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:38:11 -==> Parameters: test3(String)
2018-04-20 23:38:11 -<==      Total: 0
2018-04-20 23:38:11 -耗时 : 5
2018-04-20 23:38:11 -返回值 : true
2018-04-20 23:38:14 -请求地址 : http://localhost/register/save
2018-04-20 23:38:14 -HTTP METHOD : POST
2018-04-20 23:38:14 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.save
2018-04-20 23:38:14 -参数 : [UserDO{userId=null, username='test3', name='王五', password='123456', deptId=null, deptName='null', email='null', mobile='null', status=null, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[2], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-20 23:38:14 -==>  Preparing: insert into sys_user ( `username`, `name`, `password`, `dept_id`, `email`, `mobile`, `status`, `user_id_create`, `gmt_create`, `gmt_modified`, `sex`, `birth`, `pic_id`, `live_address`, `hobby`, `province`, `city`, `district` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:38:14 -==> Parameters: test3(String), 王五(String), 4428f69c806f51128f3974f948a2f272(String), null, null, null, 1(Integer), null, null, null, null, null, null, null, null, null, null, null
2018-04-20 23:38:14 -<==    Updates: 1
2018-04-20 23:38:14 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-20 23:38:14 -==> Parameters: 6(Long)
2018-04-20 23:38:14 -<==    Updates: 0
2018-04-20 23:38:14 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-04-20 23:38:14 -==> Parameters: 6(Long), 2(Long)
2018-04-20 23:38:14 -<==    Updates: 1
2018-04-20 23:38:15 -耗时 : 362
2018-04-20 23:38:15 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:38:15 -请求地址 : http://localhost/login
2018-04-20 23:38:15 -HTTP METHOD : GET
2018-04-20 23:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:38:15 -参数 : []
2018-04-20 23:38:15 -耗时 : 0
2018-04-20 23:38:15 -返回值 : login
2018-04-20 23:38:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:38:21 -==> Parameters: test3(String)
2018-04-20 23:38:21 -<==      Total: 1
2018-04-20 23:38:21 -请求地址 : http://localhost/login
2018-04-20 23:38:21 -HTTP METHOD : POST
2018-04-20 23:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:38:21 -参数 : [test3, 123456]
2018-04-20 23:38:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:38:21 -==> Parameters: test3(String)
2018-04-20 23:38:21 -<==      Total: 1
2018-04-20 23:38:21 -耗时 : 3
2018-04-20 23:38:21 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:38:21 -请求地址 : http://localhost/index
2018-04-20 23:38:21 -HTTP METHOD : GET
2018-04-20 23:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:38:21 -参数 : [{}]
2018-04-20 23:38:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:38:21 -==> Parameters: 6(Long)
2018-04-20 23:38:21 -<==      Total: 8
2018-04-20 23:38:21 -耗时 : 5
2018-04-20 23:38:21 -返回值 : index_v1
2018-04-20 23:38:21 -请求地址 : http://localhost/main
2018-04-20 23:38:21 -HTTP METHOD : GET
2018-04-20 23:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:38:21 -参数 : []
2018-04-20 23:38:21 -耗时 : 1
2018-04-20 23:38:21 -返回值 : main
2018-04-20 23:38:21 -请求地址 : http://localhost/main
2018-04-20 23:38:21 -HTTP METHOD : GET
2018-04-20 23:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:38:21 -参数 : []
2018-04-20 23:38:21 -耗时 : 1
2018-04-20 23:38:21 -返回值 : main
2018-04-20 23:38:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:38:24 -==> Parameters: 6(Long)
2018-04-20 23:38:24 -<==      Total: 9
2018-04-20 23:38:24 -请求地址 : http://localhost/system/order/
2018-04-20 23:38:24 -HTTP METHOD : GET
2018-04-20 23:38:24 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:38:24 -参数 : []
2018-04-20 23:38:24 -耗时 : 1
2018-04-20 23:38:24 -返回值 : system/order/order
2018-04-20 23:38:24 -请求地址 : http://localhost/system/order/list
2018-04-20 23:38:24 -HTTP METHOD : GET
2018-04-20 23:38:24 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:38:24 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:38:24 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:38:24 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:38:24 -<==      Total: 3
2018-04-20 23:38:24 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:38:24 -==> Parameters: 
2018-04-20 23:38:24 -<==      Total: 1
2018-04-20 23:38:24 -耗时 : 61
2018-04-20 23:38:24 -返回值 : com.bootdo.common.utils.PageUtils@1bb64f4
2018-04-20 23:38:26 -请求地址 : http://localhost/sys/user/personal
2018-04-20 23:38:26 -HTTP METHOD : GET
2018-04-20 23:38:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2018-04-20 23:38:26 -参数 : [{}]
2018-04-20 23:38:26 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:38:26 -==> Parameters: 6(Long)
2018-04-20 23:38:26 -<==      Total: 1
2018-04-20 23:38:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 23:38:26 -==> Parameters: 6(Long)
2018-04-20 23:38:26 -<==      Total: 1
2018-04-20 23:38:26 -耗时 : 21
2018-04-20 23:38:26 -返回值 : system/user/personal
2018-04-20 23:38:31 -请求地址 : http://localhost/system/good
2018-04-20 23:38:31 -HTTP METHOD : GET
2018-04-20 23:38:31 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:38:31 -参数 : []
2018-04-20 23:38:31 -耗时 : 0
2018-04-20 23:38:31 -返回值 : system/good/good
2018-04-20 23:38:31 -请求地址 : http://localhost/system/good/list
2018-04-20 23:38:31 -HTTP METHOD : GET
2018-04-20 23:38:31 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:38:31 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:38:31 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:38:31 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:38:31 -<==      Total: 4
2018-04-20 23:38:31 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:38:31 -==> Parameters: 
2018-04-20 23:38:31 -<==      Total: 1
2018-04-20 23:38:31 -耗时 : 33
2018-04-20 23:38:31 -返回值 : com.bootdo.common.utils.PageUtils@ee6aec7
2018-04-20 23:38:33 -请求地址 : http://localhost/system/car
2018-04-20 23:38:33 -HTTP METHOD : GET
2018-04-20 23:38:33 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:38:33 -参数 : []
2018-04-20 23:38:33 -耗时 : 0
2018-04-20 23:38:33 -返回值 : system/car/car
2018-04-20 23:38:33 -请求地址 : http://localhost/system/car/list
2018-04-20 23:38:33 -HTTP METHOD : GET
2018-04-20 23:38:33 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:38:33 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:38:33 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:38:33 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:38:33 -<==      Total: 1
2018-04-20 23:38:33 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:38:33 -==> Parameters: 
2018-04-20 23:38:33 -<==      Total: 1
2018-04-20 23:38:33 -耗时 : 12
2018-04-20 23:38:33 -返回值 : com.bootdo.common.utils.PageUtils@5814b83f
2018-04-20 23:41:35 -Starting BootdoApplication on U579HYKNQFMQVYD with PID 9064 (D:\project\demo\logisticsSystem\target\classes started by Administrator in D:\project\demo\logisticsSystem)
2018-04-20 23:41:35 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-04-20 23:41:35 -The following profiles are active: dev
2018-04-20 23:41:35 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:41:35 CST 2018]; root of context hierarchy
2018-04-20 23:41:35 -HV000001: Hibernate Validator 5.3.6.Final
2018-04-20 23:41:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-20 23:41:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29060195] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1b5f303c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2018-04-20 23:41:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2018-04-20 23:41:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-20 23:41:38 -Tomcat initialized with port(s): 80 (http)
2018-04-20 23:41:38 -Starting service [Tomcat]
2018-04-20 23:41:38 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-04-20 23:41:38 -Initializing Spring embedded WebApplicationContext
2018-04-20 23:41:38 -Root WebApplicationContext: initialization completed in 3383 ms
2018-04-20 23:41:39 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-20 23:41:39 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-20 23:41:39 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-20 23:41:39 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-20 23:41:39 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-20 23:41:39 -Filter xssFilter was not registered (disabled)
2018-04-20 23:41:39 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-20 23:41:39 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-04-20 23:41:39 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-04-20 23:41:39 -Mapping servlet: 'dispatcherServlet' to [/]
2018-04-20 23:41:39 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:41:35 CST 2018]; root of context hierarchy
2018-04-20 23:41:40 -{dataSource-1} inited
2018-04-20 23:41:40 -Using default implementation for ThreadExecutor
2018-04-20 23:41:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-20 23:41:40 -Quartz Scheduler v.2.2.1 created.
2018-04-20 23:41:40 -RAMJobStore initialized.
2018-04-20 23:41:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-20 23:41:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-04-20 23:41:40 -Quartz scheduler version: 2.2.1
2018-04-20 23:41:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@72b1df49
2018-04-20 23:41:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-04-20 23:41:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:41:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-04-20 23:41:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-04-20 23:41:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:41:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-20 23:41:42 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2018-04-20 23:41:42 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2018-04-20 23:41:42 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2018-04-20 23:41:42 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2018-04-20 23:41:42 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2018-04-20 23:41:42 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2018-04-20 23:41:42 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2018-04-20 23:41:42 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2018-04-20 23:41:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-04-20 23:41:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-04-20 23:41:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-04-20 23:41:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-04-20 23:41:42 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2018-04-20 23:41:42 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:41:42 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2018-04-20 23:41:42 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2018-04-20 23:41:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-04-20 23:41:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-04-20 23:41:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-04-20 23:41:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2018-04-20 23:41:42 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2018-04-20 23:41:42 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2018-04-20 23:41:42 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2018-04-20 23:41:42 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2018-04-20 23:41:42 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:41:42 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-04-20 23:41:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-04-20 23:41:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-04-20 23:41:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-04-20 23:41:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-04-20 23:41:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-04-20 23:41:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-04-20 23:41:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-04-20 23:41:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-04-20 23:41:42 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2018-04-20 23:41:42 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2018-04-20 23:41:42 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2018-04-20 23:41:42 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2018-04-20 23:41:42 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2018-04-20 23:41:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-04-20 23:41:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-04-20 23:41:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-04-20 23:41:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-04-20 23:41:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-04-20 23:41:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-04-20 23:41:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:41:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-04-20 23:41:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-04-20 23:41:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-04-20 23:41:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:41:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-20 23:41:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-20 23:41:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-20 23:41:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-20 23:41:43 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@68be8808: startup date [Fri Apr 20 23:41:35 CST 2018]; root of context hierarchy
2018-04-20 23:41:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:41:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:41:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:41:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-04-20 23:41:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-20 23:41:44 -

Using default security password: 23bdea76-519e-4bb6-9661-7b4b87a81b50

2018-04-20 23:41:45 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-04-20 23:41:45 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@1784a296, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@49ea4b65, org.springframework.security.web.context.SecurityContextPersistenceFilter@433db56d, org.springframework.security.web.header.HeaderWriterFilter@46a9c368, org.springframework.security.web.csrf.CsrfFilter@47bfde21, org.springframework.security.web.authentication.logout.LogoutFilter@6d5d1204, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bf45b7c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d3a2459, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4af6839c, org.springframework.security.web.session.SessionManagementFilter@1f251bf1, org.springframework.security.web.access.ExceptionTranslationFilter@3555d804]
2018-04-20 23:41:45 -Registering beans for JMX exposure on startup
2018-04-20 23:41:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-20 23:41:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-20 23:41:45 -Starting beans in phase 2147483647
2018-04-20 23:41:45 -Context refreshed
2018-04-20 23:41:45 -Found 1 custom documentation plugin(s)
2018-04-20 23:41:45 -Scanning for api listing references
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_1
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_1
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_2
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_2
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_2
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_3
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingHEAD_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPUT_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPATCH_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingDELETE_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingTRACE_1
2018-04-20 23:41:46 -Generating unique operation named: viewUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: welcomeUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_2
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_3
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_3
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_4
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_5
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingGET_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingHEAD_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPUT_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPATCH_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingDELETE_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingOPTIONS_2
2018-04-20 23:41:46 -Generating unique operation named: updateUsingTRACE_2
2018-04-20 23:41:46 -Generating unique operation named: viewUsingGET_2
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_3
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_4
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_4
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_6
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_7
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingGET_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingHEAD_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPUT_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPATCH_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingDELETE_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingOPTIONS_3
2018-04-20 23:41:46 -Generating unique operation named: updateUsingTRACE_3
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_4
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_5
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_5
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_8
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_4
2018-04-20 23:41:46 -Generating unique operation named: treeUsingGET_1
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_5
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_5
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_6
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_6
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_9
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_10
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingGET_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingHEAD_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_6
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPUT_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPATCH_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingDELETE_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingOPTIONS_4
2018-04-20 23:41:46 -Generating unique operation named: updateUsingTRACE_4
2018-04-20 23:41:46 -Generating unique operation named: viewUsingGET_3
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_6
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_7
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_7
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_11
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_12
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_6
2018-04-20 23:41:46 -Generating unique operation named: updateUsingGET_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingHEAD_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_7
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPUT_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPATCH_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingDELETE_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingOPTIONS_5
2018-04-20 23:41:46 -Generating unique operation named: updateUsingTRACE_5
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_7
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_7
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_8
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_8
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_8
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_9
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_8
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_9
2018-04-20 23:41:46 -Generating unique operation named: listUsingHEAD_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingPOST_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingPUT_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingPATCH_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingDELETE_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingOPTIONS_1
2018-04-20 23:41:46 -Generating unique operation named: listUsingTRACE_1
2018-04-20 23:41:46 -Generating unique operation named: addUsingGET_8
2018-04-20 23:41:46 -Generating unique operation named: editUsingGET_9
2018-04-20 23:41:46 -Generating unique operation named: listUsingGET_10
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_13
2018-04-20 23:41:46 -Generating unique operation named: removeUsingPOST_14
2018-04-20 23:41:46 -Generating unique operation named: saveUsingPOST_10
2018-04-20 23:41:46 -Generating unique operation named: updateUsingGET_6
2018-04-20 23:41:46 -Generating unique operation named: updateUsingHEAD_6
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPOST_9
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPUT_6
2018-04-20 23:41:46 -Generating unique operation named: updateUsingPATCH_6
2018-04-20 23:41:47 -Generating unique operation named: updateUsingDELETE_6
2018-04-20 23:41:47 -Generating unique operation named: updateUsingOPTIONS_6
2018-04-20 23:41:47 -Generating unique operation named: updateUsingTRACE_6
2018-04-20 23:41:47 -Generating unique operation named: addUsingGET_9
2018-04-20 23:41:47 -Generating unique operation named: editUsingGET_10
2018-04-20 23:41:47 -Generating unique operation named: listUsingGET_11
2018-04-20 23:41:47 -Generating unique operation named: removeUsingPOST_15
2018-04-20 23:41:47 -Generating unique operation named: removeUsingPOST_16
2018-04-20 23:41:47 -Generating unique operation named: saveUsingPOST_11
2018-04-20 23:41:47 -Generating unique operation named: updateUsingGET_7
2018-04-20 23:41:47 -Generating unique operation named: updateUsingHEAD_7
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPOST_10
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPUT_7
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPATCH_7
2018-04-20 23:41:47 -Generating unique operation named: updateUsingDELETE_7
2018-04-20 23:41:47 -Generating unique operation named: updateUsingOPTIONS_7
2018-04-20 23:41:47 -Generating unique operation named: updateUsingTRACE_7
2018-04-20 23:41:47 -Generating unique operation named: addUsingGET_10
2018-04-20 23:41:47 -Generating unique operation named: editUsingGET_11
2018-04-20 23:41:47 -Generating unique operation named: listUsingGET_12
2018-04-20 23:41:47 -Generating unique operation named: removeUsingPOST_17
2018-04-20 23:41:47 -Generating unique operation named: removeUsingPOST_18
2018-04-20 23:41:47 -Generating unique operation named: saveUsingPOST_12
2018-04-20 23:41:47 -Generating unique operation named: updateUsingGET_8
2018-04-20 23:41:47 -Generating unique operation named: updateUsingHEAD_8
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPOST_11
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPUT_8
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPATCH_8
2018-04-20 23:41:47 -Generating unique operation named: updateUsingDELETE_8
2018-04-20 23:41:47 -Generating unique operation named: updateUsingOPTIONS_8
2018-04-20 23:41:47 -Generating unique operation named: updateUsingTRACE_8
2018-04-20 23:41:47 -Generating unique operation named: addUsingGET_11
2018-04-20 23:41:47 -Generating unique operation named: batchRemoveUsingPOST_1
2018-04-20 23:41:47 -Generating unique operation named: editUsingGET_12
2018-04-20 23:41:47 -Generating unique operation named: exitUsingPOST_1
2018-04-20 23:41:47 -Generating unique operation named: listUsingGET_13
2018-04-20 23:41:47 -Generating unique operation named: removeUsingPOST_19
2018-04-20 23:41:47 -Generating unique operation named: saveUsingPOST_13
2018-04-20 23:41:47 -Generating unique operation named: updateUsingPOST_12
2018-04-20 23:41:47 -Generating unique operation named: userUsingGET_1
2018-04-20 23:41:47 -Starting Quartz Scheduler now
2018-04-20 23:41:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-04-20 23:41:47 -Initializing ProtocolHandler ["http-nio-80"]
2018-04-20 23:41:47 -Starting ProtocolHandler ["http-nio-80"]
2018-04-20 23:41:47 -Using a shared selector for servlet write/read
2018-04-20 23:41:47 -Tomcat started on port(s): 80 (http)
2018-04-20 23:41:47 -Started BootdoApplication in 12.653 seconds (JVM running for 13.136)
2018-04-20 23:41:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-20 23:41:59 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-20 23:41:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-04-20 23:41:59 -Enabling session validation scheduler...
2018-04-20 23:42:00 -请求地址 : http://localhost/login;JSESSIONID=920550a6-6dda-4605-b633-fd28307a33bf
2018-04-20 23:42:00 -HTTP METHOD : GET
2018-04-20 23:42:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:42:00 -参数 : []
2018-04-20 23:42:00 -耗时 : 2
2018-04-20 23:42:00 -返回值 : login
2018-04-20 23:42:00 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-04-20 23:42:00 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-04-20 23:42:00 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-04-20 23:42:00 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-04-20 23:42:00 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-04-20 23:42:00 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-04-20 23:42:00 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-04-20 23:43:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:43:01 -==> Parameters: admin(String)
2018-04-20 23:43:01 -<==      Total: 1
2018-04-20 23:43:01 -请求地址 : http://localhost/login
2018-04-20 23:43:01 -HTTP METHOD : POST
2018-04-20 23:43:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:43:01 -参数 : [admin, 123456]
2018-04-20 23:43:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:43:01 -==> Parameters: admin(String)
2018-04-20 23:43:01 -<==      Total: 1
2018-04-20 23:43:01 -耗时 : 28
2018-04-20 23:43:01 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:43:01 -请求地址 : http://localhost/index
2018-04-20 23:43:01 -HTTP METHOD : GET
2018-04-20 23:43:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:43:01 -参数 : [{}]
2018-04-20 23:43:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:43:01 -==> Parameters: 1(Long)
2018-04-20 23:43:01 -<==      Total: 18
2018-04-20 23:43:01 -耗时 : 59
2018-04-20 23:43:01 -返回值 : index_v1
2018-04-20 23:43:02 -请求地址 : http://localhost/main
2018-04-20 23:43:02 -HTTP METHOD : GET
2018-04-20 23:43:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:43:02 -参数 : []
2018-04-20 23:43:02 -耗时 : 1
2018-04-20 23:43:02 -返回值 : main
2018-04-20 23:43:02 -请求地址 : http://localhost/main
2018-04-20 23:43:02 -HTTP METHOD : GET
2018-04-20 23:43:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:43:02 -参数 : []
2018-04-20 23:43:02 -耗时 : 1
2018-04-20 23:43:02 -返回值 : main
2018-04-20 23:43:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:43:12 -==> Parameters: 1(Long)
2018-04-20 23:43:12 -<==      Total: 53
2018-04-20 23:43:12 -请求地址 : http://localhost/sys/user/
2018-04-20 23:43:12 -HTTP METHOD : GET
2018-04-20 23:43:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-04-20 23:43:12 -参数 : [{}]
2018-04-20 23:43:12 -耗时 : 1
2018-04-20 23:43:12 -返回值 : system/user/user
2018-04-20 23:43:13 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:43:13 -HTTP METHOD : GET
2018-04-20 23:43:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:43:13 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:43:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:43:13 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:43:13 -<==      Total: 5
2018-04-20 23:43:13 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:43:13 -==> Parameters: 
2018-04-20 23:43:13 -<==      Total: 1
2018-04-20 23:43:13 -耗时 : 16
2018-04-20 23:43:13 -返回值 : com.bootdo.common.utils.PageUtils@3fd82168
2018-04-20 23:43:15 -请求地址 : http://localhost/sys/user/edit/1
2018-04-20 23:43:15 -HTTP METHOD : GET
2018-04-20 23:43:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-04-20 23:43:15 -参数 : [{}, 1]
2018-04-20 23:43:15 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:43:15 -==> Parameters: 1(Long)
2018-04-20 23:43:15 -<==      Total: 1
2018-04-20 23:43:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 23:43:15 -==> Parameters: 1(Long)
2018-04-20 23:43:15 -<==      Total: 1
2018-04-20 23:43:15 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:43:15 -==> Parameters: 1(Long)
2018-04-20 23:43:15 -<==      Total: 1
2018-04-20 23:43:15 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:43:15 -==> Parameters: 
2018-04-20 23:43:15 -<==      Total: 2
2018-04-20 23:43:15 -耗时 : 15
2018-04-20 23:43:15 -返回值 : system/user/edit
2018-04-20 23:43:23 -请求地址 : http://localhost/sys/user/edit/2
2018-04-20 23:43:23 -HTTP METHOD : GET
2018-04-20 23:43:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-04-20 23:43:23 -参数 : [{}, 2]
2018-04-20 23:43:23 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:43:23 -==> Parameters: 2(Long)
2018-04-20 23:43:23 -<==      Total: 1
2018-04-20 23:43:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 23:43:23 -==> Parameters: 2(Long)
2018-04-20 23:43:23 -<==      Total: 1
2018-04-20 23:43:23 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:43:23 -==> Parameters: 2(Long)
2018-04-20 23:43:23 -<==      Total: 1
2018-04-20 23:43:23 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:43:23 -==> Parameters: 
2018-04-20 23:43:23 -<==      Total: 2
2018-04-20 23:43:23 -耗时 : 20
2018-04-20 23:43:23 -返回值 : system/user/edit
2018-04-20 23:43:27 -请求地址 : http://localhost/sys/user/update
2018-04-20 23:43:27 -HTTP METHOD : POST
2018-04-20 23:43:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2018-04-20 23:43:27 -参数 : [UserDO{userId=2, username='test', name='测试用户', password='null', deptId=null, deptName='null', email='test@163.com', mobile='null', status=0, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-20 23:43:27 -==>  Preparing: update sys_user SET `username` = ?, `name` = ?, `email` = ?, `status` = ? where user_id = ? 
2018-04-20 23:43:27 -==> Parameters: test(String), 测试用户(String), test@163.com(String), 0(Integer), 2(Long)
2018-04-20 23:43:27 -<==    Updates: 1
2018-04-20 23:43:27 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-20 23:43:27 -==> Parameters: 2(Long)
2018-04-20 23:43:27 -<==    Updates: 1
2018-04-20 23:43:27 -耗时 : 75
2018-04-20 23:43:27 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:43:27 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:43:27 -HTTP METHOD : GET
2018-04-20 23:43:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:43:27 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:43:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:43:27 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:43:27 -<==      Total: 5
2018-04-20 23:43:27 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:43:27 -==> Parameters: 
2018-04-20 23:43:27 -<==      Total: 1
2018-04-20 23:43:27 -耗时 : 11
2018-04-20 23:43:27 -返回值 : com.bootdo.common.utils.PageUtils@2c93b56
2018-04-20 23:43:36 -请求地址 : http://localhost/sys/user/remove
2018-04-20 23:43:36 -HTTP METHOD : POST
2018-04-20 23:43:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2018-04-20 23:43:36 -参数 : [4]
2018-04-20 23:43:36 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-20 23:43:36 -==> Parameters: 4(Long)
2018-04-20 23:43:36 -<==    Updates: 1
2018-04-20 23:43:36 -==>  Preparing: delete from sys_user where user_id = ? 
2018-04-20 23:43:36 -==> Parameters: 4(Long)
2018-04-20 23:43:36 -<==    Updates: 1
2018-04-20 23:43:36 -耗时 : 59
2018-04-20 23:43:36 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:43:36 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:43:36 -HTTP METHOD : GET
2018-04-20 23:43:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:43:36 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:43:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:43:36 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:43:36 -<==      Total: 4
2018-04-20 23:43:36 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:43:36 -==> Parameters: 
2018-04-20 23:43:36 -<==      Total: 1
2018-04-20 23:43:36 -耗时 : 8
2018-04-20 23:43:36 -返回值 : com.bootdo.common.utils.PageUtils@1c1ead29
2018-04-20 23:43:39 -请求地址 : http://localhost/sys/user/remove
2018-04-20 23:43:39 -HTTP METHOD : POST
2018-04-20 23:43:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2018-04-20 23:43:39 -参数 : [5]
2018-04-20 23:43:39 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-20 23:43:39 -==> Parameters: 5(Long)
2018-04-20 23:43:39 -<==    Updates: 1
2018-04-20 23:43:39 -==>  Preparing: delete from sys_user where user_id = ? 
2018-04-20 23:43:39 -==> Parameters: 5(Long)
2018-04-20 23:43:39 -<==    Updates: 1
2018-04-20 23:43:39 -耗时 : 195
2018-04-20 23:43:39 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:43:39 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:43:39 -HTTP METHOD : GET
2018-04-20 23:43:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:43:39 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:43:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:43:39 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:43:39 -<==      Total: 3
2018-04-20 23:43:39 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:43:39 -==> Parameters: 
2018-04-20 23:43:39 -<==      Total: 1
2018-04-20 23:43:39 -耗时 : 9
2018-04-20 23:43:39 -返回值 : com.bootdo.common.utils.PageUtils@f9024e2
2018-04-20 23:43:41 -请求地址 : http://localhost/sys/user/add
2018-04-20 23:43:41 -HTTP METHOD : GET
2018-04-20 23:43:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2018-04-20 23:43:41 -参数 : [{}]
2018-04-20 23:43:41 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:43:41 -==> Parameters: 
2018-04-20 23:43:41 -<==      Total: 2
2018-04-20 23:43:41 -耗时 : 9
2018-04-20 23:43:41 -返回值 : system/user/add
2018-04-20 23:43:56 -请求地址 : http://localhost/sys/user/exit
2018-04-20 23:43:56 -HTTP METHOD : POST
2018-04-20 23:43:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.exit
2018-04-20 23:43:56 -参数 : [{username=test2}]
2018-04-20 23:43:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:43:56 -==> Parameters: test2(String)
2018-04-20 23:43:56 -<==      Total: 0
2018-04-20 23:43:56 -耗时 : 12
2018-04-20 23:43:56 -返回值 : true
2018-04-20 23:44:10 -请求地址 : http://localhost/sys/user/save
2018-04-20 23:44:10 -HTTP METHOD : POST
2018-04-20 23:44:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2018-04-20 23:44:10 -参数 : [UserDO{userId=null, username='test2', name='test2', password='123456', deptId=null, deptName='null', email='test@163.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[2], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-20 23:44:10 -==>  Preparing: insert into sys_user ( `username`, `name`, `password`, `dept_id`, `email`, `mobile`, `status`, `user_id_create`, `gmt_create`, `gmt_modified`, `sex`, `birth`, `pic_id`, `live_address`, `hobby`, `province`, `city`, `district` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:44:10 -==> Parameters: test2(String), test2(String), 649169898e69272c0e5bc899baf1e904(String), null, test@163.com(String), null, 1(Integer), null, null, null, null, null, null, null, null, null, null, null
2018-04-20 23:44:10 -<==    Updates: 1
2018-04-20 23:44:10 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-20 23:44:10 -==> Parameters: 7(Long)
2018-04-20 23:44:10 -<==    Updates: 0
2018-04-20 23:44:10 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-04-20 23:44:10 -==> Parameters: 7(Long), 2(Long)
2018-04-20 23:44:10 -<==    Updates: 1
2018-04-20 23:44:10 -耗时 : 120
2018-04-20 23:44:10 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:44:10 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:44:10 -HTTP METHOD : GET
2018-04-20 23:44:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:44:10 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:44:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:44:10 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:10 -<==      Total: 4
2018-04-20 23:44:10 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:44:10 -==> Parameters: 
2018-04-20 23:44:10 -<==      Total: 1
2018-04-20 23:44:10 -耗时 : 23
2018-04-20 23:44:10 -返回值 : com.bootdo.common.utils.PageUtils@3494e6c6
2018-04-20 23:44:17 -请求地址 : http://localhost/sys/user/edit/2
2018-04-20 23:44:17 -HTTP METHOD : GET
2018-04-20 23:44:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-04-20 23:44:17 -参数 : [{}, 2]
2018-04-20 23:44:17 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:44:17 -==> Parameters: 2(Long)
2018-04-20 23:44:17 -<==      Total: 0
2018-04-20 23:44:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 23:44:17 -==> Parameters: 2(Long)
2018-04-20 23:44:17 -<==      Total: 1
2018-04-20 23:44:17 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:44:17 -==> Parameters: 2(Long)
2018-04-20 23:44:17 -<==      Total: 0
2018-04-20 23:44:17 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:44:17 -==> Parameters: 
2018-04-20 23:44:17 -<==      Total: 2
2018-04-20 23:44:17 -耗时 : 11
2018-04-20 23:44:17 -返回值 : system/user/edit
2018-04-20 23:44:23 -请求地址 : http://localhost/sys/user/edit/7
2018-04-20 23:44:23 -HTTP METHOD : GET
2018-04-20 23:44:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2018-04-20 23:44:23 -参数 : [{}, 7]
2018-04-20 23:44:23 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:44:23 -==> Parameters: 7(Long)
2018-04-20 23:44:23 -<==      Total: 1
2018-04-20 23:44:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-04-20 23:44:23 -==> Parameters: 7(Long)
2018-04-20 23:44:23 -<==      Total: 1
2018-04-20 23:44:23 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-04-20 23:44:23 -==> Parameters: 7(Long)
2018-04-20 23:44:23 -<==      Total: 1
2018-04-20 23:44:23 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:44:23 -==> Parameters: 
2018-04-20 23:44:23 -<==      Total: 2
2018-04-20 23:44:23 -耗时 : 8
2018-04-20 23:44:23 -返回值 : system/user/edit
2018-04-20 23:44:26 -请求地址 : http://localhost/
2018-04-20 23:44:26 -HTTP METHOD : GET
2018-04-20 23:44:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:44:26 -参数 : [{}]
2018-04-20 23:44:26 -耗时 : 0
2018-04-20 23:44:26 -返回值 : redirect:/login
2018-04-20 23:44:26 -请求地址 : http://localhost/login
2018-04-20 23:44:26 -HTTP METHOD : GET
2018-04-20 23:44:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:44:26 -参数 : []
2018-04-20 23:44:26 -耗时 : 1
2018-04-20 23:44:26 -返回值 : login
2018-04-20 23:44:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:44:31 -==> Parameters: test2(String)
2018-04-20 23:44:31 -<==      Total: 1
2018-04-20 23:44:31 -请求地址 : http://localhost/login
2018-04-20 23:44:31 -HTTP METHOD : POST
2018-04-20 23:44:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:44:31 -参数 : [test2, 123456]
2018-04-20 23:44:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:44:31 -==> Parameters: test2(String)
2018-04-20 23:44:31 -<==      Total: 1
2018-04-20 23:44:31 -耗时 : 4
2018-04-20 23:44:31 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:44:31 -请求地址 : http://localhost/index
2018-04-20 23:44:31 -HTTP METHOD : GET
2018-04-20 23:44:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:44:31 -参数 : [{}]
2018-04-20 23:44:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:44:31 -==> Parameters: 7(Long)
2018-04-20 23:44:31 -<==      Total: 8
2018-04-20 23:44:31 -耗时 : 5
2018-04-20 23:44:31 -返回值 : index_v1
2018-04-20 23:44:31 -请求地址 : http://localhost/main
2018-04-20 23:44:31 -HTTP METHOD : GET
2018-04-20 23:44:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:44:31 -参数 : []
2018-04-20 23:44:31 -耗时 : 1
2018-04-20 23:44:31 -返回值 : main
2018-04-20 23:44:31 -请求地址 : http://localhost/main
2018-04-20 23:44:31 -HTTP METHOD : GET
2018-04-20 23:44:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:44:31 -参数 : []
2018-04-20 23:44:31 -耗时 : 0
2018-04-20 23:44:31 -返回值 : main
2018-04-20 23:44:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:44:38 -==> Parameters: 7(Long)
2018-04-20 23:44:38 -<==      Total: 9
2018-04-20 23:44:38 -请求地址 : http://localhost/system/logistics
2018-04-20 23:44:38 -HTTP METHOD : GET
2018-04-20 23:44:38 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 23:44:38 -参数 : []
2018-04-20 23:44:38 -耗时 : 0
2018-04-20 23:44:38 -返回值 : system/logistics/logistics
2018-04-20 23:44:38 -请求地址 : http://localhost/system/logistics/list
2018-04-20 23:44:38 -HTTP METHOD : GET
2018-04-20 23:44:38 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 23:44:38 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 23:44:38 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 23:44:38 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:38 -<==      Total: 2
2018-04-20 23:44:38 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 23:44:38 -==> Parameters: 
2018-04-20 23:44:38 -<==      Total: 1
2018-04-20 23:44:38 -耗时 : 36
2018-04-20 23:44:38 -返回值 : com.bootdo.common.utils.PageUtils@17a57985
2018-04-20 23:44:40 -请求地址 : http://localhost/system/car
2018-04-20 23:44:40 -HTTP METHOD : GET
2018-04-20 23:44:40 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:44:40 -参数 : []
2018-04-20 23:44:40 -耗时 : 0
2018-04-20 23:44:40 -返回值 : system/car/car
2018-04-20 23:44:40 -请求地址 : http://localhost/system/car/list
2018-04-20 23:44:40 -HTTP METHOD : GET
2018-04-20 23:44:40 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:44:40 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:44:40 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:44:40 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:40 -<==      Total: 1
2018-04-20 23:44:40 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:44:40 -==> Parameters: 
2018-04-20 23:44:40 -<==      Total: 1
2018-04-20 23:44:40 -耗时 : 42
2018-04-20 23:44:40 -返回值 : com.bootdo.common.utils.PageUtils@26d9a6b2
2018-04-20 23:44:41 -请求地址 : http://localhost/system/good
2018-04-20 23:44:41 -HTTP METHOD : GET
2018-04-20 23:44:41 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:44:41 -参数 : []
2018-04-20 23:44:41 -耗时 : 0
2018-04-20 23:44:41 -返回值 : system/good/good
2018-04-20 23:44:41 -请求地址 : http://localhost/system/good/list
2018-04-20 23:44:41 -HTTP METHOD : GET
2018-04-20 23:44:41 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:44:41 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:44:41 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:44:41 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:41 -<==      Total: 4
2018-04-20 23:44:41 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:44:41 -==> Parameters: 
2018-04-20 23:44:41 -<==      Total: 1
2018-04-20 23:44:41 -耗时 : 14
2018-04-20 23:44:41 -返回值 : com.bootdo.common.utils.PageUtils@34c88cf2
2018-04-20 23:44:42 -请求地址 : http://localhost/system/order/
2018-04-20 23:44:42 -HTTP METHOD : GET
2018-04-20 23:44:42 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:44:42 -参数 : []
2018-04-20 23:44:42 -耗时 : 1
2018-04-20 23:44:42 -返回值 : system/order/order
2018-04-20 23:44:42 -请求地址 : http://localhost/system/order/list
2018-04-20 23:44:42 -HTTP METHOD : GET
2018-04-20 23:44:42 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:44:42 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:44:42 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:44:42 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:42 -<==      Total: 3
2018-04-20 23:44:42 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:44:42 -==> Parameters: 
2018-04-20 23:44:42 -<==      Total: 1
2018-04-20 23:44:42 -耗时 : 17
2018-04-20 23:44:42 -返回值 : com.bootdo.common.utils.PageUtils@268be28c
2018-04-20 23:44:44 -请求地址 : http://localhost/
2018-04-20 23:44:44 -HTTP METHOD : GET
2018-04-20 23:44:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:44:44 -参数 : [{}]
2018-04-20 23:44:44 -耗时 : 0
2018-04-20 23:44:44 -返回值 : redirect:/login
2018-04-20 23:44:44 -请求地址 : http://localhost/login
2018-04-20 23:44:44 -HTTP METHOD : GET
2018-04-20 23:44:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:44:44 -参数 : []
2018-04-20 23:44:44 -耗时 : 0
2018-04-20 23:44:44 -返回值 : login
2018-04-20 23:44:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:44:45 -==> Parameters: admin(String)
2018-04-20 23:44:45 -<==      Total: 1
2018-04-20 23:44:45 -请求地址 : http://localhost/login
2018-04-20 23:44:45 -HTTP METHOD : POST
2018-04-20 23:44:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:44:45 -参数 : [admin, 123456]
2018-04-20 23:44:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:44:45 -==> Parameters: admin(String)
2018-04-20 23:44:45 -<==      Total: 1
2018-04-20 23:44:45 -耗时 : 7
2018-04-20 23:44:45 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:44:45 -请求地址 : http://localhost/index
2018-04-20 23:44:45 -HTTP METHOD : GET
2018-04-20 23:44:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:44:45 -参数 : [{}]
2018-04-20 23:44:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:44:45 -==> Parameters: 1(Long)
2018-04-20 23:44:45 -<==      Total: 18
2018-04-20 23:44:45 -耗时 : 5
2018-04-20 23:44:45 -返回值 : index_v1
2018-04-20 23:44:45 -请求地址 : http://localhost/main
2018-04-20 23:44:45 -HTTP METHOD : GET
2018-04-20 23:44:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:44:45 -参数 : []
2018-04-20 23:44:45 -耗时 : 0
2018-04-20 23:44:45 -返回值 : main
2018-04-20 23:44:45 -请求地址 : http://localhost/main
2018-04-20 23:44:45 -HTTP METHOD : GET
2018-04-20 23:44:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:44:45 -参数 : []
2018-04-20 23:44:45 -耗时 : 0
2018-04-20 23:44:45 -返回值 : main
2018-04-20 23:44:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:44:49 -==> Parameters: 1(Long)
2018-04-20 23:44:49 -<==      Total: 53
2018-04-20 23:44:49 -请求地址 : http://localhost/system/order/
2018-04-20 23:44:49 -HTTP METHOD : GET
2018-04-20 23:44:49 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:44:49 -参数 : []
2018-04-20 23:44:49 -耗时 : 0
2018-04-20 23:44:49 -返回值 : system/order/order
2018-04-20 23:44:49 -请求地址 : http://localhost/system/order/list
2018-04-20 23:44:49 -HTTP METHOD : GET
2018-04-20 23:44:49 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:44:49 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:44:49 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:44:49 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:49 -<==      Total: 3
2018-04-20 23:44:49 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:44:49 -==> Parameters: 
2018-04-20 23:44:49 -<==      Total: 1
2018-04-20 23:44:49 -耗时 : 5
2018-04-20 23:44:49 -返回值 : com.bootdo.common.utils.PageUtils@59ecff6
2018-04-20 23:44:53 -请求地址 : http://localhost/system/good
2018-04-20 23:44:53 -HTTP METHOD : GET
2018-04-20 23:44:53 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:44:53 -参数 : []
2018-04-20 23:44:53 -耗时 : 0
2018-04-20 23:44:53 -返回值 : system/good/good
2018-04-20 23:44:53 -请求地址 : http://localhost/system/good/list
2018-04-20 23:44:53 -HTTP METHOD : GET
2018-04-20 23:44:53 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:44:53 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:44:53 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:44:53 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:44:53 -<==      Total: 4
2018-04-20 23:44:53 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:44:53 -==> Parameters: 
2018-04-20 23:44:53 -<==      Total: 1
2018-04-20 23:44:53 -耗时 : 5
2018-04-20 23:44:53 -返回值 : com.bootdo.common.utils.PageUtils@7e4dddd4
2018-04-20 23:44:58 -请求地址 : http://localhost/system/good/add
2018-04-20 23:44:58 -HTTP METHOD : GET
2018-04-20 23:44:58 -CLASS_METHOD : com.bootdo.system.controller.GoodController.add
2018-04-20 23:44:58 -参数 : []
2018-04-20 23:44:58 -耗时 : 0
2018-04-20 23:44:58 -返回值 : system/good/add
2018-04-20 23:45:45 -请求地址 : http://localhost/system/good/save
2018-04-20 23:45:45 -HTTP METHOD : POST
2018-04-20 23:45:45 -CLASS_METHOD : com.bootdo.system.controller.GoodController.save
2018-04-20 23:45:45 -参数 : [com.bootdo.system.domain.GoodDO@47ceab51]
2018-04-20 23:45:45 -==>  Preparing: insert into t_good ( `title`, `type`, `number`, `price`, `weight`, `place`, `img`, `imgmore`, `create_by`, `create_date`, `remark`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:45:45 -==> Parameters: 白菜(String), 蔬菜(String), 0005(String), 1.0(Double), 5.0(Double), 山东(String), null, null, null, 2018-04-20 23:45:45.636(Timestamp), (String), 0(Integer)
2018-04-20 23:45:45 -<==    Updates: 1
2018-04-20 23:45:45 -==>  Preparing: insert into t_storage ( `good_name`, `good_number`, `good_count` ) values ( ?, ?, ? ) 
2018-04-20 23:45:45 -==> Parameters: 白菜(String), 0005(String), 0(Integer)
2018-04-20 23:45:45 -<==    Updates: 1
2018-04-20 23:45:45 -耗时 : 326
2018-04-20 23:45:45 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:45:45 -请求地址 : http://localhost/system/good/list
2018-04-20 23:45:45 -HTTP METHOD : GET
2018-04-20 23:45:45 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:45:45 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:45:45 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:45:45 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:45:45 -<==      Total: 5
2018-04-20 23:45:45 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:45:45 -==> Parameters: 
2018-04-20 23:45:45 -<==      Total: 1
2018-04-20 23:45:45 -耗时 : 10
2018-04-20 23:45:45 -返回值 : com.bootdo.common.utils.PageUtils@44d264e6
2018-04-20 23:45:54 -请求地址 : http://localhost/system/storage
2018-04-20 23:45:54 -HTTP METHOD : GET
2018-04-20 23:45:54 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:45:54 -参数 : []
2018-04-20 23:45:54 -耗时 : 1
2018-04-20 23:45:54 -返回值 : system/storage/storage
2018-04-20 23:45:54 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:45:54 -HTTP METHOD : GET
2018-04-20 23:45:54 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:45:54 -参数 : [{limit=10, offset=0}]
2018-04-20 23:45:54 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:45:54 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:45:54 -<==      Total: 3
2018-04-20 23:45:54 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:45:54 -==> Parameters: 
2018-04-20 23:45:54 -<==      Total: 1
2018-04-20 23:45:54 -耗时 : 47
2018-04-20 23:45:54 -返回值 : com.bootdo.common.utils.PageUtils@48a183e7
2018-04-20 23:45:58 -请求地址 : http://localhost/system/storageInput
2018-04-20 23:45:58 -HTTP METHOD : GET
2018-04-20 23:45:58 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2018-04-20 23:45:58 -参数 : []
2018-04-20 23:45:58 -耗时 : 0
2018-04-20 23:45:58 -返回值 : system/storageInput/storageInput
2018-04-20 23:45:58 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:45:58 -HTTP METHOD : GET
2018-04-20 23:45:58 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:45:58 -参数 : [{limit=10, offset=0}]
2018-04-20 23:45:58 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:45:58 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:45:58 -<==      Total: 3
2018-04-20 23:45:58 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:45:58 -==> Parameters: 
2018-04-20 23:45:58 -<==      Total: 1
2018-04-20 23:45:58 -耗时 : 19
2018-04-20 23:45:58 -返回值 : com.bootdo.common.utils.PageUtils@6e56244b
2018-04-20 23:45:59 -请求地址 : http://localhost/system/storageInput/add
2018-04-20 23:45:59 -HTTP METHOD : GET
2018-04-20 23:45:59 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.add
2018-04-20 23:45:59 -参数 : []
2018-04-20 23:45:59 -耗时 : 0
2018-04-20 23:45:59 -返回值 : system/storageInput/add
2018-04-20 23:46:17 -请求地址 : http://localhost/system/storageInput/save
2018-04-20 23:46:17 -HTTP METHOD : POST
2018-04-20 23:46:17 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.save
2018-04-20 23:46:17 -参数 : [com.bootdo.system.domain.StorageInputDO@71895c56]
2018-04-20 23:46:17 -==>  Preparing: insert into t_storage_input ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:46:17 -==> Parameters: 白菜(String), 0005(String), 1.0(Double), 1000(Integer), 2018-04-20 23:46:17.466(Timestamp)
2018-04-20 23:46:17 -<==    Updates: 1
2018-04-20 23:46:17 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:46:17 -==> Parameters: 白菜(String), 0005(String)
2018-04-20 23:46:17 -<==      Total: 1
2018-04-20 23:46:17 -==>  Preparing: update t_storage SET `good_name` = ?, `good_number` = ?, `good_count` = ? where id = ? 
2018-04-20 23:46:17 -==> Parameters: 白菜(String), 0005(String), 1000(Integer), 3(Long)
2018-04-20 23:46:17 -<==    Updates: 1
2018-04-20 23:46:17 -耗时 : 385
2018-04-20 23:46:17 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:46:17 -请求地址 : http://localhost/system/storageInput/list
2018-04-20 23:46:17 -HTTP METHOD : GET
2018-04-20 23:46:17 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2018-04-20 23:46:17 -参数 : [{limit=10, offset=0}]
2018-04-20 23:46:17 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2018-04-20 23:46:17 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:46:17 -<==      Total: 4
2018-04-20 23:46:17 -==>  Preparing: select count(*) from t_storage_input 
2018-04-20 23:46:17 -==> Parameters: 
2018-04-20 23:46:17 -<==      Total: 1
2018-04-20 23:46:17 -耗时 : 6
2018-04-20 23:46:17 -返回值 : com.bootdo.common.utils.PageUtils@65996344
2018-04-20 23:46:22 -请求地址 : http://localhost/system/storage
2018-04-20 23:46:22 -HTTP METHOD : GET
2018-04-20 23:46:22 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:46:22 -参数 : []
2018-04-20 23:46:22 -耗时 : 0
2018-04-20 23:46:22 -返回值 : system/storage/storage
2018-04-20 23:46:22 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:46:22 -HTTP METHOD : GET
2018-04-20 23:46:22 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:46:22 -参数 : [{limit=10, offset=0}]
2018-04-20 23:46:22 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:46:22 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:46:22 -<==      Total: 3
2018-04-20 23:46:22 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:46:22 -==> Parameters: 
2018-04-20 23:46:22 -<==      Total: 1
2018-04-20 23:46:22 -耗时 : 8
2018-04-20 23:46:22 -返回值 : com.bootdo.common.utils.PageUtils@73f51a27
2018-04-20 23:46:25 -请求地址 : http://localhost/system/storageOutput
2018-04-20 23:46:25 -HTTP METHOD : GET
2018-04-20 23:46:25 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2018-04-20 23:46:25 -参数 : []
2018-04-20 23:46:25 -耗时 : 0
2018-04-20 23:46:25 -返回值 : system/storageOutput/storageOutput
2018-04-20 23:46:26 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:46:26 -HTTP METHOD : GET
2018-04-20 23:46:26 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:46:26 -参数 : [{limit=10, offset=0}]
2018-04-20 23:46:26 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:46:26 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:46:26 -<==      Total: 2
2018-04-20 23:46:26 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:46:26 -==> Parameters: 
2018-04-20 23:46:26 -<==      Total: 1
2018-04-20 23:46:26 -耗时 : 15
2018-04-20 23:46:26 -返回值 : com.bootdo.common.utils.PageUtils@5f40c46b
2018-04-20 23:46:27 -请求地址 : http://localhost/system/storageOutput/add
2018-04-20 23:46:27 -HTTP METHOD : GET
2018-04-20 23:46:27 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.add
2018-04-20 23:46:27 -参数 : []
2018-04-20 23:46:27 -耗时 : 0
2018-04-20 23:46:27 -返回值 : system/storageOutput/add
2018-04-20 23:46:51 -请求地址 : http://localhost/system/storageOutput/save
2018-04-20 23:46:51 -HTTP METHOD : POST
2018-04-20 23:46:51 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.save
2018-04-20 23:46:51 -参数 : [com.bootdo.system.domain.StorageOutputDO@12bad258]
2018-04-20 23:46:51 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2018-04-20 23:46:51 -==> Parameters: 白菜(String), 0005(String)
2018-04-20 23:46:51 -<==      Total: 1
2018-04-20 23:46:51 -==>  Preparing: insert into t_storage_output ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:46:51 -==> Parameters: 白菜(String), 0005(String), 1.5(Double), 763(Integer), 2018-04-20 23:46:51.43(Timestamp)
2018-04-20 23:46:51 -<==    Updates: 1
2018-04-20 23:46:51 -==>  Preparing: update t_storage SET `good_name` = ?, `good_number` = ?, `good_count` = ? where id = ? 
2018-04-20 23:46:51 -==> Parameters: 白菜(String), 0005(String), 237(Integer), 3(Long)
2018-04-20 23:46:51 -<==    Updates: 1
2018-04-20 23:46:51 -耗时 : 286
2018-04-20 23:46:51 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:46:51 -请求地址 : http://localhost/system/storageOutput/list
2018-04-20 23:46:51 -HTTP METHOD : GET
2018-04-20 23:46:51 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2018-04-20 23:46:51 -参数 : [{limit=10, offset=0}]
2018-04-20 23:46:51 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2018-04-20 23:46:51 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:46:51 -<==      Total: 3
2018-04-20 23:46:51 -==>  Preparing: select count(*) from t_storage_output 
2018-04-20 23:46:51 -==> Parameters: 
2018-04-20 23:46:51 -<==      Total: 1
2018-04-20 23:46:51 -耗时 : 22
2018-04-20 23:46:51 -返回值 : com.bootdo.common.utils.PageUtils@5b5e17f0
2018-04-20 23:46:58 -请求地址 : http://localhost/system/storage
2018-04-20 23:46:58 -HTTP METHOD : GET
2018-04-20 23:46:58 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2018-04-20 23:46:58 -参数 : []
2018-04-20 23:46:58 -耗时 : 1
2018-04-20 23:46:58 -返回值 : system/storage/storage
2018-04-20 23:46:58 -请求地址 : http://localhost/system/storage/list
2018-04-20 23:46:58 -HTTP METHOD : GET
2018-04-20 23:46:58 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2018-04-20 23:46:58 -参数 : [{limit=10, offset=0}]
2018-04-20 23:46:58 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2018-04-20 23:46:58 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:46:58 -<==      Total: 3
2018-04-20 23:46:58 -==>  Preparing: select count(*) from t_storage 
2018-04-20 23:46:58 -==> Parameters: 
2018-04-20 23:46:58 -<==      Total: 1
2018-04-20 23:46:58 -耗时 : 7
2018-04-20 23:46:58 -返回值 : com.bootdo.common.utils.PageUtils@209754f
2018-04-20 23:47:08 -请求地址 : http://localhost/system/order/add
2018-04-20 23:47:08 -HTTP METHOD : GET
2018-04-20 23:47:08 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2018-04-20 23:47:08 -参数 : []
2018-04-20 23:47:08 -耗时 : 0
2018-04-20 23:47:08 -返回值 : system/order/add
2018-04-20 23:48:15 -请求地址 : http://localhost/system/order/save
2018-04-20 23:48:15 -HTTP METHOD : POST
2018-04-20 23:48:15 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2018-04-20 23:48:15 -参数 : [com.bootdo.system.domain.OrderDO@2cf2bf9]
2018-04-20 23:48:15 -==>  Preparing: insert into t_order ( `order_sn`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:48:15 -==> Parameters: 1524239295409(String), 李四(String), 500.0(Double), 500(Integer), 2018-04-20 00:00:00.0(Timestamp), 张无(String), 山东青岛(String), 13701340923(String), null, 2018-04-20 23:48:15.409(Timestamp), 0(Integer), (String), 0005(String), 白菜(String)
2018-04-20 23:48:15 -<==    Updates: 1
2018-04-20 23:48:15 -==>  Preparing: insert into t_order_settlement ( `order_sn`, `total_price`, `create_date`, `state` ) values ( ?, ?, ?, ? ) 
2018-04-20 23:48:15 -==> Parameters: 1524239295409(String), 500.0(Double), 2018-04-20 23:48:15.707(Timestamp), 0(Integer)
2018-04-20 23:48:15 -<==    Updates: 1
2018-04-20 23:48:15 -耗时 : 426
2018-04-20 23:48:15 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:48:15 -请求地址 : http://localhost/system/order/list
2018-04-20 23:48:15 -HTTP METHOD : GET
2018-04-20 23:48:15 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:48:15 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:48:15 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:48:15 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:48:15 -<==      Total: 4
2018-04-20 23:48:15 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:48:15 -==> Parameters: 
2018-04-20 23:48:15 -<==      Total: 1
2018-04-20 23:48:15 -耗时 : 7
2018-04-20 23:48:15 -返回值 : com.bootdo.common.utils.PageUtils@75090cfa
2018-04-20 23:48:22 -请求地址 : http://localhost/system/order/edit/4
2018-04-20 23:48:22 -HTTP METHOD : GET
2018-04-20 23:48:22 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2018-04-20 23:48:22 -参数 : [4, {}]
2018-04-20 23:48:22 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2018-04-20 23:48:22 -==> Parameters: 4(Long)
2018-04-20 23:48:22 -<==      Total: 1
2018-04-20 23:48:22 -耗时 : 4
2018-04-20 23:48:22 -返回值 : system/order/edit
2018-04-20 23:48:26 -请求地址 : http://localhost/system/order/update
2018-04-20 23:48:26 -HTTP METHOD : POST
2018-04-20 23:48:26 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2018-04-20 23:48:26 -参数 : [com.bootdo.system.domain.OrderDO@788c51cc]
2018-04-20 23:48:26 -==>  Preparing: update t_order SET `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 23:48:26 -==> Parameters: 李四(String), 500.0(Double), 500(Integer), 2018-04-21 00:00:00.0(Timestamp), 张无(String), 山东青岛(String), 13701340923(String), (String), 0005(String), 白菜(String), 4(Long)
2018-04-20 23:48:27 -<==    Updates: 1
2018-04-20 23:48:27 -耗时 : 152
2018-04-20 23:48:27 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:48:27 -请求地址 : http://localhost/system/order/list
2018-04-20 23:48:27 -HTTP METHOD : GET
2018-04-20 23:48:27 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:48:27 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:48:27 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:48:27 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:48:27 -<==      Total: 4
2018-04-20 23:48:27 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:48:27 -==> Parameters: 
2018-04-20 23:48:27 -<==      Total: 1
2018-04-20 23:48:27 -耗时 : 5
2018-04-20 23:48:27 -返回值 : com.bootdo.common.utils.PageUtils@67f07bd8
2018-04-20 23:48:33 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:48:33 -HTTP METHOD : GET
2018-04-20 23:48:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:48:33 -参数 : []
2018-04-20 23:48:33 -耗时 : 1
2018-04-20 23:48:33 -返回值 : system/order/statistics
2018-04-20 23:48:33 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:48:33 -HTTP METHOD : GET
2018-04-20 23:48:33 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:48:33 -参数 : [{limit=10, offset=0}]
2018-04-20 23:48:33 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:48:33 -==> Parameters: 
2018-04-20 23:48:33 -<==      Total: 2
2018-04-20 23:48:33 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2018-04-20 23:48:33 -==> Parameters: 
2018-04-20 23:48:33 -<==      Total: 1
2018-04-20 23:48:33 -耗时 : 15
2018-04-20 23:48:33 -返回值 : com.bootdo.common.utils.PageUtils@75836e41
2018-04-20 23:48:34 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 23:48:34 -HTTP METHOD : GET
2018-04-20 23:48:34 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 23:48:34 -参数 : []
2018-04-20 23:48:34 -耗时 : 0
2018-04-20 23:48:34 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 23:48:34 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 23:48:34 -HTTP METHOD : GET
2018-04-20 23:48:34 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 23:48:34 -参数 : [{limit=10, offset=0}]
2018-04-20 23:48:34 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 23:48:34 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:48:34 -<==      Total: 3
2018-04-20 23:48:34 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 23:48:34 -==> Parameters: 
2018-04-20 23:48:34 -<==      Total: 1
2018-04-20 23:48:34 -耗时 : 10
2018-04-20 23:48:34 -返回值 : com.bootdo.common.utils.PageUtils@707559
2018-04-20 23:48:46 -请求地址 : http://localhost/system/car
2018-04-20 23:48:46 -HTTP METHOD : GET
2018-04-20 23:48:46 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:48:46 -参数 : []
2018-04-20 23:48:46 -耗时 : 0
2018-04-20 23:48:46 -返回值 : system/car/car
2018-04-20 23:48:46 -请求地址 : http://localhost/system/car/list
2018-04-20 23:48:46 -HTTP METHOD : GET
2018-04-20 23:48:46 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:48:46 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:48:46 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:48:46 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:48:46 -<==      Total: 1
2018-04-20 23:48:46 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:48:46 -==> Parameters: 
2018-04-20 23:48:46 -<==      Total: 1
2018-04-20 23:48:46 -耗时 : 4
2018-04-20 23:48:46 -返回值 : com.bootdo.common.utils.PageUtils@13aee551
2018-04-20 23:48:49 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:48:49 -HTTP METHOD : GET
2018-04-20 23:48:49 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:48:49 -参数 : [1, {}]
2018-04-20 23:48:49 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:48:49 -==> Parameters: 1(Long)
2018-04-20 23:48:49 -<==      Total: 1
2018-04-20 23:48:49 -耗时 : 5
2018-04-20 23:48:49 -返回值 : system/car/edit
2018-04-20 23:48:52 -请求地址 : http://localhost/system/car/update
2018-04-20 23:48:52 -HTTP METHOD : POST
2018-04-20 23:48:52 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:48:52 -参数 : [com.bootdo.system.domain.CarDO@34075399]
2018-04-20 23:48:52 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:48:52 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 0(Integer), 1(Long)
2018-04-20 23:48:52 -<==    Updates: 1
2018-04-20 23:48:52 -耗时 : 75
2018-04-20 23:48:52 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:48:52 -请求地址 : http://localhost/system/car/list
2018-04-20 23:48:52 -HTTP METHOD : GET
2018-04-20 23:48:52 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:48:52 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:48:52 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:48:52 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:48:52 -<==      Total: 1
2018-04-20 23:48:52 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:48:52 -==> Parameters: 
2018-04-20 23:48:52 -<==      Total: 1
2018-04-20 23:48:52 -耗时 : 5
2018-04-20 23:48:52 -返回值 : com.bootdo.common.utils.PageUtils@42b2b9ba
2018-04-20 23:48:54 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:48:54 -HTTP METHOD : GET
2018-04-20 23:48:54 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:48:54 -参数 : [1, {}]
2018-04-20 23:48:54 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:48:54 -==> Parameters: 1(Long)
2018-04-20 23:48:54 -<==      Total: 1
2018-04-20 23:48:54 -耗时 : 2
2018-04-20 23:48:54 -返回值 : system/car/edit
2018-04-20 23:48:56 -请求地址 : http://localhost/system/car/update
2018-04-20 23:48:56 -HTTP METHOD : POST
2018-04-20 23:48:56 -CLASS_METHOD : com.bootdo.system.controller.CarController.update
2018-04-20 23:48:56 -参数 : [com.bootdo.system.domain.CarDO@28547c21]
2018-04-20 23:48:56 -==>  Preparing: update t_car SET `type` = ?, `name` = ?, `no` = ?, `driver_name` = ?, `driver_telephone` = ?, `driver_age` = ?, `car_age` = ?, `weight` = ?, `status` = ? where id = ? 
2018-04-20 23:48:56 -==> Parameters: 货车(String), 东风货车(String), 川A4F567K(String), 张三(String), 13701235486(String), 10(Integer), 3(Integer), 20.0(Double), 1(Integer), 1(Long)
2018-04-20 23:48:56 -<==    Updates: 1
2018-04-20 23:48:56 -耗时 : 71
2018-04-20 23:48:56 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:48:56 -请求地址 : http://localhost/system/car/list
2018-04-20 23:48:56 -HTTP METHOD : GET
2018-04-20 23:48:56 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:48:56 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:48:56 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:48:56 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:48:56 -<==      Total: 1
2018-04-20 23:48:56 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:48:56 -==> Parameters: 
2018-04-20 23:48:56 -<==      Total: 1
2018-04-20 23:48:56 -耗时 : 11
2018-04-20 23:48:56 -返回值 : com.bootdo.common.utils.PageUtils@4f060c38
2018-04-20 23:49:00 -请求地址 : http://localhost/system/logistics
2018-04-20 23:49:00 -HTTP METHOD : GET
2018-04-20 23:49:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 23:49:00 -参数 : []
2018-04-20 23:49:00 -耗时 : 0
2018-04-20 23:49:00 -返回值 : system/logistics/logistics
2018-04-20 23:49:00 -请求地址 : http://localhost/system/logistics/list
2018-04-20 23:49:00 -HTTP METHOD : GET
2018-04-20 23:49:00 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 23:49:00 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 23:49:00 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 23:49:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:49:00 -<==      Total: 2
2018-04-20 23:49:00 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 23:49:00 -==> Parameters: 
2018-04-20 23:49:00 -<==      Total: 1
2018-04-20 23:49:00 -耗时 : 27
2018-04-20 23:49:00 -返回值 : com.bootdo.common.utils.PageUtils@277a9061
2018-04-20 23:49:02 -请求地址 : http://localhost/system/logistics/add
2018-04-20 23:49:02 -HTTP METHOD : GET
2018-04-20 23:49:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.add
2018-04-20 23:49:02 -参数 : []
2018-04-20 23:49:02 -耗时 : 1
2018-04-20 23:49:02 -返回值 : system/logistics/add
2018-04-20 23:50:11 -请求地址 : http://localhost/system/logistics/save
2018-04-20 23:50:11 -HTTP METHOD : POST
2018-04-20 23:50:11 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.save
2018-04-20 23:50:11 -参数 : [com.bootdo.system.domain.LogisticsDO@106541d0]
2018-04-20 23:50:11 -==>  Preparing: insert into t_logistics ( `no`, `good_number`, `good_name`, `send_name`, `send_address`, `send_telephone`, `send_province`, `send_city`, `send_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `arrive_province`, `arrive_city`, `arrive_date` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:50:11 -==> Parameters: 000001(String), 0005(String), 白菜(String), 李四(String), 山东(String), 12345678901(String), 山东(String), (String), 2018-04-21 00:00:00.0(Timestamp), 张三(String), 山东青岛(String), (String), 山东(String), (String), 2018-04-22 00:00:00.0(Timestamp)
2018-04-20 23:50:11 -<==    Updates: 1
2018-04-20 23:50:11 -耗时 : 171
2018-04-20 23:50:11 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:50:11 -请求地址 : http://localhost/system/logistics/list
2018-04-20 23:50:11 -HTTP METHOD : GET
2018-04-20 23:50:11 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 23:50:11 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 23:50:11 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 23:50:11 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:50:11 -<==      Total: 3
2018-04-20 23:50:11 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 23:50:11 -==> Parameters: 
2018-04-20 23:50:11 -<==      Total: 1
2018-04-20 23:50:11 -耗时 : 3
2018-04-20 23:50:11 -返回值 : com.bootdo.common.utils.PageUtils@6b4b2ed4
2018-04-20 23:50:17 -请求地址 : http://localhost/system/logistics/edit/3
2018-04-20 23:50:17 -HTTP METHOD : GET
2018-04-20 23:50:17 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2018-04-20 23:50:17 -参数 : [3, {}]
2018-04-20 23:50:17 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics where id = ? 
2018-04-20 23:50:17 -==> Parameters: 3(Long)
2018-04-20 23:50:17 -<==      Total: 1
2018-04-20 23:50:17 -耗时 : 3
2018-04-20 23:50:17 -返回值 : system/logistics/edit
2018-04-20 23:50:38 -请求地址 : http://localhost/system/logistics/update
2018-04-20 23:50:38 -HTTP METHOD : POST
2018-04-20 23:50:38 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.update
2018-04-20 23:50:38 -参数 : [com.bootdo.system.domain.LogisticsDO@48797728]
2018-04-20 23:50:38 -==>  Preparing: update t_logistics SET `no` = ?, `good_number` = ?, `good_name` = ?, `send_name` = ?, `send_address` = ?, `send_telephone` = ?, `send_province` = ?, `send_city` = ?, `send_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `arrive_province` = ?, `arrive_city` = ?, `arrive_date` = ? where id = ? 
2018-04-20 23:50:38 -==> Parameters: 000001(String), 0005(String), 白菜(String), 李四(String), 山东(String), 12345678901(String), 山东(String), 青岛(String), 2018-04-21 00:00:00.0(Timestamp), 张三(String), 山东青岛(String), (String), 山东(String), 青岛(String), 2018-04-22 00:00:00.0(Timestamp), 3(Long)
2018-04-20 23:50:38 -<==    Updates: 1
2018-04-20 23:50:38 -耗时 : 203
2018-04-20 23:50:38 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:50:38 -请求地址 : http://localhost/system/logistics/list
2018-04-20 23:50:38 -HTTP METHOD : GET
2018-04-20 23:50:38 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 23:50:38 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 23:50:38 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 23:50:38 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:50:38 -<==      Total: 3
2018-04-20 23:50:38 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 23:50:38 -==> Parameters: 
2018-04-20 23:50:38 -<==      Total: 1
2018-04-20 23:50:38 -耗时 : 4
2018-04-20 23:50:38 -返回值 : com.bootdo.common.utils.PageUtils@d23c01f
2018-04-20 23:50:41 -请求地址 : http://localhost/system/logisticsManage
2018-04-20 23:50:41 -HTTP METHOD : GET
2018-04-20 23:50:41 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2018-04-20 23:50:41 -参数 : []
2018-04-20 23:50:41 -耗时 : 1
2018-04-20 23:50:41 -返回值 : system/logisticsManage/logisticsManage
2018-04-20 23:50:42 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 23:50:42 -HTTP METHOD : GET
2018-04-20 23:50:42 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 23:50:42 -参数 : [{limit=10, offset=0}]
2018-04-20 23:50:42 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 23:50:42 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:50:42 -<==      Total: 2
2018-04-20 23:50:42 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 23:50:42 -==> Parameters: 
2018-04-20 23:50:42 -<==      Total: 1
2018-04-20 23:50:42 -耗时 : 26
2018-04-20 23:50:42 -返回值 : com.bootdo.common.utils.PageUtils@5dca1906
2018-04-20 23:50:45 -请求地址 : http://localhost/system/logisticsManage/add
2018-04-20 23:50:45 -HTTP METHOD : GET
2018-04-20 23:50:45 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.add
2018-04-20 23:50:45 -参数 : []
2018-04-20 23:50:45 -耗时 : 1
2018-04-20 23:50:45 -返回值 : system/logisticsManage/add
2018-04-20 23:51:13 -请求地址 : http://localhost/system/logisticsManage/save
2018-04-20 23:51:13 -HTTP METHOD : POST
2018-04-20 23:51:13 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.save
2018-04-20 23:51:13 -参数 : [com.bootdo.system.domain.LogisticsManageDO@3ce3356e]
2018-04-20 23:51:13 -==>  Preparing: insert into t_logistics_manage ( `logistics_no`, `drivier_name`, `car_no`, `create_date`, `status` ) values ( ?, ?, ?, ?, ? ) 
2018-04-20 23:51:13 -==> Parameters: 000001(String), 张三(String), 川A4F567K(String), 2018-04-20 23:51:13.781(Timestamp), 0(Integer)
2018-04-20 23:51:13 -<==    Updates: 1
2018-04-20 23:51:13 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 23:51:13 -==> Parameters: 000001(String)
2018-04-20 23:51:13 -<==      Total: 1
2018-04-20 23:51:13 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 23:51:13 -==> Parameters: 0005(String), 白菜(String)
2018-04-20 23:51:13 -<==      Total: 1
2018-04-20 23:51:13 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 23:51:13 -==> Parameters: 1524239295409(String), 李四(String), 500.0(Double), 500(Integer), 2018-04-21 00:00:00.0(Timestamp), 张无(String), 山东青岛(String), 13701340923(String), 2018-04-20 23:48:15.0(Timestamp), 1(Integer), (String), 0005(String), 白菜(String), 4(Long)
2018-04-20 23:51:14 -<==    Updates: 1
2018-04-20 23:51:14 -耗时 : 324
2018-04-20 23:51:14 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:51:14 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 23:51:14 -HTTP METHOD : GET
2018-04-20 23:51:14 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 23:51:14 -参数 : [{limit=10, offset=0}]
2018-04-20 23:51:14 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 23:51:14 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:51:14 -<==      Total: 3
2018-04-20 23:51:14 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 23:51:14 -==> Parameters: 
2018-04-20 23:51:14 -<==      Total: 1
2018-04-20 23:51:14 -耗时 : 4
2018-04-20 23:51:14 -返回值 : com.bootdo.common.utils.PageUtils@41274ee7
2018-04-20 23:51:23 -请求地址 : http://localhost/system/order/
2018-04-20 23:51:23 -HTTP METHOD : GET
2018-04-20 23:51:23 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:51:23 -参数 : []
2018-04-20 23:51:23 -耗时 : 1
2018-04-20 23:51:23 -返回值 : system/order/order
2018-04-20 23:51:23 -请求地址 : http://localhost/system/order/list
2018-04-20 23:51:23 -HTTP METHOD : GET
2018-04-20 23:51:23 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:51:23 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:51:23 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:51:23 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:51:23 -<==      Total: 4
2018-04-20 23:51:23 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:51:23 -==> Parameters: 
2018-04-20 23:51:23 -<==      Total: 1
2018-04-20 23:51:23 -耗时 : 9
2018-04-20 23:51:23 -返回值 : com.bootdo.common.utils.PageUtils@1398ac7b
2018-04-20 23:51:47 -请求地址 : http://localhost/system/logisticsManage/edit/3
2018-04-20 23:51:47 -HTTP METHOD : GET
2018-04-20 23:51:47 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2018-04-20 23:51:47 -参数 : [3, {}]
2018-04-20 23:51:47 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2018-04-20 23:51:47 -==> Parameters: 3(Long)
2018-04-20 23:51:47 -<==      Total: 1
2018-04-20 23:51:47 -耗时 : 5
2018-04-20 23:51:47 -返回值 : system/logisticsManage/edit
2018-04-20 23:51:49 -请求地址 : http://localhost/system/logisticsManage/update
2018-04-20 23:51:49 -HTTP METHOD : POST
2018-04-20 23:51:49 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2018-04-20 23:51:49 -参数 : [com.bootdo.system.domain.LogisticsManageDO@68207b28]
2018-04-20 23:51:49 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2018-04-20 23:51:49 -==> Parameters: 000001(String), 张三(String), 川A4F567K(String), 1(Integer), 3(Long)
2018-04-20 23:51:49 -<==    Updates: 1
2018-04-20 23:51:49 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics WHERE no like CONCAT('%', ?, '%') order by id desc 
2018-04-20 23:51:49 -==> Parameters: 000001(String)
2018-04-20 23:51:49 -<==      Total: 1
2018-04-20 23:51:49 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2018-04-20 23:51:49 -==> Parameters: 0005(String), 白菜(String)
2018-04-20 23:51:49 -<==      Total: 1
2018-04-20 23:51:49 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2018-04-20 23:51:49 -==> Parameters: 1524239295409(String), 李四(String), 500.0(Double), 500(Integer), 2018-04-21 00:00:00.0(Timestamp), 张无(String), 山东青岛(String), 13701340923(String), 2018-04-20 23:48:15.0(Timestamp), 2(Integer), (String), 0005(String), 白菜(String), 4(Long)
2018-04-20 23:51:49 -<==    Updates: 1
2018-04-20 23:51:49 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc 
2018-04-20 23:51:49 -==> Parameters: 
2018-04-20 23:51:49 -<==      Total: 3
2018-04-20 23:51:49 -==>  Preparing: update t_order_settlement SET `order_sn` = ?, `total_price` = ?, `create_date` = ?, `state` = ? where id = ? 
2018-04-20 23:51:49 -==> Parameters: 1524239295409(String), 500.0(Double), 2018-04-20 23:51:49.889(Timestamp), 1(Integer), 3(Long)
2018-04-20 23:51:49 -<==    Updates: 1
2018-04-20 23:51:49 -耗时 : 197
2018-04-20 23:51:49 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:51:49 -请求地址 : http://localhost/system/logisticsManage/list
2018-04-20 23:51:49 -HTTP METHOD : GET
2018-04-20 23:51:49 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2018-04-20 23:51:49 -参数 : [{limit=10, offset=0}]
2018-04-20 23:51:49 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2018-04-20 23:51:49 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:51:49 -<==      Total: 3
2018-04-20 23:51:49 -==>  Preparing: select count(*) from t_logistics_manage 
2018-04-20 23:51:49 -==> Parameters: 
2018-04-20 23:51:49 -<==      Total: 1
2018-04-20 23:51:49 -耗时 : 4
2018-04-20 23:51:49 -返回值 : com.bootdo.common.utils.PageUtils@79408355
2018-04-20 23:51:59 -请求地址 : http://localhost/system/order/
2018-04-20 23:51:59 -HTTP METHOD : GET
2018-04-20 23:51:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:51:59 -参数 : []
2018-04-20 23:51:59 -耗时 : 0
2018-04-20 23:51:59 -返回值 : system/order/order
2018-04-20 23:51:59 -请求地址 : http://localhost/system/order/list
2018-04-20 23:51:59 -HTTP METHOD : GET
2018-04-20 23:51:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:51:59 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:51:59 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:51:59 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:51:59 -<==      Total: 4
2018-04-20 23:51:59 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:51:59 -==> Parameters: 
2018-04-20 23:51:59 -<==      Total: 1
2018-04-20 23:51:59 -耗时 : 4
2018-04-20 23:51:59 -返回值 : com.bootdo.common.utils.PageUtils@1bf35fb1
2018-04-20 23:52:09 -请求地址 : http://localhost/system/order/statistics
2018-04-20 23:52:09 -HTTP METHOD : GET
2018-04-20 23:52:09 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2018-04-20 23:52:09 -参数 : []
2018-04-20 23:52:09 -耗时 : 1
2018-04-20 23:52:09 -返回值 : system/order/statistics
2018-04-20 23:52:09 -请求地址 : http://localhost/system/order/statisticsList
2018-04-20 23:52:09 -HTTP METHOD : GET
2018-04-20 23:52:09 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2018-04-20 23:52:09 -参数 : [{limit=10, offset=0}]
2018-04-20 23:52:09 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2018-04-20 23:52:09 -==> Parameters: 
2018-04-20 23:52:09 -<==      Total: 2
2018-04-20 23:52:09 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2018-04-20 23:52:09 -==> Parameters: 
2018-04-20 23:52:09 -<==      Total: 1
2018-04-20 23:52:09 -耗时 : 8
2018-04-20 23:52:09 -返回值 : com.bootdo.common.utils.PageUtils@3c60282a
2018-04-20 23:52:12 -请求地址 : http://localhost/system/orderSettlement
2018-04-20 23:52:12 -HTTP METHOD : GET
2018-04-20 23:52:12 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2018-04-20 23:52:12 -参数 : []
2018-04-20 23:52:12 -耗时 : 0
2018-04-20 23:52:12 -返回值 : system/orderSettlement/orderSettlement
2018-04-20 23:52:12 -请求地址 : http://localhost/system/orderSettlement/list
2018-04-20 23:52:12 -HTTP METHOD : GET
2018-04-20 23:52:12 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2018-04-20 23:52:12 -参数 : [{limit=10, offset=0}]
2018-04-20 23:52:12 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2018-04-20 23:52:12 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:52:12 -<==      Total: 3
2018-04-20 23:52:12 -==>  Preparing: select count(*) from t_order_settlement 
2018-04-20 23:52:12 -==> Parameters: 
2018-04-20 23:52:12 -<==      Total: 1
2018-04-20 23:52:12 -耗时 : 4
2018-04-20 23:52:12 -返回值 : com.bootdo.common.utils.PageUtils@34641dca
2018-04-20 23:52:20 -请求地址 : http://localhost/system/car
2018-04-20 23:52:20 -HTTP METHOD : GET
2018-04-20 23:52:20 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:52:20 -参数 : []
2018-04-20 23:52:20 -耗时 : 1
2018-04-20 23:52:20 -返回值 : system/car/car
2018-04-20 23:52:21 -请求地址 : http://localhost/system/car/list
2018-04-20 23:52:21 -HTTP METHOD : GET
2018-04-20 23:52:21 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:52:21 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:52:21 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:52:21 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:52:21 -<==      Total: 1
2018-04-20 23:52:21 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:52:21 -==> Parameters: 
2018-04-20 23:52:21 -<==      Total: 1
2018-04-20 23:52:21 -耗时 : 3
2018-04-20 23:52:21 -返回值 : com.bootdo.common.utils.PageUtils@2aec124d
2018-04-20 23:52:22 -请求地址 : http://localhost/system/car/edit/1
2018-04-20 23:52:22 -HTTP METHOD : GET
2018-04-20 23:52:22 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2018-04-20 23:52:22 -参数 : [1, {}]
2018-04-20 23:52:22 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2018-04-20 23:52:22 -==> Parameters: 1(Long)
2018-04-20 23:52:22 -<==      Total: 1
2018-04-20 23:52:22 -耗时 : 7
2018-04-20 23:52:22 -返回值 : system/car/edit
2018-04-20 23:52:37 -请求地址 : http://localhost/sys/role
2018-04-20 23:52:37 -HTTP METHOD : GET
2018-04-20 23:52:37 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 23:52:37 -参数 : []
2018-04-20 23:52:37 -耗时 : 1
2018-04-20 23:52:37 -返回值 : system/role/role
2018-04-20 23:52:37 -请求地址 : http://localhost/sys/role/list
2018-04-20 23:52:37 -HTTP METHOD : GET
2018-04-20 23:52:37 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 23:52:37 -参数 : []
2018-04-20 23:52:37 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:52:37 -==> Parameters: 
2018-04-20 23:52:37 -<==      Total: 2
2018-04-20 23:52:37 -耗时 : 3
2018-04-20 23:52:37 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 23:52:40 -请求地址 : http://localhost/sys/user/
2018-04-20 23:52:40 -HTTP METHOD : GET
2018-04-20 23:52:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-04-20 23:52:40 -参数 : [{}]
2018-04-20 23:52:40 -耗时 : 0
2018-04-20 23:52:40 -返回值 : system/user/user
2018-04-20 23:52:40 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:52:40 -HTTP METHOD : GET
2018-04-20 23:52:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:52:40 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:52:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:52:40 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:52:40 -<==      Total: 4
2018-04-20 23:52:40 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:52:40 -==> Parameters: 
2018-04-20 23:52:40 -<==      Total: 1
2018-04-20 23:52:40 -耗时 : 31
2018-04-20 23:52:40 -返回值 : com.bootdo.common.utils.PageUtils@64da649a
2018-04-20 23:52:42 -请求地址 : http://localhost/
2018-04-20 23:52:42 -HTTP METHOD : GET
2018-04-20 23:52:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:52:42 -参数 : [{}]
2018-04-20 23:52:42 -耗时 : 0
2018-04-20 23:52:42 -返回值 : redirect:/login
2018-04-20 23:52:42 -请求地址 : http://localhost/login
2018-04-20 23:52:42 -HTTP METHOD : GET
2018-04-20 23:52:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:52:42 -参数 : []
2018-04-20 23:52:42 -耗时 : 0
2018-04-20 23:52:42 -返回值 : login
2018-04-20 23:52:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:52:45 -==> Parameters: admin(String)
2018-04-20 23:52:45 -<==      Total: 1
2018-04-20 23:52:45 -请求地址 : http://localhost/login
2018-04-20 23:52:45 -HTTP METHOD : POST
2018-04-20 23:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:52:45 -参数 : [admin, 123456]
2018-04-20 23:52:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:52:45 -==> Parameters: admin(String)
2018-04-20 23:52:45 -<==      Total: 1
2018-04-20 23:52:45 -耗时 : 3
2018-04-20 23:52:45 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:52:45 -请求地址 : http://localhost/index
2018-04-20 23:52:45 -HTTP METHOD : GET
2018-04-20 23:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:52:45 -参数 : [{}]
2018-04-20 23:52:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:52:45 -==> Parameters: 1(Long)
2018-04-20 23:52:45 -<==      Total: 18
2018-04-20 23:52:45 -耗时 : 70
2018-04-20 23:52:45 -返回值 : index_v1
2018-04-20 23:52:45 -请求地址 : http://localhost/main
2018-04-20 23:52:45 -HTTP METHOD : GET
2018-04-20 23:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:52:45 -参数 : []
2018-04-20 23:52:45 -耗时 : 0
2018-04-20 23:52:45 -返回值 : main
2018-04-20 23:52:45 -请求地址 : http://localhost/main
2018-04-20 23:52:45 -HTTP METHOD : GET
2018-04-20 23:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:52:45 -参数 : []
2018-04-20 23:52:45 -耗时 : 1
2018-04-20 23:52:45 -返回值 : main
2018-04-20 23:52:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:52:47 -==> Parameters: 1(Long)
2018-04-20 23:52:47 -<==      Total: 53
2018-04-20 23:52:47 -请求地址 : http://localhost/sys/role
2018-04-20 23:52:47 -HTTP METHOD : GET
2018-04-20 23:52:47 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2018-04-20 23:52:47 -参数 : []
2018-04-20 23:52:47 -耗时 : 0
2018-04-20 23:52:47 -返回值 : system/role/role
2018-04-20 23:52:47 -请求地址 : http://localhost/sys/role/list
2018-04-20 23:52:47 -HTTP METHOD : GET
2018-04-20 23:52:47 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2018-04-20 23:52:47 -参数 : []
2018-04-20 23:52:47 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-04-20 23:52:47 -==> Parameters: 
2018-04-20 23:52:47 -<==      Total: 2
2018-04-20 23:52:47 -耗时 : 4
2018-04-20 23:52:47 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-04-20 23:52:48 -请求地址 : http://localhost/sys/user/
2018-04-20 23:52:48 -HTTP METHOD : GET
2018-04-20 23:52:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-04-20 23:52:48 -参数 : [{}]
2018-04-20 23:52:48 -耗时 : 0
2018-04-20 23:52:48 -返回值 : system/user/user
2018-04-20 23:52:48 -请求地址 : http://localhost/sys/user/list
2018-04-20 23:52:48 -HTTP METHOD : GET
2018-04-20 23:52:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-04-20 23:52:48 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:52:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-04-20 23:52:48 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:52:48 -<==      Total: 4
2018-04-20 23:52:48 -==>  Preparing: select count(*) from sys_user 
2018-04-20 23:52:48 -==> Parameters: 
2018-04-20 23:52:48 -<==      Total: 1
2018-04-20 23:52:48 -耗时 : 5
2018-04-20 23:52:48 -返回值 : com.bootdo.common.utils.PageUtils@1c883454
2018-04-20 23:52:54 -请求地址 : http://localhost/
2018-04-20 23:52:54 -HTTP METHOD : GET
2018-04-20 23:52:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-04-20 23:52:54 -参数 : [{}]
2018-04-20 23:52:54 -耗时 : 0
2018-04-20 23:52:54 -返回值 : redirect:/login
2018-04-20 23:52:54 -请求地址 : http://localhost/login
2018-04-20 23:52:54 -HTTP METHOD : GET
2018-04-20 23:52:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:52:54 -参数 : []
2018-04-20 23:52:54 -耗时 : 1
2018-04-20 23:52:54 -返回值 : login
2018-04-20 23:52:55 -请求地址 : http://localhost/register
2018-04-20 23:52:55 -HTTP METHOD : GET
2018-04-20 23:52:55 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.user
2018-04-20 23:52:55 -参数 : [{}]
2018-04-20 23:52:55 -耗时 : 0
2018-04-20 23:52:55 -返回值 : system/user/register
2018-04-20 23:53:08 -请求地址 : http://localhost/register/exit
2018-04-20 23:53:08 -HTTP METHOD : POST
2018-04-20 23:53:08 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.exit
2018-04-20 23:53:08 -参数 : [{username=t2}]
2018-04-20 23:53:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:53:08 -==> Parameters: t2(String)
2018-04-20 23:53:09 -<==      Total: 0
2018-04-20 23:53:09 -耗时 : 3
2018-04-20 23:53:09 -返回值 : true
2018-04-20 23:53:12 -请求地址 : http://localhost/register/save
2018-04-20 23:53:12 -HTTP METHOD : POST
2018-04-20 23:53:12 -CLASS_METHOD : com.bootdo.system.controller.RegisterController.save
2018-04-20 23:53:12 -参数 : [UserDO{userId=null, username='t2', name='测试2', password='123456', deptId=null, deptName='null', email='null', mobile='null', status=null, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[2], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-04-20 23:53:12 -==>  Preparing: insert into sys_user ( `username`, `name`, `password`, `dept_id`, `email`, `mobile`, `status`, `user_id_create`, `gmt_create`, `gmt_modified`, `sex`, `birth`, `pic_id`, `live_address`, `hobby`, `province`, `city`, `district` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-04-20 23:53:12 -==> Parameters: t2(String), 测试2(String), 7f02028667ed53f65170a98ed928c14d(String), null, null, null, 1(Integer), null, null, null, null, null, null, null, null, null, null, null
2018-04-20 23:53:12 -<==    Updates: 1
2018-04-20 23:53:12 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-04-20 23:53:12 -==> Parameters: 8(Long)
2018-04-20 23:53:12 -<==    Updates: 0
2018-04-20 23:53:12 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-04-20 23:53:12 -==> Parameters: 8(Long), 2(Long)
2018-04-20 23:53:12 -<==    Updates: 1
2018-04-20 23:53:12 -耗时 : 207
2018-04-20 23:53:12 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:53:12 -请求地址 : http://localhost/login
2018-04-20 23:53:12 -HTTP METHOD : GET
2018-04-20 23:53:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-04-20 23:53:12 -参数 : []
2018-04-20 23:53:12 -耗时 : 0
2018-04-20 23:53:12 -返回值 : login
2018-04-20 23:53:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:53:19 -==> Parameters: t2(String)
2018-04-20 23:53:19 -<==      Total: 1
2018-04-20 23:53:19 -请求地址 : http://localhost/login
2018-04-20 23:53:19 -HTTP METHOD : POST
2018-04-20 23:53:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-04-20 23:53:19 -参数 : [t2, 123456]
2018-04-20 23:53:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-04-20 23:53:19 -==> Parameters: t2(String)
2018-04-20 23:53:19 -<==      Total: 1
2018-04-20 23:53:19 -耗时 : 3
2018-04-20 23:53:19 -返回值 : {msg=操作成功, code=0}
2018-04-20 23:53:19 -请求地址 : http://localhost/index
2018-04-20 23:53:19 -HTTP METHOD : GET
2018-04-20 23:53:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-04-20 23:53:19 -参数 : [{}]
2018-04-20 23:53:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-04-20 23:53:19 -==> Parameters: 8(Long)
2018-04-20 23:53:19 -<==      Total: 8
2018-04-20 23:53:19 -耗时 : 3
2018-04-20 23:53:19 -返回值 : index_v1
2018-04-20 23:53:19 -请求地址 : http://localhost/main
2018-04-20 23:53:19 -HTTP METHOD : GET
2018-04-20 23:53:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:53:19 -参数 : []
2018-04-20 23:53:19 -耗时 : 0
2018-04-20 23:53:19 -返回值 : main
2018-04-20 23:53:19 -请求地址 : http://localhost/main
2018-04-20 23:53:19 -HTTP METHOD : GET
2018-04-20 23:53:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-04-20 23:53:19 -参数 : []
2018-04-20 23:53:19 -耗时 : 0
2018-04-20 23:53:19 -返回值 : main
2018-04-20 23:53:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-04-20 23:53:21 -==> Parameters: 8(Long)
2018-04-20 23:53:21 -<==      Total: 9
2018-04-20 23:53:21 -请求地址 : http://localhost/system/order/
2018-04-20 23:53:21 -HTTP METHOD : GET
2018-04-20 23:53:21 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:53:21 -参数 : []
2018-04-20 23:53:21 -耗时 : 1
2018-04-20 23:53:21 -返回值 : system/order/order
2018-04-20 23:53:22 -请求地址 : http://localhost/system/order/list
2018-04-20 23:53:22 -HTTP METHOD : GET
2018-04-20 23:53:22 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:53:22 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:53:22 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:53:22 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:22 -<==      Total: 4
2018-04-20 23:53:22 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:53:22 -==> Parameters: 
2018-04-20 23:53:22 -<==      Total: 1
2018-04-20 23:53:22 -耗时 : 4
2018-04-20 23:53:22 -返回值 : com.bootdo.common.utils.PageUtils@531127b5
2018-04-20 23:53:24 -请求地址 : http://localhost/system/good
2018-04-20 23:53:24 -HTTP METHOD : GET
2018-04-20 23:53:24 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:53:24 -参数 : []
2018-04-20 23:53:24 -耗时 : 1
2018-04-20 23:53:24 -返回值 : system/good/good
2018-04-20 23:53:24 -请求地址 : http://localhost/system/good/list
2018-04-20 23:53:24 -HTTP METHOD : GET
2018-04-20 23:53:24 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:53:24 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:53:24 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:53:24 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:24 -<==      Total: 5
2018-04-20 23:53:24 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:53:24 -==> Parameters: 
2018-04-20 23:53:24 -<==      Total: 1
2018-04-20 23:53:24 -耗时 : 5
2018-04-20 23:53:24 -返回值 : com.bootdo.common.utils.PageUtils@17c0d6ce
2018-04-20 23:53:27 -请求地址 : http://localhost/system/car
2018-04-20 23:53:27 -HTTP METHOD : GET
2018-04-20 23:53:27 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:53:27 -参数 : []
2018-04-20 23:53:27 -耗时 : 0
2018-04-20 23:53:27 -返回值 : system/car/car
2018-04-20 23:53:27 -请求地址 : http://localhost/system/car/list
2018-04-20 23:53:27 -HTTP METHOD : GET
2018-04-20 23:53:27 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:53:27 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:53:27 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:53:27 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:27 -<==      Total: 1
2018-04-20 23:53:27 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:53:27 -==> Parameters: 
2018-04-20 23:53:27 -<==      Total: 1
2018-04-20 23:53:27 -耗时 : 6
2018-04-20 23:53:27 -返回值 : com.bootdo.common.utils.PageUtils@316ec53c
2018-04-20 23:53:29 -请求地址 : http://localhost/system/logistics
2018-04-20 23:53:29 -HTTP METHOD : GET
2018-04-20 23:53:29 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2018-04-20 23:53:29 -参数 : []
2018-04-20 23:53:29 -耗时 : 1
2018-04-20 23:53:29 -返回值 : system/logistics/logistics
2018-04-20 23:53:29 -请求地址 : http://localhost/system/logistics/list
2018-04-20 23:53:29 -HTTP METHOD : GET
2018-04-20 23:53:29 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2018-04-20 23:53:29 -参数 : [{limit=10, offset=0, no=}]
2018-04-20 23:53:29 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date` from t_logistics order by id desc limit ?, ? 
2018-04-20 23:53:29 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:29 -<==      Total: 3
2018-04-20 23:53:29 -==>  Preparing: select count(*) from t_logistics 
2018-04-20 23:53:29 -==> Parameters: 
2018-04-20 23:53:29 -<==      Total: 1
2018-04-20 23:53:29 -耗时 : 10
2018-04-20 23:53:29 -返回值 : com.bootdo.common.utils.PageUtils@107f15fe
2018-04-20 23:53:36 -请求地址 : http://localhost/system/order/
2018-04-20 23:53:36 -HTTP METHOD : GET
2018-04-20 23:53:36 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2018-04-20 23:53:36 -参数 : []
2018-04-20 23:53:36 -耗时 : 0
2018-04-20 23:53:36 -返回值 : system/order/order
2018-04-20 23:53:36 -请求地址 : http://localhost/system/order/list
2018-04-20 23:53:36 -HTTP METHOD : GET
2018-04-20 23:53:36 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:53:36 -参数 : [{limit=10, offset=0, orderSn=}]
2018-04-20 23:53:36 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2018-04-20 23:53:36 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:36 -<==      Total: 4
2018-04-20 23:53:36 -==>  Preparing: select count(*) from t_order 
2018-04-20 23:53:36 -==> Parameters: 
2018-04-20 23:53:36 -<==      Total: 1
2018-04-20 23:53:36 -耗时 : 17
2018-04-20 23:53:36 -返回值 : com.bootdo.common.utils.PageUtils@259cdc38
2018-04-20 23:53:45 -请求地址 : http://localhost/system/order/list
2018-04-20 23:53:45 -HTTP METHOD : GET
2018-04-20 23:53:45 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2018-04-20 23:53:45 -参数 : [{limit=10, offset=0, orderSn=1524236279989}]
2018-04-20 23:53:45 -==>  Preparing: select `id`,`order_sn`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE order_sn like CONCAT('%', ?, '%') order by id desc limit ?, ? 
2018-04-20 23:53:45 -==> Parameters: 1524236279989(String), 0(Integer), 10(Integer)
2018-04-20 23:53:45 -<==      Total: 1
2018-04-20 23:53:45 -==>  Preparing: select count(*) from t_order WHERE order_sn = ? 
2018-04-20 23:53:45 -==> Parameters: 1524236279989(String)
2018-04-20 23:53:45 -<==      Total: 1
2018-04-20 23:53:45 -耗时 : 6
2018-04-20 23:53:45 -返回值 : com.bootdo.common.utils.PageUtils@7ad7ebe0
2018-04-20 23:53:48 -请求地址 : http://localhost/system/good
2018-04-20 23:53:48 -HTTP METHOD : GET
2018-04-20 23:53:48 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2018-04-20 23:53:48 -参数 : []
2018-04-20 23:53:48 -耗时 : 0
2018-04-20 23:53:48 -返回值 : system/good/good
2018-04-20 23:53:49 -请求地址 : http://localhost/system/good/list
2018-04-20 23:53:49 -HTTP METHOD : GET
2018-04-20 23:53:49 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:53:49 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:53:49 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:53:49 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:49 -<==      Total: 5
2018-04-20 23:53:49 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:53:49 -==> Parameters: 
2018-04-20 23:53:49 -<==      Total: 1
2018-04-20 23:53:49 -耗时 : 10
2018-04-20 23:53:49 -返回值 : com.bootdo.common.utils.PageUtils@5f8f5fe2
2018-04-20 23:53:53 -请求地址 : http://localhost/system/good/list
2018-04-20 23:53:53 -HTTP METHOD : GET
2018-04-20 23:53:53 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:53:53 -参数 : [{limit=10, offset=0, title=白菜}]
2018-04-20 23:53:53 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good WHERE title like CONCAT('%', ?, '%') order by id desc limit ?, ? 
2018-04-20 23:53:53 -==> Parameters: 白菜(String), 0(Integer), 10(Integer)
2018-04-20 23:53:53 -<==      Total: 1
2018-04-20 23:53:53 -==>  Preparing: select count(*) from t_good WHERE title like CONCAT('%', ?, '%') 
2018-04-20 23:53:53 -==> Parameters: 白菜(String)
2018-04-20 23:53:53 -<==      Total: 1
2018-04-20 23:53:53 -耗时 : 4
2018-04-20 23:53:53 -返回值 : com.bootdo.common.utils.PageUtils@23fe2c35
2018-04-20 23:53:58 -请求地址 : http://localhost/system/good/list
2018-04-20 23:53:58 -HTTP METHOD : GET
2018-04-20 23:53:58 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2018-04-20 23:53:58 -参数 : [{limit=10, offset=0, title=}]
2018-04-20 23:53:58 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2018-04-20 23:53:58 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:53:58 -<==      Total: 5
2018-04-20 23:53:58 -==>  Preparing: select count(*) from t_good 
2018-04-20 23:53:58 -==> Parameters: 
2018-04-20 23:53:58 -<==      Total: 1
2018-04-20 23:53:58 -耗时 : 4
2018-04-20 23:53:58 -返回值 : com.bootdo.common.utils.PageUtils@56e5b9cc
2018-04-20 23:54:00 -请求地址 : http://localhost/system/car
2018-04-20 23:54:00 -HTTP METHOD : GET
2018-04-20 23:54:00 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2018-04-20 23:54:00 -参数 : []
2018-04-20 23:54:00 -耗时 : 0
2018-04-20 23:54:00 -返回值 : system/car/car
2018-04-20 23:54:00 -请求地址 : http://localhost/system/car/list
2018-04-20 23:54:00 -HTTP METHOD : GET
2018-04-20 23:54:00 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:54:00 -参数 : [{limit=10, offset=0, name=}]
2018-04-20 23:54:00 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2018-04-20 23:54:00 -==> Parameters: 0(Integer), 10(Integer)
2018-04-20 23:54:00 -<==      Total: 1
2018-04-20 23:54:00 -==>  Preparing: select count(*) from t_car 
2018-04-20 23:54:00 -==> Parameters: 
2018-04-20 23:54:00 -<==      Total: 1
2018-04-20 23:54:00 -耗时 : 3
2018-04-20 23:54:00 -返回值 : com.bootdo.common.utils.PageUtils@28d4b29b
2018-04-20 23:54:06 -请求地址 : http://localhost/system/car/list
2018-04-20 23:54:06 -HTTP METHOD : GET
2018-04-20 23:54:06 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:54:06 -参数 : [{limit=10, offset=0, name=	东风货车}]
2018-04-20 23:54:06 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car WHERE name like CONCAT('%', ?, '%') order by id desc limit ?, ? 
2018-04-20 23:54:06 -==> Parameters: 	东风货车(String), 0(Integer), 10(Integer)
2018-04-20 23:54:06 -<==      Total: 0
2018-04-20 23:54:06 -==>  Preparing: select count(*) from t_car WHERE name like CONCAT('%', ?, '%') 
2018-04-20 23:54:06 -==> Parameters: 	东风货车(String)
2018-04-20 23:54:06 -<==      Total: 1
2018-04-20 23:54:06 -耗时 : 5
2018-04-20 23:54:06 -返回值 : com.bootdo.common.utils.PageUtils@6ef9ff29
2018-04-20 23:54:09 -请求地址 : http://localhost/system/car/list
2018-04-20 23:54:09 -HTTP METHOD : GET
2018-04-20 23:54:09 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2018-04-20 23:54:09 -参数 : [{limit=10, offset=0, name=东风货车}]
2018-04-20 23:54:09 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car WHERE name like CONCAT('%', ?, '%') order by id desc limit ?, ? 
2018-04-20 23:54:09 -==> Parameters: 东风货车(String), 0(Integer), 10(Integer)
2018-04-20 23:54:09 -<==      Total: 1
2018-04-20 23:54:09 -==>  Preparing: select count(*) from t_car WHERE name like CONCAT('%', ?, '%') 
2018-04-20 23:54:09 -==> Parameters: 东风货车(String)
2018-04-20 23:54:09 -<==      Total: 1
2018-04-20 23:54:09 -耗时 : 3
2018-04-20 23:54:09 -返回值 : com.bootdo.common.utils.PageUtils@5fb1de49
