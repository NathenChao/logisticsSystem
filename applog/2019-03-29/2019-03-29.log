2019-03-29 09:09:12 -Starting BootdoApplication on LAPTOP-6SM7DG5B with PID 5568 (F:\logisticsSystem\target\classes started by dc in F:\logisticsSystem)
2019-03-29 09:09:12 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-03-29 09:09:12 -The following profiles are active: dev
2019-03-29 09:09:13 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53ce1329: startup date [Fri Mar 29 09:09:13 CST 2019]; root of context hierarchy
2019-03-29 09:09:13 -HV000001: Hibernate Validator 5.3.6.Final
2019-03-29 09:09:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-29 09:09:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e330d321] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d58a01c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-29 09:09:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-29 09:09:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-29 09:09:16 -Tomcat initialized with port(s): 80 (http)
2019-03-29 09:09:16 -Starting service [Tomcat]
2019-03-29 09:09:16 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-03-29 09:09:16 -Initializing Spring embedded WebApplicationContext
2019-03-29 09:09:16 -Root WebApplicationContext: initialization completed in 3340 ms
2019-03-29 09:09:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-29 09:09:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-29 09:09:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-29 09:09:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-29 09:09:16 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-03-29 09:09:16 -Filter xssFilter was not registered (disabled)
2019-03-29 09:09:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-29 09:09:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-29 09:09:16 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-03-29 09:09:16 -Mapping servlet: 'dispatcherServlet' to [/]
2019-03-29 09:09:16 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53ce1329: startup date [Fri Mar 29 09:09:13 CST 2019]; root of context hierarchy
2019-03-29 09:09:17 -{dataSource-1} inited
2019-03-29 09:09:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-29 09:09:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-29 09:09:18 -Mapped "{[/system/car/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.add()
2019-03-29 09:09:18 -Mapped "{[/system/car/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/car/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/car/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.update(com.bootdo.system.domain.CarDO)
2019-03-29 09:09:18 -Mapped "{[/system/car/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CarController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/car/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CarController.save(com.bootdo.system.domain.CarDO)
2019-03-29 09:09:18 -Mapped "{[/system/car/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.view(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/car/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/car],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CarController.Car()
2019-03-29 09:09:18 -Mapped "{[/system/customer/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CustomerController.add()
2019-03-29 09:09:18 -Mapped "{[/system/customer/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CustomerController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/customer/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CustomerController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/customer/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CustomerController.update(com.bootdo.system.domain.CustomerDO)
2019-03-29 09:09:18 -Mapped "{[/system/customer/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.CustomerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/customer/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.CustomerController.save(com.bootdo.system.domain.CustomerDO)
2019-03-29 09:09:18 -Mapped "{[/system/customer/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CustomerController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/customer],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.CustomerController.Customer()
2019-03-29 09:09:18 -Mapped "{[/system/good/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.add()
2019-03-29 09:09:18 -Mapped "{[/system/good/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/good/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/good/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.update(com.bootdo.system.domain.GoodDO)
2019-03-29 09:09:18 -Mapped "{[/system/good/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.GoodController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/good/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.GoodController.save(com.bootdo.system.domain.GoodDO)
2019-03-29 09:09:18 -Mapped "{[/system/good/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.view(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/good/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/good],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.GoodController.Good()
2019-03-29 09:09:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-29 09:09:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-03-29 09:09:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-03-29 09:09:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-29 09:09:18 -Mapped "{[/system/logistics/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.add()
2019-03-29 09:09:18 -Mapped "{[/system/logistics/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/logistics/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/logistics/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.update(com.bootdo.system.domain.LogisticsDO)
2019-03-29 09:09:18 -Mapped "{[/system/logistics/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/logistics/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsController.save(com.bootdo.system.domain.LogisticsDO)
2019-03-29 09:09:18 -Mapped "{[/system/logistics/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.view(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/logistics/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/logistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsController.Logistics()
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.add()
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.update(com.bootdo.system.domain.LogisticsManageDO)
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.LogisticsManageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.LogisticsManageController.save(com.bootdo.system.domain.LogisticsManageDO)
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/logisticsManage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LogisticsManageController.LogisticsManage()
2019-03-29 09:09:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-29 09:09:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-29 09:09:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-29 09:09:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/order/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.add()
2019-03-29 09:09:18 -Mapped "{[/system/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.update(com.bootdo.system.domain.OrderDO)
2019-03-29 09:09:18 -Mapped "{[/system/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderController.save(com.bootdo.system.domain.OrderDO)
2019-03-29 09:09:18 -Mapped "{[/system/order/view/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.view(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/order],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.Order()
2019-03-29 09:09:18 -Mapped "{[/system/order/statistics],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderController.statistics()
2019-03-29 09:09:18 -Mapped "{[/system/order/statisticsList],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderController.statisticsList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.add()
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.update(com.bootdo.system.domain.OrderSettlementDO)
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.OrderSettlementController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.OrderSettlementController.save(com.bootdo.system.domain.OrderSettlementDO)
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/orderSettlement],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.OrderSettlementController.OrderSettlement()
2019-03-29 09:09:18 -Mapped "{[/register/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.RegisterController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/register/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RegisterController.save(com.bootdo.system.domain.UserDO)
2019-03-29 09:09:18 -Mapped "{[/register],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegisterController.user(org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-29 09:09:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-29 09:09:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-29 09:09:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-29 09:09:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-29 09:09:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-29 09:09:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-29 09:09:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-29 09:09:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-29 09:09:18 -Mapped "{[/system/storage/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.add()
2019-03-29 09:09:18 -Mapped "{[/system/storage/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/storage/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/storage/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.update(com.bootdo.system.domain.StorageDO)
2019-03-29 09:09:18 -Mapped "{[/system/storage/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/storage/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageController.save(com.bootdo.system.domain.StorageDO)
2019-03-29 09:09:18 -Mapped "{[/system/storage/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/storage],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageController.Storage()
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.add()
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.update(com.bootdo.system.domain.StorageInputDO)
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageInputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageInputController.save(com.bootdo.system.domain.StorageInputDO)
2019-03-29 09:09:18 -Mapped "{[/system/storageInput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/storageInput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageInputController.StorageInput()
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.add()
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.remove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.update(com.bootdo.system.domain.StorageOutputDO)
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StorageOutputController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StorageOutputController.save(com.bootdo.system.domain.StorageOutputDO)
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/system/storageOutput],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StorageOutputController.StorageOutput()
2019-03-29 09:09:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-29 09:09:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-29 09:09:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-29 09:09:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-29 09:09:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-29 09:09:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-29 09:09:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-29 09:09:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-29 09:09:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-29 09:09:19 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-29 09:09:19 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-29 09:09:19 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-29 09:09:19 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-29 09:09:19 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-29 09:09:19 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-29 09:09:19 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-29 09:09:19 -Using default implementation for ThreadExecutor
2019-03-29 09:09:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-29 09:09:19 -Quartz Scheduler v.2.2.1 created.
2019-03-29 09:09:19 -RAMJobStore initialized.
2019-03-29 09:09:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-29 09:09:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-29 09:09:19 -Quartz scheduler version: 2.2.1
2019-03-29 09:09:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@28831d69
2019-03-29 09:09:19 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53ce1329: startup date [Fri Mar 29 09:09:13 CST 2019]; root of context hierarchy
2019-03-29 09:09:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-29 09:09:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-29 09:09:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-29 09:09:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-29 09:09:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-29 09:09:21 -

Using default security password: cb768ffe-561e-4bbd-a5d6-4810222e5684

2019-03-29 09:09:21 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-03-29 09:09:21 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3e9b3b3c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c97f5e9, org.springframework.security.web.context.SecurityContextPersistenceFilter@c1a74d, org.springframework.security.web.header.HeaderWriterFilter@12e2f5ab, org.springframework.security.web.csrf.CsrfFilter@14b26e90, org.springframework.security.web.authentication.logout.LogoutFilter@2864d34d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7482309c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43294e9b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@32e7b78d, org.springframework.security.web.session.SessionManagementFilter@e993715, org.springframework.security.web.access.ExceptionTranslationFilter@25df2014]
2019-03-29 09:09:21 -Registering beans for JMX exposure on startup
2019-03-29 09:09:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-29 09:09:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-29 09:09:21 -Starting beans in phase 2147483647
2019-03-29 09:09:21 -Context refreshed
2019-03-29 09:09:21 -Found 1 custom documentation plugin(s)
2019-03-29 09:09:21 -Scanning for api listing references
2019-03-29 09:09:21 -Generating unique operation named: removeUsingPOST_1
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_2
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_3
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_1
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_2
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_2
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_2
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_4
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_5
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_2
2019-03-29 09:09:22 -Generating unique operation named: viewUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: welcomeUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_3
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_3
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_3
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_6
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_7
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_3
2019-03-29 09:09:22 -Generating unique operation named: viewUsingGET_2
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_4
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_4
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_4
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_8
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_9
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_4
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_5
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_5
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_5
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_10
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_5
2019-03-29 09:09:22 -Generating unique operation named: treeUsingGET_1
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_5
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_6
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_6
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_6
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_11
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_12
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_5
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_5
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_5
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_5
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_5
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_5
2019-03-29 09:09:22 -Generating unique operation named: viewUsingGET_3
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_7
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_7
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_7
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_13
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_14
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_6
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_8
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_8
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_8
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_8
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_9
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_10
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_8
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_9
2019-03-29 09:09:22 -Generating unique operation named: listUsingHEAD_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingPOST_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingPUT_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingPATCH_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingDELETE_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingOPTIONS_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingTRACE_1
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_9
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_9
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_10
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_15
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_16
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_11
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_7
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_10
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_10
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_11
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_17
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_18
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_12
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_8
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_8
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_10
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_8
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_8
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_8
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_8
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_11
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_11
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_12
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_19
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_20
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_13
2019-03-29 09:09:22 -Generating unique operation named: updateUsingGET_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingHEAD_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_11
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPUT_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPATCH_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingDELETE_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-29 09:09:22 -Generating unique operation named: updateUsingTRACE_9
2019-03-29 09:09:22 -Generating unique operation named: addUsingGET_12
2019-03-29 09:09:22 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-29 09:09:22 -Generating unique operation named: editUsingGET_12
2019-03-29 09:09:22 -Generating unique operation named: exitUsingPOST_1
2019-03-29 09:09:22 -Generating unique operation named: listUsingGET_13
2019-03-29 09:09:22 -Generating unique operation named: removeUsingPOST_21
2019-03-29 09:09:22 -Generating unique operation named: saveUsingPOST_14
2019-03-29 09:09:22 -Generating unique operation named: updateUsingPOST_12
2019-03-29 09:09:22 -Generating unique operation named: userUsingGET_1
2019-03-29 09:09:22 -Starting Quartz Scheduler now
2019-03-29 09:09:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-29 09:09:22 -Initializing ProtocolHandler ["http-nio-80"]
2019-03-29 09:09:22 -Starting ProtocolHandler ["http-nio-80"]
2019-03-29 09:09:22 -Using a shared selector for servlet write/read
2019-03-29 09:09:22 -Tomcat started on port(s): 80 (http)
2019-03-29 09:09:22 -Started BootdoApplication in 10.474 seconds (JVM running for 11.079)
2019-03-29 09:09:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-29 09:09:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-29 09:09:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2019-03-29 09:09:29 -Enabling session validation scheduler...
2019-03-29 09:09:29 -请求地址 : http://localhost/login
2019-03-29 09:09:29 -HTTP METHOD : GET
2019-03-29 09:09:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-29 09:09:29 -参数 : []
2019-03-29 09:09:29 -耗时 : 1
2019-03-29 09:09:29 -返回值 : login
2019-03-29 09:09:29 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-03-29 09:09:29 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-03-29 09:09:29 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-03-29 09:09:29 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-03-29 09:09:29 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-03-29 09:09:29 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-03-29 09:09:29 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-03-29 09:09:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 09:09:32 -==> Parameters: admin(String)
2019-03-29 09:09:32 -<==      Total: 1
2019-03-29 09:09:32 -请求地址 : http://localhost/login
2019-03-29 09:09:32 -HTTP METHOD : POST
2019-03-29 09:09:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-29 09:09:32 -参数 : [admin, 123456]
2019-03-29 09:09:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 09:09:32 -==> Parameters: admin(String)
2019-03-29 09:09:32 -<==      Total: 1
2019-03-29 09:09:32 -耗时 : 17
2019-03-29 09:09:32 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:09:32 -请求地址 : http://localhost/index
2019-03-29 09:09:32 -HTTP METHOD : GET
2019-03-29 09:09:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-29 09:09:32 -参数 : [{}]
2019-03-29 09:09:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-29 09:09:32 -==> Parameters: 1(Long)
2019-03-29 09:09:32 -<==      Total: 20
2019-03-29 09:09:32 -耗时 : 57
2019-03-29 09:09:32 -返回值 : index_v1
2019-03-29 09:09:32 -请求地址 : http://localhost/main
2019-03-29 09:09:32 -HTTP METHOD : GET
2019-03-29 09:09:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 09:09:32 -参数 : []
2019-03-29 09:09:32 -耗时 : 0
2019-03-29 09:09:32 -返回值 : main
2019-03-29 09:09:32 -请求地址 : http://localhost/main
2019-03-29 09:09:32 -HTTP METHOD : GET
2019-03-29 09:09:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 09:09:32 -参数 : []
2019-03-29 09:09:32 -耗时 : 1
2019-03-29 09:09:32 -返回值 : main
2019-03-29 09:09:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 09:09:35 -==> Parameters: 1(Long)
2019-03-29 09:09:35 -<==      Total: 57
2019-03-29 09:09:35 -请求地址 : http://localhost/sys/user/
2019-03-29 09:09:35 -HTTP METHOD : GET
2019-03-29 09:09:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-29 09:09:35 -参数 : [{}]
2019-03-29 09:09:35 -耗时 : 0
2019-03-29 09:09:35 -返回值 : system/user/user
2019-03-29 09:09:35 -请求地址 : http://localhost/sys/user/list
2019-03-29 09:09:35 -HTTP METHOD : GET
2019-03-29 09:09:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-29 09:09:35 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 09:09:35 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-29 09:09:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:09:35 -<==      Total: 2
2019-03-29 09:09:35 -==>  Preparing: select count(*) from sys_user 
2019-03-29 09:09:35 -==> Parameters: 
2019-03-29 09:09:35 -<==      Total: 1
2019-03-29 09:09:35 -耗时 : 22
2019-03-29 09:09:35 -返回值 : com.bootdo.common.utils.PageUtils@75335e74
2019-03-29 09:42:38 -请求地址 : http://localhost/login;JSESSIONID=f5c28d26-f409-4c2c-90b4-6656ca6e625d
2019-03-29 09:42:38 -HTTP METHOD : GET
2019-03-29 09:42:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-29 09:42:38 -参数 : []
2019-03-29 09:42:38 -耗时 : 1
2019-03-29 09:42:38 -返回值 : login
2019-03-29 09:42:38 -请求地址 : http://localhost/login;JSESSIONID=f5c28d26-f409-4c2c-90b4-6656ca6e625d
2019-03-29 09:42:38 -HTTP METHOD : GET
2019-03-29 09:42:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-29 09:42:38 -参数 : []
2019-03-29 09:42:38 -耗时 : 1
2019-03-29 09:42:38 -返回值 : login
2019-03-29 09:42:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 09:42:41 -==> Parameters: admin(String)
2019-03-29 09:42:41 -<==      Total: 1
2019-03-29 09:42:41 -请求地址 : http://localhost/login
2019-03-29 09:42:41 -HTTP METHOD : POST
2019-03-29 09:42:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-29 09:42:41 -参数 : [admin, 123456]
2019-03-29 09:42:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 09:42:41 -==> Parameters: admin(String)
2019-03-29 09:42:41 -<==      Total: 1
2019-03-29 09:42:41 -耗时 : 6
2019-03-29 09:42:41 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:42:41 -请求地址 : http://localhost/index
2019-03-29 09:42:41 -HTTP METHOD : GET
2019-03-29 09:42:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-29 09:42:41 -参数 : [{}]
2019-03-29 09:42:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-29 09:42:41 -==> Parameters: 1(Long)
2019-03-29 09:42:41 -<==      Total: 20
2019-03-29 09:42:41 -耗时 : 8
2019-03-29 09:42:41 -返回值 : index_v1
2019-03-29 09:42:41 -请求地址 : http://localhost/main
2019-03-29 09:42:41 -HTTP METHOD : GET
2019-03-29 09:42:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 09:42:41 -参数 : []
2019-03-29 09:42:41 -耗时 : 1
2019-03-29 09:42:41 -返回值 : main
2019-03-29 09:42:41 -请求地址 : http://localhost/main
2019-03-29 09:42:41 -HTTP METHOD : GET
2019-03-29 09:42:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 09:42:41 -参数 : []
2019-03-29 09:42:41 -耗时 : 0
2019-03-29 09:42:41 -返回值 : main
2019-03-29 09:42:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 09:42:43 -==> Parameters: 1(Long)
2019-03-29 09:42:43 -<==      Total: 57
2019-03-29 09:42:43 -请求地址 : http://localhost/system/customer
2019-03-29 09:42:43 -HTTP METHOD : GET
2019-03-29 09:42:43 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.Customer
2019-03-29 09:42:43 -参数 : []
2019-03-29 09:42:43 -耗时 : 1
2019-03-29 09:42:43 -返回值 : system/customer/customer
2019-03-29 09:42:43 -请求地址 : http://localhost/system/customer/list
2019-03-29 09:42:43 -HTTP METHOD : GET
2019-03-29 09:42:43 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.list
2019-03-29 09:42:43 -参数 : [{limit=10, offset=0, number=}]
2019-03-29 09:42:43 -==>  Preparing: select `id`,`name`,`number`,`telephone`,`email`,`address`,`company` from t_customer order by id desc limit ?, ? 
2019-03-29 09:42:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:42:43 -<==      Total: 1
2019-03-29 09:42:43 -==>  Preparing: select count(*) from t_customer 
2019-03-29 09:42:43 -==> Parameters: 
2019-03-29 09:42:43 -<==      Total: 1
2019-03-29 09:42:43 -耗时 : 20
2019-03-29 09:42:43 -返回值 : com.bootdo.common.utils.PageUtils@51b4fd7b
2019-03-29 09:42:54 -请求地址 : http://localhost/system/logistics
2019-03-29 09:42:54 -HTTP METHOD : GET
2019-03-29 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2019-03-29 09:42:54 -参数 : []
2019-03-29 09:42:54 -耗时 : 1
2019-03-29 09:42:54 -返回值 : system/logistics/logistics
2019-03-29 09:42:54 -请求地址 : http://localhost/system/logistics/list
2019-03-29 09:42:54 -HTTP METHOD : GET
2019-03-29 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 09:42:54 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 09:42:54 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 09:42:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:42:54 -<==      Total: 3
2019-03-29 09:42:54 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 09:42:54 -==> Parameters: 
2019-03-29 09:42:54 -<==      Total: 1
2019-03-29 09:42:54 -耗时 : 29
2019-03-29 09:42:54 -返回值 : com.bootdo.common.utils.PageUtils@704ab23f
2019-03-29 09:43:04 -请求地址 : http://localhost/system/logistics/view/3
2019-03-29 09:43:04 -HTTP METHOD : GET
2019-03-29 09:43:04 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.view
2019-03-29 09:43:04 -参数 : [3, {}]
2019-03-29 09:43:04 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics where id = ? 
2019-03-29 09:43:04 -==> Parameters: 3(Long)
2019-03-29 09:43:04 -<==      Total: 1
2019-03-29 09:43:04 -耗时 : 4
2019-03-29 09:43:04 -返回值 : system/logistics/view
2019-03-29 09:43:26 -请求地址 : http://localhost/system/logisticsManage
2019-03-29 09:43:26 -HTTP METHOD : GET
2019-03-29 09:43:26 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2019-03-29 09:43:26 -参数 : []
2019-03-29 09:43:26 -耗时 : 1
2019-03-29 09:43:26 -返回值 : system/logisticsManage/logisticsManage
2019-03-29 09:43:26 -请求地址 : http://localhost/system/logisticsManage/list
2019-03-29 09:43:26 -HTTP METHOD : GET
2019-03-29 09:43:26 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2019-03-29 09:43:26 -参数 : [{limit=10, offset=0}]
2019-03-29 09:43:26 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2019-03-29 09:43:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:43:26 -<==      Total: 3
2019-03-29 09:43:26 -==>  Preparing: select count(*) from t_logistics_manage 
2019-03-29 09:43:26 -==> Parameters: 
2019-03-29 09:43:26 -<==      Total: 1
2019-03-29 09:43:26 -耗时 : 28
2019-03-29 09:43:26 -返回值 : com.bootdo.common.utils.PageUtils@2789b2f2
2019-03-29 09:43:47 -请求地址 : http://localhost/system/order/statistics
2019-03-29 09:43:47 -HTTP METHOD : GET
2019-03-29 09:43:47 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2019-03-29 09:43:47 -参数 : []
2019-03-29 09:43:47 -耗时 : 0
2019-03-29 09:43:47 -返回值 : system/order/statistics
2019-03-29 09:43:47 -请求地址 : http://localhost/system/order/statisticsList
2019-03-29 09:43:47 -HTTP METHOD : GET
2019-03-29 09:43:47 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2019-03-29 09:43:47 -参数 : [{limit=10, offset=0}]
2019-03-29 09:43:47 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2019-03-29 09:43:47 -==> Parameters: 
2019-03-29 09:43:47 -<==      Total: 2
2019-03-29 09:43:47 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2019-03-29 09:43:47 -==> Parameters: 
2019-03-29 09:43:47 -<==      Total: 1
2019-03-29 09:43:47 -耗时 : 19
2019-03-29 09:43:47 -返回值 : com.bootdo.common.utils.PageUtils@ac190f
2019-03-29 09:43:52 -请求地址 : http://localhost/system/orderSettlement
2019-03-29 09:43:52 -HTTP METHOD : GET
2019-03-29 09:43:52 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2019-03-29 09:43:52 -参数 : []
2019-03-29 09:43:52 -耗时 : 1
2019-03-29 09:43:52 -返回值 : system/orderSettlement/orderSettlement
2019-03-29 09:43:52 -请求地址 : http://localhost/system/orderSettlement/list
2019-03-29 09:43:52 -HTTP METHOD : GET
2019-03-29 09:43:52 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2019-03-29 09:43:52 -参数 : [{limit=10, offset=0}]
2019-03-29 09:43:52 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2019-03-29 09:43:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:43:52 -<==      Total: 3
2019-03-29 09:43:52 -==>  Preparing: select count(*) from t_order_settlement 
2019-03-29 09:43:52 -==> Parameters: 
2019-03-29 09:43:52 -<==      Total: 1
2019-03-29 09:43:52 -耗时 : 20
2019-03-29 09:43:52 -返回值 : com.bootdo.common.utils.PageUtils@56fb3dfd
2019-03-29 09:45:53 -请求地址 : http://localhost/sys/user/
2019-03-29 09:45:53 -HTTP METHOD : GET
2019-03-29 09:45:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-29 09:45:53 -参数 : [{}]
2019-03-29 09:45:53 -耗时 : 1
2019-03-29 09:45:53 -返回值 : system/user/user
2019-03-29 09:45:53 -请求地址 : http://localhost/sys/user/list
2019-03-29 09:45:53 -HTTP METHOD : GET
2019-03-29 09:45:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-29 09:45:53 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 09:45:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-29 09:45:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:45:53 -<==      Total: 2
2019-03-29 09:45:53 -==>  Preparing: select count(*) from sys_user 
2019-03-29 09:45:53 -==> Parameters: 
2019-03-29 09:45:53 -<==      Total: 1
2019-03-29 09:45:53 -耗时 : 7
2019-03-29 09:45:53 -返回值 : com.bootdo.common.utils.PageUtils@3f894cdd
2019-03-29 09:46:01 -请求地址 : http://localhost/sys/user/
2019-03-29 09:46:01 -HTTP METHOD : GET
2019-03-29 09:46:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-29 09:46:01 -参数 : [{}]
2019-03-29 09:46:01 -耗时 : 1
2019-03-29 09:46:01 -返回值 : system/user/user
2019-03-29 09:46:01 -请求地址 : http://localhost/sys/user/list
2019-03-29 09:46:01 -HTTP METHOD : GET
2019-03-29 09:46:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-29 09:46:01 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 09:46:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-29 09:46:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:46:01 -<==      Total: 2
2019-03-29 09:46:01 -==>  Preparing: select count(*) from sys_user 
2019-03-29 09:46:01 -==> Parameters: 
2019-03-29 09:46:01 -<==      Total: 1
2019-03-29 09:46:01 -耗时 : 7
2019-03-29 09:46:01 -返回值 : com.bootdo.common.utils.PageUtils@36b766e6
2019-03-29 09:46:05 -请求地址 : http://localhost/sys/role
2019-03-29 09:46:05 -HTTP METHOD : GET
2019-03-29 09:46:05 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-29 09:46:05 -参数 : []
2019-03-29 09:46:05 -耗时 : 1
2019-03-29 09:46:05 -返回值 : system/role/role
2019-03-29 09:46:05 -请求地址 : http://localhost/sys/role/list
2019-03-29 09:46:05 -HTTP METHOD : GET
2019-03-29 09:46:05 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-29 09:46:05 -参数 : []
2019-03-29 09:46:05 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-29 09:46:05 -==> Parameters: 
2019-03-29 09:46:05 -<==      Total: 2
2019-03-29 09:46:05 -耗时 : 10
2019-03-29 09:46:05 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-29 09:46:14 -请求地址 : http://localhost/system/customer
2019-03-29 09:46:14 -HTTP METHOD : GET
2019-03-29 09:46:14 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.Customer
2019-03-29 09:46:14 -参数 : []
2019-03-29 09:46:14 -耗时 : 1
2019-03-29 09:46:14 -返回值 : system/customer/customer
2019-03-29 09:46:14 -请求地址 : http://localhost/system/customer/list
2019-03-29 09:46:14 -HTTP METHOD : GET
2019-03-29 09:46:14 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.list
2019-03-29 09:46:14 -参数 : [{limit=10, offset=0, number=}]
2019-03-29 09:46:14 -==>  Preparing: select `id`,`name`,`number`,`telephone`,`email`,`address`,`company` from t_customer order by id desc limit ?, ? 
2019-03-29 09:46:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:46:14 -<==      Total: 1
2019-03-29 09:46:14 -==>  Preparing: select count(*) from t_customer 
2019-03-29 09:46:14 -==> Parameters: 
2019-03-29 09:46:14 -<==      Total: 1
2019-03-29 09:46:14 -耗时 : 6
2019-03-29 09:46:14 -返回值 : com.bootdo.common.utils.PageUtils@668a1d96
2019-03-29 09:46:22 -请求地址 : http://localhost/system/customer/add
2019-03-29 09:46:22 -HTTP METHOD : GET
2019-03-29 09:46:22 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.add
2019-03-29 09:46:22 -参数 : []
2019-03-29 09:46:22 -耗时 : 0
2019-03-29 09:46:22 -返回值 : system/customer/add
2019-03-29 09:46:55 -请求地址 : http://localhost/system/customer/save
2019-03-29 09:46:55 -HTTP METHOD : POST
2019-03-29 09:46:55 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.save
2019-03-29 09:46:55 -参数 : [com.bootdo.system.domain.CustomerDO@4bf0a976]
2019-03-29 09:46:55 -==>  Preparing: insert into t_customer ( `name`, `number`, `telephone`, `email`, `address`, `company` ) values ( ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:46:55 -==> Parameters: 惠新然(String), 123456(String), 123456(String), 277031256@qq.com(String), 南广学院(String), 江苏万和(String)
2019-03-29 09:46:55 -<==    Updates: 1
2019-03-29 09:46:55 -耗时 : 5
2019-03-29 09:46:55 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:46:55 -请求地址 : http://localhost/system/customer/list
2019-03-29 09:46:55 -HTTP METHOD : GET
2019-03-29 09:46:55 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.list
2019-03-29 09:46:55 -参数 : [{limit=10, offset=0, number=}]
2019-03-29 09:46:55 -==>  Preparing: select `id`,`name`,`number`,`telephone`,`email`,`address`,`company` from t_customer order by id desc limit ?, ? 
2019-03-29 09:46:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:46:55 -<==      Total: 2
2019-03-29 09:46:55 -==>  Preparing: select count(*) from t_customer 
2019-03-29 09:46:55 -==> Parameters: 
2019-03-29 09:46:55 -<==      Total: 1
2019-03-29 09:46:55 -耗时 : 4
2019-03-29 09:46:55 -返回值 : com.bootdo.common.utils.PageUtils@5e629638
2019-03-29 09:47:03 -请求地址 : http://localhost/system/customer/remove
2019-03-29 09:47:03 -HTTP METHOD : POST
2019-03-29 09:47:03 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.remove
2019-03-29 09:47:03 -参数 : [1]
2019-03-29 09:47:03 -==>  Preparing: delete from t_customer where id = ? 
2019-03-29 09:47:03 -==> Parameters: 1(Long)
2019-03-29 09:47:03 -<==    Updates: 1
2019-03-29 09:47:03 -耗时 : 31
2019-03-29 09:47:03 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:47:03 -请求地址 : http://localhost/system/customer/list
2019-03-29 09:47:03 -HTTP METHOD : GET
2019-03-29 09:47:03 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.list
2019-03-29 09:47:03 -参数 : [{limit=10, offset=0, number=}]
2019-03-29 09:47:03 -==>  Preparing: select `id`,`name`,`number`,`telephone`,`email`,`address`,`company` from t_customer order by id desc limit ?, ? 
2019-03-29 09:47:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:47:03 -<==      Total: 1
2019-03-29 09:47:03 -==>  Preparing: select count(*) from t_customer 
2019-03-29 09:47:03 -==> Parameters: 
2019-03-29 09:47:03 -<==      Total: 1
2019-03-29 09:47:03 -耗时 : 3
2019-03-29 09:47:03 -返回值 : com.bootdo.common.utils.PageUtils@74f7e27d
2019-03-29 09:47:15 -请求地址 : http://localhost/system/order/
2019-03-29 09:47:15 -HTTP METHOD : GET
2019-03-29 09:47:15 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2019-03-29 09:47:15 -参数 : []
2019-03-29 09:47:15 -耗时 : 0
2019-03-29 09:47:15 -返回值 : system/order/order
2019-03-29 09:47:15 -请求地址 : http://localhost/system/order/list
2019-03-29 09:47:15 -HTTP METHOD : GET
2019-03-29 09:47:15 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 09:47:15 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 09:47:15 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 09:47:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:47:15 -<==      Total: 4
2019-03-29 09:47:15 -==>  Preparing: select count(*) from t_order 
2019-03-29 09:47:15 -==> Parameters: 
2019-03-29 09:47:15 -<==      Total: 1
2019-03-29 09:47:15 -耗时 : 7
2019-03-29 09:47:15 -返回值 : com.bootdo.common.utils.PageUtils@b23f34a
2019-03-29 09:47:26 -请求地址 : http://localhost/system/order/add
2019-03-29 09:47:26 -HTTP METHOD : GET
2019-03-29 09:47:26 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2019-03-29 09:47:26 -参数 : []
2019-03-29 09:47:26 -耗时 : 1
2019-03-29 09:47:26 -返回值 : system/order/add
2019-03-29 09:48:14 -请求地址 : http://localhost/system/order/save
2019-03-29 09:48:14 -HTTP METHOD : POST
2019-03-29 09:48:14 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 09:48:14 -参数 : [com.bootdo.system.domain.OrderDO@5cc5b7d6]
2019-03-29 09:48:14 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:48:14 -==> Parameters: 1553824094668(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 123(String), null, 2019-03-29 09:48:14.668(Timestamp), 0(Integer), 111(String), 1234(String), 手机(String)
2019-03-29 09:48:14 -{conn-10001, pstmt-20021} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 09:48:14 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-29 09:48:14 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2019-03-29 09:48:14 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 09:48:39 -请求地址 : http://localhost/system/order/save
2019-03-29 09:48:39 -HTTP METHOD : POST
2019-03-29 09:48:39 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 09:48:39 -参数 : [com.bootdo.system.domain.OrderDO@536f5b44]
2019-03-29 09:48:39 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:48:39 -==> Parameters: 1553824119843(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 123(String), null, 2019-03-29 09:48:39.843(Timestamp), 0(Integer), 111(String), 1234(String), 手机(String)
2019-03-29 09:48:39 -{conn-10001, pstmt-20022} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 09:48:39 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 09:48:54 -请求地址 : http://localhost/system/order/save
2019-03-29 09:48:54 -HTTP METHOD : POST
2019-03-29 09:48:54 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 09:48:54 -参数 : [com.bootdo.system.domain.OrderDO@1f4fcbce]
2019-03-29 09:48:54 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:48:54 -==> Parameters: 1553824134960(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 123(String), null, 2019-03-29 09:48:54.96(Timestamp), 0(Integer), 111(String), 1234(String), 手机(String)
2019-03-29 09:48:54 -{conn-10001, pstmt-20023} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 09:48:54 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 09:49:01 -请求地址 : http://localhost/system/storageInput
2019-03-29 09:49:01 -HTTP METHOD : GET
2019-03-29 09:49:01 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2019-03-29 09:49:01 -参数 : []
2019-03-29 09:49:01 -耗时 : 1
2019-03-29 09:49:01 -返回值 : system/storageInput/storageInput
2019-03-29 09:49:01 -请求地址 : http://localhost/system/storageInput/list
2019-03-29 09:49:01 -HTTP METHOD : GET
2019-03-29 09:49:01 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2019-03-29 09:49:01 -参数 : [{limit=10, offset=0}]
2019-03-29 09:49:01 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2019-03-29 09:49:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:49:01 -<==      Total: 4
2019-03-29 09:49:01 -==>  Preparing: select count(*) from t_storage_input 
2019-03-29 09:49:01 -==> Parameters: 
2019-03-29 09:49:01 -<==      Total: 1
2019-03-29 09:49:01 -耗时 : 19
2019-03-29 09:49:01 -返回值 : com.bootdo.common.utils.PageUtils@55934503
2019-03-29 09:49:05 -请求地址 : http://localhost/system/storageInput/add
2019-03-29 09:49:05 -HTTP METHOD : GET
2019-03-29 09:49:05 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.add
2019-03-29 09:49:05 -参数 : []
2019-03-29 09:49:05 -耗时 : 1
2019-03-29 09:49:05 -返回值 : system/storageInput/add
2019-03-29 09:49:21 -请求地址 : http://localhost/system/storageInput/save
2019-03-29 09:49:21 -HTTP METHOD : POST
2019-03-29 09:49:21 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.save
2019-03-29 09:49:21 -参数 : [com.bootdo.system.domain.StorageInputDO@c152f9a]
2019-03-29 09:49:21 -==>  Preparing: insert into t_storage_input ( `good_name`, `good_number`, `good_price`, `good_count`, `create_date` ) values ( ?, ?, ?, ?, ? ) 
2019-03-29 09:49:21 -==> Parameters: 手机(String), 1234(String), 8000.0(Double), 3(Integer), 2019-03-29 09:49:21.591(Timestamp)
2019-03-29 09:49:21 -<==    Updates: 1
2019-03-29 09:49:21 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2019-03-29 09:49:21 -==> Parameters: 手机(String), 1234(String)
2019-03-29 09:49:21 -<==      Total: 0
2019-03-29 09:49:21 -耗时 : 27
2019-03-29 09:49:21 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:49:21 -请求地址 : http://localhost/system/storageInput/list
2019-03-29 09:49:21 -HTTP METHOD : GET
2019-03-29 09:49:21 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2019-03-29 09:49:21 -参数 : [{limit=10, offset=0}]
2019-03-29 09:49:21 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2019-03-29 09:49:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:49:21 -<==      Total: 5
2019-03-29 09:49:21 -==>  Preparing: select count(*) from t_storage_input 
2019-03-29 09:49:21 -==> Parameters: 
2019-03-29 09:49:21 -<==      Total: 1
2019-03-29 09:49:21 -耗时 : 4
2019-03-29 09:49:21 -返回值 : com.bootdo.common.utils.PageUtils@1c7ea02f
2019-03-29 09:49:25 -请求地址 : http://localhost/system/order/add
2019-03-29 09:49:25 -HTTP METHOD : GET
2019-03-29 09:49:25 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2019-03-29 09:49:25 -参数 : []
2019-03-29 09:49:25 -耗时 : 1
2019-03-29 09:49:25 -返回值 : system/order/add
2019-03-29 09:49:50 -请求地址 : http://localhost/system/order/save
2019-03-29 09:49:50 -HTTP METHOD : POST
2019-03-29 09:49:50 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 09:49:50 -参数 : [com.bootdo.system.domain.OrderDO@34d5a2d8]
2019-03-29 09:49:50 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:49:50 -==> Parameters: 1553824190856(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 123(String), null, 2019-03-29 09:49:50.856(Timestamp), 0(Integer), 111(String), 1234(String), 手机(String)
2019-03-29 09:49:50 -{conn-10001, pstmt-20028} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 09:49:50 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 09:50:03 -请求地址 : http://localhost/system/order/save
2019-03-29 09:50:03 -HTTP METHOD : POST
2019-03-29 09:50:03 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 09:50:03 -参数 : [com.bootdo.system.domain.OrderDO@4423c2c3]
2019-03-29 09:50:03 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:50:03 -==> Parameters: 1553824203227(String), 惠新然(String), 16000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 123(String), null, 2019-03-29 09:50:03.227(Timestamp), 0(Integer), 111(String), 1234(String), 手机(String)
2019-03-29 09:50:03 -{conn-10001, pstmt-20029} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 09:50:03 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 09:50:54 -请求地址 : http://localhost/system/storageOutput
2019-03-29 09:50:54 -HTTP METHOD : GET
2019-03-29 09:50:54 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2019-03-29 09:50:54 -参数 : []
2019-03-29 09:50:54 -耗时 : 0
2019-03-29 09:50:54 -返回值 : system/storageOutput/storageOutput
2019-03-29 09:50:54 -请求地址 : http://localhost/system/storageOutput/list
2019-03-29 09:50:54 -HTTP METHOD : GET
2019-03-29 09:50:54 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2019-03-29 09:50:54 -参数 : [{limit=10, offset=0}]
2019-03-29 09:50:54 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2019-03-29 09:50:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:50:54 -<==      Total: 3
2019-03-29 09:50:54 -==>  Preparing: select count(*) from t_storage_output 
2019-03-29 09:50:54 -==> Parameters: 
2019-03-29 09:50:54 -<==      Total: 1
2019-03-29 09:50:54 -耗时 : 17
2019-03-29 09:50:54 -返回值 : com.bootdo.common.utils.PageUtils@6dad7c0c
2019-03-29 09:50:58 -请求地址 : http://localhost/system/storageOutput/edit/3
2019-03-29 09:50:58 -HTTP METHOD : GET
2019-03-29 09:50:58 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.edit
2019-03-29 09:50:58 -参数 : [3, {}]
2019-03-29 09:50:58 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output where id = ? 
2019-03-29 09:50:58 -==> Parameters: 3(Long)
2019-03-29 09:50:58 -<==      Total: 1
2019-03-29 09:50:58 -耗时 : 4
2019-03-29 09:50:58 -返回值 : system/storageOutput/edit
2019-03-29 09:51:04 -请求地址 : http://localhost/system/storageOutput/add
2019-03-29 09:51:04 -HTTP METHOD : GET
2019-03-29 09:51:04 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.add
2019-03-29 09:51:04 -参数 : []
2019-03-29 09:51:04 -耗时 : 0
2019-03-29 09:51:04 -返回值 : system/storageOutput/add
2019-03-29 09:51:12 -请求地址 : http://localhost/system/storageOutput/save
2019-03-29 09:51:12 -HTTP METHOD : POST
2019-03-29 09:51:12 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.save
2019-03-29 09:51:12 -参数 : [com.bootdo.system.domain.StorageOutputDO@7acc1d8]
2019-03-29 09:51:12 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2019-03-29 09:51:12 -==> Parameters: 手机(String), 1234(String)
2019-03-29 09:51:12 -<==      Total: 0
2019-03-29 09:51:12 -耗时 : 2
2019-03-29 09:51:12 -返回值 : {msg=库存不足, code=500}
2019-03-29 09:51:15 -请求地址 : http://localhost/system/storageOutput/save
2019-03-29 09:51:15 -HTTP METHOD : POST
2019-03-29 09:51:15 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.save
2019-03-29 09:51:15 -参数 : [com.bootdo.system.domain.StorageOutputDO@5750f0ca]
2019-03-29 09:51:15 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage WHERE good_name = ? and good_number = ? order by id desc 
2019-03-29 09:51:15 -==> Parameters: 手机(String), 1234(String)
2019-03-29 09:51:15 -<==      Total: 0
2019-03-29 09:51:15 -耗时 : 2
2019-03-29 09:51:15 -返回值 : {msg=库存不足, code=500}
2019-03-29 09:51:26 -请求地址 : http://localhost/system/storage
2019-03-29 09:51:26 -HTTP METHOD : GET
2019-03-29 09:51:26 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2019-03-29 09:51:26 -参数 : []
2019-03-29 09:51:26 -耗时 : 0
2019-03-29 09:51:26 -返回值 : system/storage/storage
2019-03-29 09:51:26 -请求地址 : http://localhost/system/storage/list
2019-03-29 09:51:26 -HTTP METHOD : GET
2019-03-29 09:51:26 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2019-03-29 09:51:26 -参数 : [{limit=10, offset=0}]
2019-03-29 09:51:26 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2019-03-29 09:51:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:51:26 -<==      Total: 3
2019-03-29 09:51:26 -==>  Preparing: select count(*) from t_storage 
2019-03-29 09:51:26 -==> Parameters: 
2019-03-29 09:51:26 -<==      Total: 1
2019-03-29 09:51:26 -耗时 : 11
2019-03-29 09:51:26 -返回值 : com.bootdo.common.utils.PageUtils@7a1e5a9d
2019-03-29 09:51:30 -请求地址 : http://localhost/system/good
2019-03-29 09:51:30 -HTTP METHOD : GET
2019-03-29 09:51:30 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2019-03-29 09:51:30 -参数 : []
2019-03-29 09:51:30 -耗时 : 0
2019-03-29 09:51:30 -返回值 : system/good/good
2019-03-29 09:51:30 -请求地址 : http://localhost/system/good/list
2019-03-29 09:51:30 -HTTP METHOD : GET
2019-03-29 09:51:30 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2019-03-29 09:51:30 -参数 : [{limit=10, offset=0, title=}]
2019-03-29 09:51:30 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2019-03-29 09:51:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:51:30 -<==      Total: 5
2019-03-29 09:51:30 -==>  Preparing: select count(*) from t_good 
2019-03-29 09:51:30 -==> Parameters: 
2019-03-29 09:51:30 -<==      Total: 1
2019-03-29 09:51:30 -耗时 : 17
2019-03-29 09:51:30 -返回值 : com.bootdo.common.utils.PageUtils@778b826
2019-03-29 09:51:49 -请求地址 : http://localhost/system/car
2019-03-29 09:51:49 -HTTP METHOD : GET
2019-03-29 09:51:49 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2019-03-29 09:51:49 -参数 : []
2019-03-29 09:51:49 -耗时 : 0
2019-03-29 09:51:49 -返回值 : system/car/car
2019-03-29 09:51:49 -请求地址 : http://localhost/system/car/list
2019-03-29 09:51:49 -HTTP METHOD : GET
2019-03-29 09:51:49 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2019-03-29 09:51:49 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 09:51:49 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2019-03-29 09:51:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:51:49 -<==      Total: 1
2019-03-29 09:51:49 -==>  Preparing: select count(*) from t_car 
2019-03-29 09:51:49 -==> Parameters: 
2019-03-29 09:51:49 -<==      Total: 1
2019-03-29 09:51:49 -耗时 : 16
2019-03-29 09:51:49 -返回值 : com.bootdo.common.utils.PageUtils@3a13745c
2019-03-29 09:51:54 -请求地址 : http://localhost/system/car/add
2019-03-29 09:51:54 -HTTP METHOD : GET
2019-03-29 09:51:54 -CLASS_METHOD : com.bootdo.system.controller.CarController.add
2019-03-29 09:51:54 -参数 : []
2019-03-29 09:51:54 -耗时 : 0
2019-03-29 09:51:54 -返回值 : system/car/add
2019-03-29 09:53:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 09:53:53 -==> Parameters: 1(Long)
2019-03-29 09:53:53 -<==      Total: 57
2019-03-29 09:53:53 -请求地址 : http://localhost/system/car/save
2019-03-29 09:53:53 -HTTP METHOD : POST
2019-03-29 09:53:53 -CLASS_METHOD : com.bootdo.system.controller.CarController.save
2019-03-29 09:53:53 -参数 : [com.bootdo.system.domain.CarDO@1afb4864]
2019-03-29 09:53:53 -==>  Preparing: insert into t_car ( `type`, `name`, `no`, `driver_name`, `driver_telephone`, `driver_age`, `car_age`, `weight`, `status` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 09:53:53 -==> Parameters: 小汽车(String), 雅阁(String), 苏1234(String), 惠新然(String), 18795881111(String), 2(Integer), 2(Integer), 20.0(Double), 0(Integer)
2019-03-29 09:53:53 -<==    Updates: 1
2019-03-29 09:53:53 -耗时 : 6
2019-03-29 09:53:53 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:53:53 -请求地址 : http://localhost/system/car/list
2019-03-29 09:53:53 -HTTP METHOD : GET
2019-03-29 09:53:53 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2019-03-29 09:53:53 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 09:53:53 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2019-03-29 09:53:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:53:53 -<==      Total: 2
2019-03-29 09:53:53 -==>  Preparing: select count(*) from t_car 
2019-03-29 09:53:53 -==> Parameters: 
2019-03-29 09:53:53 -<==      Total: 1
2019-03-29 09:53:53 -耗时 : 3
2019-03-29 09:53:53 -返回值 : com.bootdo.common.utils.PageUtils@48c9466d
2019-03-29 09:53:58 -请求地址 : http://localhost/system/logistics
2019-03-29 09:53:58 -HTTP METHOD : GET
2019-03-29 09:53:58 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2019-03-29 09:53:58 -参数 : []
2019-03-29 09:53:58 -耗时 : 1
2019-03-29 09:53:58 -返回值 : system/logistics/logistics
2019-03-29 09:53:58 -请求地址 : http://localhost/system/logistics/list
2019-03-29 09:53:58 -HTTP METHOD : GET
2019-03-29 09:53:58 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 09:53:58 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 09:53:58 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 09:53:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:53:58 -<==      Total: 3
2019-03-29 09:53:58 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 09:53:58 -==> Parameters: 
2019-03-29 09:53:58 -<==      Total: 1
2019-03-29 09:53:58 -耗时 : 4
2019-03-29 09:53:58 -返回值 : com.bootdo.common.utils.PageUtils@35fe5f61
2019-03-29 09:54:09 -请求地址 : http://localhost/system/logistics/view/3
2019-03-29 09:54:09 -HTTP METHOD : GET
2019-03-29 09:54:09 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.view
2019-03-29 09:54:09 -参数 : [3, {}]
2019-03-29 09:54:09 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics where id = ? 
2019-03-29 09:54:09 -==> Parameters: 3(Long)
2019-03-29 09:54:09 -<==      Total: 1
2019-03-29 09:54:09 -耗时 : 2
2019-03-29 09:54:09 -返回值 : system/logistics/view
2019-03-29 09:54:13 -请求地址 : http://localhost/system/logistics/view/2
2019-03-29 09:54:13 -HTTP METHOD : GET
2019-03-29 09:54:13 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.view
2019-03-29 09:54:13 -参数 : [2, {}]
2019-03-29 09:54:13 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics where id = ? 
2019-03-29 09:54:13 -==> Parameters: 2(Long)
2019-03-29 09:54:13 -<==      Total: 1
2019-03-29 09:54:13 -耗时 : 2
2019-03-29 09:54:13 -返回值 : system/logistics/view
2019-03-29 09:54:20 -请求地址 : http://localhost/system/logisticsManage
2019-03-29 09:54:20 -HTTP METHOD : GET
2019-03-29 09:54:20 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2019-03-29 09:54:20 -参数 : []
2019-03-29 09:54:20 -耗时 : 0
2019-03-29 09:54:20 -返回值 : system/logisticsManage/logisticsManage
2019-03-29 09:54:20 -请求地址 : http://localhost/system/logisticsManage/list
2019-03-29 09:54:20 -HTTP METHOD : GET
2019-03-29 09:54:20 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2019-03-29 09:54:20 -参数 : [{limit=10, offset=0}]
2019-03-29 09:54:20 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2019-03-29 09:54:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:54:20 -<==      Total: 3
2019-03-29 09:54:20 -==>  Preparing: select count(*) from t_logistics_manage 
2019-03-29 09:54:20 -==> Parameters: 
2019-03-29 09:54:20 -<==      Total: 1
2019-03-29 09:54:20 -耗时 : 3
2019-03-29 09:54:20 -返回值 : com.bootdo.common.utils.PageUtils@607917d9
2019-03-29 09:54:28 -请求地址 : http://localhost/system/logisticsManage/add
2019-03-29 09:54:28 -HTTP METHOD : GET
2019-03-29 09:54:28 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.add
2019-03-29 09:54:28 -参数 : []
2019-03-29 09:54:28 -耗时 : 0
2019-03-29 09:54:28 -返回值 : system/logisticsManage/add
2019-03-29 09:54:44 -请求地址 : http://localhost/system/logisticsManage/save
2019-03-29 09:54:44 -HTTP METHOD : POST
2019-03-29 09:54:44 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.save
2019-03-29 09:54:44 -参数 : [com.bootdo.system.domain.LogisticsManageDO@1cfe363e]
2019-03-29 09:54:44 -==>  Preparing: insert into t_logistics_manage ( `logistics_no`, `drivier_name`, `car_no`, `create_date`, `status` ) values ( ?, ?, ?, ?, ? ) 
2019-03-29 09:54:44 -==> Parameters: 1234(String), 惠新然(String), 苏1234(String), 2019-03-29 09:54:44.315(Timestamp), 0(Integer)
2019-03-29 09:54:44 -<==    Updates: 1
2019-03-29 09:54:44 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics WHERE (no like CONCAT('%', ?, '%') or order_sn like CONCAT('%', ?, '%')) order by id desc 
2019-03-29 09:54:44 -==> Parameters: 1234(String), 1234(String)
2019-03-29 09:54:44 -<==      Total: 1
2019-03-29 09:54:44 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2019-03-29 09:54:44 -==> Parameters: 0001(String), 苹果(String)
2019-03-29 09:54:44 -<==      Total: 1
2019-03-29 09:54:44 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2019-03-29 09:54:44 -==> Parameters: 1524236279989(String), 李四(String), 500.0(Double), 100(Integer), 2018-04-21 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), 13701234565(String), 2018-04-20 22:58:00.0(Timestamp), 1(Integer), (String), 0001(String), 苹果(String), 3(Long)
2019-03-29 09:54:44 -<==    Updates: 1
2019-03-29 09:54:44 -耗时 : 36
2019-03-29 09:54:44 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:54:44 -请求地址 : http://localhost/system/logisticsManage/list
2019-03-29 09:54:44 -HTTP METHOD : GET
2019-03-29 09:54:44 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2019-03-29 09:54:44 -参数 : [{limit=10, offset=0}]
2019-03-29 09:54:44 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2019-03-29 09:54:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:54:44 -<==      Total: 4
2019-03-29 09:54:44 -==>  Preparing: select count(*) from t_logistics_manage 
2019-03-29 09:54:44 -==> Parameters: 
2019-03-29 09:54:44 -<==      Total: 1
2019-03-29 09:54:44 -耗时 : 3
2019-03-29 09:54:44 -返回值 : com.bootdo.common.utils.PageUtils@6da7285e
2019-03-29 09:55:02 -请求地址 : http://localhost/system/order/statistics
2019-03-29 09:55:02 -HTTP METHOD : GET
2019-03-29 09:55:02 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2019-03-29 09:55:02 -参数 : []
2019-03-29 09:55:02 -耗时 : 1
2019-03-29 09:55:02 -返回值 : system/order/statistics
2019-03-29 09:55:02 -请求地址 : http://localhost/system/order/statisticsList
2019-03-29 09:55:02 -HTTP METHOD : GET
2019-03-29 09:55:02 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2019-03-29 09:55:02 -参数 : [{limit=10, offset=0}]
2019-03-29 09:55:02 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2019-03-29 09:55:02 -==> Parameters: 
2019-03-29 09:55:02 -<==      Total: 2
2019-03-29 09:55:02 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2019-03-29 09:55:02 -==> Parameters: 
2019-03-29 09:55:02 -<==      Total: 1
2019-03-29 09:55:02 -耗时 : 6
2019-03-29 09:55:02 -返回值 : com.bootdo.common.utils.PageUtils@503f3897
2019-03-29 09:57:08 -请求地址 : http://localhost/system/orderSettlement
2019-03-29 09:57:08 -HTTP METHOD : GET
2019-03-29 09:57:08 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2019-03-29 09:57:08 -参数 : []
2019-03-29 09:57:08 -耗时 : 1
2019-03-29 09:57:08 -返回值 : system/orderSettlement/orderSettlement
2019-03-29 09:57:09 -请求地址 : http://localhost/system/orderSettlement/list
2019-03-29 09:57:09 -HTTP METHOD : GET
2019-03-29 09:57:09 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2019-03-29 09:57:09 -参数 : [{limit=10, offset=0}]
2019-03-29 09:57:09 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2019-03-29 09:57:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:57:09 -<==      Total: 3
2019-03-29 09:57:09 -==>  Preparing: select count(*) from t_order_settlement 
2019-03-29 09:57:09 -==> Parameters: 
2019-03-29 09:57:09 -<==      Total: 1
2019-03-29 09:57:09 -耗时 : 10
2019-03-29 09:57:09 -返回值 : com.bootdo.common.utils.PageUtils@73a963f2
2019-03-29 09:57:23 -请求地址 : http://localhost/system/logistics/edit/3
2019-03-29 09:57:23 -HTTP METHOD : GET
2019-03-29 09:57:23 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2019-03-29 09:57:23 -参数 : [3, {}]
2019-03-29 09:57:23 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics where id = ? 
2019-03-29 09:57:23 -==> Parameters: 3(Long)
2019-03-29 09:57:23 -<==      Total: 1
2019-03-29 09:57:23 -耗时 : 4
2019-03-29 09:57:23 -返回值 : system/logistics/edit
2019-03-29 09:57:58 -请求地址 : http://localhost/system/logistics/update
2019-03-29 09:57:58 -HTTP METHOD : POST
2019-03-29 09:57:58 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.update
2019-03-29 09:57:58 -参数 : [com.bootdo.system.domain.LogisticsDO@77910f99]
2019-03-29 09:57:58 -==>  Preparing: update t_logistics SET `no` = ?, `good_number` = ?, `good_name` = ?, `send_name` = ?, `send_address` = ?, `send_telephone` = ?, `send_province` = ?, `send_city` = ?, `send_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `arrive_province` = ?, `arrive_city` = ?, `arrive_date` = ?, `order_sn` = ? where id = ? 
2019-03-29 09:57:58 -==> Parameters: 000001(String), 0005(String), 白菜(String), 李四(String), 山东(String), 12345678901(String), 山东(String), 青岛(String), 2019-03-06 00:00:00.0(Timestamp), 张三(String), 山东青岛(String), (String), 山东(String), 青岛(String), 2019-04-29 00:00:00.0(Timestamp), 1524239295409(String), 3(Long)
2019-03-29 09:57:58 -<==    Updates: 1
2019-03-29 09:57:58 -耗时 : 21
2019-03-29 09:57:58 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:57:58 -请求地址 : http://localhost/system/logistics/list
2019-03-29 09:57:58 -HTTP METHOD : GET
2019-03-29 09:57:58 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 09:57:58 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 09:57:58 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 09:57:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:57:58 -<==      Total: 3
2019-03-29 09:57:58 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 09:57:58 -==> Parameters: 
2019-03-29 09:57:58 -<==      Total: 1
2019-03-29 09:57:58 -耗时 : 3
2019-03-29 09:57:58 -返回值 : com.bootdo.common.utils.PageUtils@6639991d
2019-03-29 09:58:01 -请求地址 : http://localhost/system/logistics/edit/2
2019-03-29 09:58:01 -HTTP METHOD : GET
2019-03-29 09:58:01 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2019-03-29 09:58:01 -参数 : [2, {}]
2019-03-29 09:58:01 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics where id = ? 
2019-03-29 09:58:01 -==> Parameters: 2(Long)
2019-03-29 09:58:01 -<==      Total: 1
2019-03-29 09:58:01 -耗时 : 2
2019-03-29 09:58:01 -返回值 : system/logistics/edit
2019-03-29 09:58:21 -请求地址 : http://localhost/system/logistics/update
2019-03-29 09:58:21 -HTTP METHOD : POST
2019-03-29 09:58:21 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.update
2019-03-29 09:58:21 -参数 : [com.bootdo.system.domain.LogisticsDO@4b42de1a]
2019-03-29 09:58:21 -==>  Preparing: update t_logistics SET `no` = ?, `good_number` = ?, `good_name` = ?, `send_name` = ?, `send_address` = ?, `send_telephone` = ?, `send_province` = ?, `send_city` = ?, `send_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `arrive_province` = ?, `arrive_city` = ?, `arrive_date` = ?, `order_sn` = ? where id = ? 
2019-03-29 09:58:21 -==> Parameters: 0123456789(String), 0001(String), 苹果(String), 李四(String), 四川成都(String), 13801234567(String), 四川(String), 成都(String), 2019-03-13 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), (String), (String), 成都(String), 2019-03-27 00:00:00.0(Timestamp), (String), 2(Long)
2019-03-29 09:58:21 -<==    Updates: 1
2019-03-29 09:58:21 -耗时 : 9
2019-03-29 09:58:21 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:58:21 -请求地址 : http://localhost/system/logistics/list
2019-03-29 09:58:21 -HTTP METHOD : GET
2019-03-29 09:58:21 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 09:58:21 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 09:58:21 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 09:58:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:58:21 -<==      Total: 3
2019-03-29 09:58:21 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 09:58:21 -==> Parameters: 
2019-03-29 09:58:21 -<==      Total: 1
2019-03-29 09:58:21 -耗时 : 6
2019-03-29 09:58:21 -返回值 : com.bootdo.common.utils.PageUtils@356e9ac
2019-03-29 09:58:29 -请求地址 : http://localhost/system/logistics/edit/1
2019-03-29 09:58:29 -HTTP METHOD : GET
2019-03-29 09:58:29 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.edit
2019-03-29 09:58:29 -参数 : [1, {}]
2019-03-29 09:58:29 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics where id = ? 
2019-03-29 09:58:29 -==> Parameters: 1(Long)
2019-03-29 09:58:29 -<==      Total: 1
2019-03-29 09:58:29 -耗时 : 5
2019-03-29 09:58:29 -返回值 : system/logistics/edit
2019-03-29 09:59:02 -请求地址 : http://localhost/system/logistics/update
2019-03-29 09:59:02 -HTTP METHOD : POST
2019-03-29 09:59:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.update
2019-03-29 09:59:02 -参数 : [com.bootdo.system.domain.LogisticsDO@6dfcca11]
2019-03-29 09:59:02 -==>  Preparing: update t_logistics SET `no` = ?, `good_number` = ?, `good_name` = ?, `send_name` = ?, `send_address` = ?, `send_telephone` = ?, `send_province` = ?, `send_city` = ?, `send_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `arrive_province` = ?, `arrive_city` = ?, `arrive_date` = ?, `order_sn` = ? where id = ? 
2019-03-29 09:59:02 -==> Parameters: 0312456(String), 0002(String), 香蕉(String), 张三(String), 广东省(String), 12345678901(String), 广东省(String), 广州(String), 2019-03-08 00:00:00.0(Timestamp), 李四(String), 山东青岛(String), 12345678901(String), 山东(String), 青岛(String), 2019-04-23 00:00:00.0(Timestamp), (String), 1(Long)
2019-03-29 09:59:02 -<==    Updates: 1
2019-03-29 09:59:02 -耗时 : 19
2019-03-29 09:59:02 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:59:02 -请求地址 : http://localhost/system/logistics/list
2019-03-29 09:59:02 -HTTP METHOD : GET
2019-03-29 09:59:02 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 09:59:02 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 09:59:02 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 09:59:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:59:02 -<==      Total: 3
2019-03-29 09:59:02 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 09:59:02 -==> Parameters: 
2019-03-29 09:59:02 -<==      Total: 1
2019-03-29 09:59:02 -耗时 : 4
2019-03-29 09:59:02 -返回值 : com.bootdo.common.utils.PageUtils@2e2f3846
2019-03-29 09:59:21 -请求地址 : http://localhost/system/logisticsManage/edit/3
2019-03-29 09:59:21 -HTTP METHOD : GET
2019-03-29 09:59:21 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.edit
2019-03-29 09:59:21 -参数 : [3, {}]
2019-03-29 09:59:21 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage where id = ? 
2019-03-29 09:59:21 -==> Parameters: 3(Long)
2019-03-29 09:59:21 -<==      Total: 1
2019-03-29 09:59:21 -耗时 : 5
2019-03-29 09:59:21 -返回值 : system/logisticsManage/edit
2019-03-29 09:59:26 -请求地址 : http://localhost/system/logisticsManage/update
2019-03-29 09:59:26 -HTTP METHOD : POST
2019-03-29 09:59:26 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.update
2019-03-29 09:59:26 -参数 : [com.bootdo.system.domain.LogisticsManageDO@24e7f18e]
2019-03-29 09:59:26 -==>  Preparing: update t_logistics_manage SET `logistics_no` = ?, `drivier_name` = ?, `car_no` = ?, `status` = ? where id = ? 
2019-03-29 09:59:26 -==> Parameters: 000001(String), 张三(String), 川A4F567K(String), 1(Integer), 3(Long)
2019-03-29 09:59:26 -<==    Updates: 1
2019-03-29 09:59:26 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics WHERE (no like CONCAT('%', ?, '%') or order_sn like CONCAT('%', ?, '%')) order by id desc 
2019-03-29 09:59:26 -==> Parameters: 000001(String), 000001(String)
2019-03-29 09:59:26 -<==      Total: 1
2019-03-29 09:59:26 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order WHERE good_number = ? and good_name = ? order by id desc 
2019-03-29 09:59:26 -==> Parameters: 0005(String), 白菜(String)
2019-03-29 09:59:26 -<==      Total: 1
2019-03-29 09:59:26 -==>  Preparing: update t_order SET `order_sn` = ?, `customer_number` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `create_date` = ?, `status` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2019-03-29 09:59:26 -==> Parameters: 1524239295409(String), 0001(String), 李四(String), 500.0(Double), 500(Integer), 2018-04-21 00:00:00.0(Timestamp), 张无(String), 山东青岛(String), 13701340923(String), 2018-04-20 23:48:15.0(Timestamp), 2(Integer), (String), 0005(String), 白菜(String), 4(Long)
2019-03-29 09:59:26 -<==    Updates: 1
2019-03-29 09:59:26 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc 
2019-03-29 09:59:26 -==> Parameters: 
2019-03-29 09:59:26 -<==      Total: 3
2019-03-29 09:59:26 -==>  Preparing: update t_order_settlement SET `order_sn` = ?, `total_price` = ?, `create_date` = ?, `state` = ? where id = ? 
2019-03-29 09:59:26 -==> Parameters: 1524239295409(String), 500.0(Double), 2019-03-29 09:59:26.346(Timestamp), 1(Integer), 3(Long)
2019-03-29 09:59:26 -<==    Updates: 1
2019-03-29 09:59:26 -耗时 : 28
2019-03-29 09:59:26 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:59:26 -请求地址 : http://localhost/system/logisticsManage/list
2019-03-29 09:59:26 -HTTP METHOD : GET
2019-03-29 09:59:26 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2019-03-29 09:59:26 -参数 : [{limit=10, offset=0}]
2019-03-29 09:59:26 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2019-03-29 09:59:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:59:26 -<==      Total: 4
2019-03-29 09:59:26 -==>  Preparing: select count(*) from t_logistics_manage 
2019-03-29 09:59:26 -==> Parameters: 
2019-03-29 09:59:26 -<==      Total: 1
2019-03-29 09:59:26 -耗时 : 4
2019-03-29 09:59:26 -返回值 : com.bootdo.common.utils.PageUtils@91d2523
2019-03-29 09:59:37 -请求地址 : http://localhost/system/car/edit/1
2019-03-29 09:59:37 -HTTP METHOD : GET
2019-03-29 09:59:37 -CLASS_METHOD : com.bootdo.system.controller.CarController.edit
2019-03-29 09:59:37 -参数 : [1, {}]
2019-03-29 09:59:37 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car where id = ? 
2019-03-29 09:59:37 -==> Parameters: 1(Long)
2019-03-29 09:59:37 -<==      Total: 1
2019-03-29 09:59:37 -耗时 : 1
2019-03-29 09:59:37 -返回值 : system/car/edit
2019-03-29 09:59:47 -请求地址 : http://localhost/system/storageInput/edit/4
2019-03-29 09:59:47 -HTTP METHOD : GET
2019-03-29 09:59:47 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.edit
2019-03-29 09:59:47 -参数 : [4, {}]
2019-03-29 09:59:47 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input where id = ? 
2019-03-29 09:59:47 -==> Parameters: 4(Long)
2019-03-29 09:59:47 -<==      Total: 1
2019-03-29 09:59:47 -耗时 : 3
2019-03-29 09:59:47 -返回值 : system/storageInput/edit
2019-03-29 09:59:52 -请求地址 : http://localhost/system/storageInput/edit/4
2019-03-29 09:59:52 -HTTP METHOD : GET
2019-03-29 09:59:52 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.edit
2019-03-29 09:59:52 -参数 : [4, {}]
2019-03-29 09:59:52 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input where id = ? 
2019-03-29 09:59:52 -==> Parameters: 4(Long)
2019-03-29 09:59:52 -<==      Total: 1
2019-03-29 09:59:52 -耗时 : 2
2019-03-29 09:59:52 -返回值 : system/storageInput/edit
2019-03-29 09:59:58 -请求地址 : http://localhost/system/storageInput/update
2019-03-29 09:59:58 -HTTP METHOD : POST
2019-03-29 09:59:58 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.update
2019-03-29 09:59:58 -参数 : [com.bootdo.system.domain.StorageInputDO@11bdae6e]
2019-03-29 09:59:58 -==>  Preparing: update t_storage_input SET `good_name` = ?, `good_number` = ?, `good_price` = ?, `good_count` = ? where id = ? 
2019-03-29 09:59:58 -==> Parameters: 白菜(String), 0005(String), 1.0(Double), 1222(Integer), 4(Long)
2019-03-29 09:59:58 -<==    Updates: 1
2019-03-29 09:59:58 -耗时 : 24
2019-03-29 09:59:58 -返回值 : {msg=操作成功, code=0}
2019-03-29 09:59:58 -请求地址 : http://localhost/system/storageInput/list
2019-03-29 09:59:58 -HTTP METHOD : GET
2019-03-29 09:59:58 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2019-03-29 09:59:58 -参数 : [{limit=10, offset=0}]
2019-03-29 09:59:58 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2019-03-29 09:59:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 09:59:58 -<==      Total: 5
2019-03-29 09:59:58 -==>  Preparing: select count(*) from t_storage_input 
2019-03-29 09:59:58 -==> Parameters: 
2019-03-29 09:59:58 -<==      Total: 1
2019-03-29 09:59:58 -耗时 : 4
2019-03-29 09:59:58 -返回值 : com.bootdo.common.utils.PageUtils@6f4a5307
2019-03-29 10:00:03 -请求地址 : http://localhost/system/storageInput/edit/4
2019-03-29 10:00:03 -HTTP METHOD : GET
2019-03-29 10:00:03 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.edit
2019-03-29 10:00:03 -参数 : [4, {}]
2019-03-29 10:00:03 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input where id = ? 
2019-03-29 10:00:03 -==> Parameters: 4(Long)
2019-03-29 10:00:03 -<==      Total: 1
2019-03-29 10:00:03 -耗时 : 4
2019-03-29 10:00:03 -返回值 : system/storageInput/edit
2019-03-29 10:00:05 -请求地址 : http://localhost/system/storageInput/update
2019-03-29 10:00:05 -HTTP METHOD : POST
2019-03-29 10:00:05 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.update
2019-03-29 10:00:05 -参数 : [com.bootdo.system.domain.StorageInputDO@6494ceb9]
2019-03-29 10:00:05 -==>  Preparing: update t_storage_input SET `good_name` = ?, `good_number` = ?, `good_price` = ?, `good_count` = ? where id = ? 
2019-03-29 10:00:05 -==> Parameters: 白菜(String), 0005(String), 1.0(Double), 12222(Integer), 4(Long)
2019-03-29 10:00:05 -<==    Updates: 1
2019-03-29 10:00:05 -耗时 : 23
2019-03-29 10:00:05 -返回值 : {msg=操作成功, code=0}
2019-03-29 10:00:05 -请求地址 : http://localhost/system/storageInput/list
2019-03-29 10:00:05 -HTTP METHOD : GET
2019-03-29 10:00:05 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2019-03-29 10:00:05 -参数 : [{limit=10, offset=0}]
2019-03-29 10:00:05 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2019-03-29 10:00:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:00:05 -<==      Total: 5
2019-03-29 10:00:05 -==>  Preparing: select count(*) from t_storage_input 
2019-03-29 10:00:05 -==> Parameters: 
2019-03-29 10:00:05 -<==      Total: 1
2019-03-29 10:00:05 -耗时 : 4
2019-03-29 10:00:05 -返回值 : com.bootdo.common.utils.PageUtils@1658c8bd
2019-03-29 10:00:19 -请求地址 : http://localhost/system/storageOutput/edit/3
2019-03-29 10:00:19 -HTTP METHOD : GET
2019-03-29 10:00:19 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.edit
2019-03-29 10:00:19 -参数 : [3, {}]
2019-03-29 10:00:19 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output where id = ? 
2019-03-29 10:00:19 -==> Parameters: 3(Long)
2019-03-29 10:00:19 -<==      Total: 1
2019-03-29 10:00:19 -耗时 : 2
2019-03-29 10:00:19 -返回值 : system/storageOutput/edit
2019-03-29 10:00:25 -请求地址 : http://localhost/system/good/edit/5
2019-03-29 10:00:25 -HTTP METHOD : GET
2019-03-29 10:00:25 -CLASS_METHOD : com.bootdo.system.controller.GoodController.edit
2019-03-29 10:00:25 -参数 : [5, {}]
2019-03-29 10:00:25 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good where id = ? 
2019-03-29 10:00:25 -==> Parameters: 5(Long)
2019-03-29 10:00:25 -<==      Total: 1
2019-03-29 10:00:25 -耗时 : 3
2019-03-29 10:00:25 -返回值 : system/good/edit
2019-03-29 10:00:36 -请求地址 : http://localhost/system/order/save
2019-03-29 10:00:36 -HTTP METHOD : POST
2019-03-29 10:00:36 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 10:00:36 -参数 : [com.bootdo.system.domain.OrderDO@46441360]
2019-03-29 10:00:36 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 10:00:36 -==> Parameters: 1553824836030(String), 惠新然(String), 16000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 123(String), null, 2019-03-29 10:00:36.03(Timestamp), 0(Integer), 111(String), 1234(String), 手机(String)
2019-03-29 10:00:36 -{conn-10001, pstmt-20067} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 10:00:36 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 10:00:41 -请求地址 : http://localhost/system/order/edit/4
2019-03-29 10:00:41 -HTTP METHOD : GET
2019-03-29 10:00:41 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2019-03-29 10:00:41 -参数 : [4, {}]
2019-03-29 10:00:41 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2019-03-29 10:00:41 -==> Parameters: 4(Long)
2019-03-29 10:00:41 -<==      Total: 1
2019-03-29 10:00:41 -耗时 : 4
2019-03-29 10:00:41 -返回值 : system/order/edit
2019-03-29 10:00:49 -请求地址 : http://localhost/system/order/edit/4
2019-03-29 10:00:49 -HTTP METHOD : GET
2019-03-29 10:00:49 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2019-03-29 10:00:49 -参数 : [4, {}]
2019-03-29 10:00:49 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2019-03-29 10:00:49 -==> Parameters: 4(Long)
2019-03-29 10:00:49 -<==      Total: 1
2019-03-29 10:00:49 -耗时 : 4
2019-03-29 10:00:49 -返回值 : system/order/edit
2019-03-29 10:00:57 -请求地址 : http://localhost/system/order/update
2019-03-29 10:00:57 -HTTP METHOD : POST
2019-03-29 10:00:57 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2019-03-29 10:00:57 -参数 : [com.bootdo.system.domain.OrderDO@476d6658]
2019-03-29 10:00:57 -==>  Preparing: update t_order SET `customer_number` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2019-03-29 10:00:57 -==> Parameters: 0001(String), 李四(String), 500.0(Double), 500(Integer), 2019-03-29 00:00:00.0(Timestamp), 张无(String), 山东青岛(String), 13701340923(String), (String), 0005(String), 白菜(String), 4(Long)
2019-03-29 10:00:57 -<==    Updates: 1
2019-03-29 10:00:57 -耗时 : 6
2019-03-29 10:00:57 -返回值 : {msg=操作成功, code=0}
2019-03-29 10:00:57 -请求地址 : http://localhost/system/order/list
2019-03-29 10:00:57 -HTTP METHOD : GET
2019-03-29 10:00:57 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 10:00:57 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 10:00:57 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 10:00:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:00:57 -<==      Total: 4
2019-03-29 10:00:57 -==>  Preparing: select count(*) from t_order 
2019-03-29 10:00:57 -==> Parameters: 
2019-03-29 10:00:57 -<==      Total: 1
2019-03-29 10:00:57 -耗时 : 4
2019-03-29 10:00:57 -返回值 : com.bootdo.common.utils.PageUtils@f991e8f
2019-03-29 10:00:59 -请求地址 : http://localhost/system/order/edit/3
2019-03-29 10:00:59 -HTTP METHOD : GET
2019-03-29 10:00:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2019-03-29 10:00:59 -参数 : [3, {}]
2019-03-29 10:00:59 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2019-03-29 10:00:59 -==> Parameters: 3(Long)
2019-03-29 10:00:59 -<==      Total: 1
2019-03-29 10:00:59 -耗时 : 3
2019-03-29 10:00:59 -返回值 : system/order/edit
2019-03-29 10:01:02 -请求地址 : http://localhost/system/order/update
2019-03-29 10:01:02 -HTTP METHOD : POST
2019-03-29 10:01:02 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2019-03-29 10:01:02 -参数 : [com.bootdo.system.domain.OrderDO@144c3e8a]
2019-03-29 10:01:02 -==>  Preparing: update t_order SET `customer_number` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2019-03-29 10:01:02 -==> Parameters: (String), 李四(String), 500.0(Double), 100(Integer), 2019-03-29 00:00:00.0(Timestamp), 吴五(String), 四川成都(String), 13701234565(String), (String), 0001(String), 苹果(String), 3(Long)
2019-03-29 10:01:02 -<==    Updates: 1
2019-03-29 10:01:02 -耗时 : 5
2019-03-29 10:01:02 -返回值 : {msg=操作成功, code=0}
2019-03-29 10:01:02 -请求地址 : http://localhost/system/order/list
2019-03-29 10:01:02 -HTTP METHOD : GET
2019-03-29 10:01:02 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 10:01:02 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 10:01:02 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 10:01:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:01:02 -<==      Total: 4
2019-03-29 10:01:02 -==>  Preparing: select count(*) from t_order 
2019-03-29 10:01:02 -==> Parameters: 
2019-03-29 10:01:02 -<==      Total: 1
2019-03-29 10:01:02 -耗时 : 5
2019-03-29 10:01:02 -返回值 : com.bootdo.common.utils.PageUtils@3439d411
2019-03-29 10:01:06 -请求地址 : http://localhost/system/order/edit/2
2019-03-29 10:01:06 -HTTP METHOD : GET
2019-03-29 10:01:06 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2019-03-29 10:01:06 -参数 : [2, {}]
2019-03-29 10:01:06 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2019-03-29 10:01:06 -==> Parameters: 2(Long)
2019-03-29 10:01:06 -<==      Total: 1
2019-03-29 10:01:06 -耗时 : 2
2019-03-29 10:01:06 -返回值 : system/order/edit
2019-03-29 10:01:10 -请求地址 : http://localhost/system/order/update
2019-03-29 10:01:10 -HTTP METHOD : POST
2019-03-29 10:01:10 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2019-03-29 10:01:10 -参数 : [com.bootdo.system.domain.OrderDO@1b1c3e65]
2019-03-29 10:01:10 -==>  Preparing: update t_order SET `customer_number` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2019-03-29 10:01:10 -==> Parameters: (String), 张三(String), 100.0(Double), 5(Integer), 2019-03-29 00:00:00.0(Timestamp), 李四(String), 四川成都(String), 12345678901(String), (String), 0002(String), 香蕉(String), 2(Long)
2019-03-29 10:01:10 -<==    Updates: 1
2019-03-29 10:01:10 -耗时 : 16
2019-03-29 10:01:10 -返回值 : {msg=操作成功, code=0}
2019-03-29 10:01:10 -请求地址 : http://localhost/system/order/list
2019-03-29 10:01:10 -HTTP METHOD : GET
2019-03-29 10:01:10 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 10:01:10 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 10:01:10 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 10:01:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:01:10 -<==      Total: 4
2019-03-29 10:01:10 -==>  Preparing: select count(*) from t_order 
2019-03-29 10:01:10 -==> Parameters: 
2019-03-29 10:01:10 -<==      Total: 1
2019-03-29 10:01:10 -耗时 : 4
2019-03-29 10:01:10 -返回值 : com.bootdo.common.utils.PageUtils@42251f4c
2019-03-29 10:01:13 -请求地址 : http://localhost/system/order/edit/1
2019-03-29 10:01:13 -HTTP METHOD : GET
2019-03-29 10:01:13 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2019-03-29 10:01:13 -参数 : [1, {}]
2019-03-29 10:01:13 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2019-03-29 10:01:13 -==> Parameters: 1(Long)
2019-03-29 10:01:13 -<==      Total: 1
2019-03-29 10:01:13 -耗时 : 2
2019-03-29 10:01:13 -返回值 : system/order/edit
2019-03-29 10:01:16 -请求地址 : http://localhost/system/order/update
2019-03-29 10:01:16 -HTTP METHOD : POST
2019-03-29 10:01:16 -CLASS_METHOD : com.bootdo.system.controller.OrderController.update
2019-03-29 10:01:16 -参数 : [com.bootdo.system.domain.OrderDO@6b2b30ce]
2019-03-29 10:01:16 -==>  Preparing: update t_order SET `customer_number` = ?, `customer_name` = ?, `total_price` = ?, `total_count` = ?, `pay_date` = ?, `consignee_name` = ?, `consignee_address` = ?, `consignee_telephone` = ?, `description` = ?, `good_number` = ?, `good_name` = ? where id = ? 
2019-03-29 10:01:16 -==> Parameters: (String), lanbo(String), 200.0(Double), 10(Integer), 2019-03-29 00:00:00.0(Timestamp), 兰博(String), 四川成都(String), 12345678912(String), 111(String), (String), (String), 1(Long)
2019-03-29 10:01:16 -<==    Updates: 1
2019-03-29 10:01:16 -耗时 : 18
2019-03-29 10:01:16 -返回值 : {msg=操作成功, code=0}
2019-03-29 10:01:16 -请求地址 : http://localhost/system/order/list
2019-03-29 10:01:16 -HTTP METHOD : GET
2019-03-29 10:01:16 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 10:01:16 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 10:01:16 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 10:01:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:01:16 -<==      Total: 4
2019-03-29 10:01:16 -==>  Preparing: select count(*) from t_order 
2019-03-29 10:01:16 -==> Parameters: 
2019-03-29 10:01:16 -<==      Total: 1
2019-03-29 10:01:16 -耗时 : 4
2019-03-29 10:01:16 -返回值 : com.bootdo.common.utils.PageUtils@c93d677
2019-03-29 10:08:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 10:08:36 -==> Parameters: 1(Long)
2019-03-29 10:08:36 -<==      Total: 57
2019-03-29 10:08:36 -请求地址 : http://localhost/system/car
2019-03-29 10:08:36 -HTTP METHOD : GET
2019-03-29 10:08:36 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2019-03-29 10:08:36 -参数 : []
2019-03-29 10:08:36 -耗时 : 1
2019-03-29 10:08:36 -返回值 : system/car/car
2019-03-29 10:08:36 -请求地址 : http://localhost/system/car/list
2019-03-29 10:08:36 -HTTP METHOD : GET
2019-03-29 10:08:36 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2019-03-29 10:08:36 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 10:08:36 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2019-03-29 10:08:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:08:36 -<==      Total: 2
2019-03-29 10:08:36 -==>  Preparing: select count(*) from t_car 
2019-03-29 10:08:36 -==> Parameters: 
2019-03-29 10:08:36 -<==      Total: 1
2019-03-29 10:08:36 -耗时 : 3
2019-03-29 10:08:36 -返回值 : com.bootdo.common.utils.PageUtils@52dcfdd0
2019-03-29 10:08:38 -请求地址 : http://localhost/system/logistics
2019-03-29 10:08:38 -HTTP METHOD : GET
2019-03-29 10:08:38 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2019-03-29 10:08:38 -参数 : []
2019-03-29 10:08:38 -耗时 : 0
2019-03-29 10:08:38 -返回值 : system/logistics/logistics
2019-03-29 10:08:38 -请求地址 : http://localhost/system/logistics/list
2019-03-29 10:08:38 -HTTP METHOD : GET
2019-03-29 10:08:38 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 10:08:38 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 10:08:38 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 10:08:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:08:38 -<==      Total: 3
2019-03-29 10:08:38 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 10:08:38 -==> Parameters: 
2019-03-29 10:08:38 -<==      Total: 1
2019-03-29 10:08:38 -耗时 : 4
2019-03-29 10:08:38 -返回值 : com.bootdo.common.utils.PageUtils@57bcb3fd
2019-03-29 10:08:39 -请求地址 : http://localhost/system/logisticsManage
2019-03-29 10:08:39 -HTTP METHOD : GET
2019-03-29 10:08:39 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2019-03-29 10:08:39 -参数 : []
2019-03-29 10:08:39 -耗时 : 0
2019-03-29 10:08:39 -返回值 : system/logisticsManage/logisticsManage
2019-03-29 10:08:39 -请求地址 : http://localhost/system/logisticsManage/list
2019-03-29 10:08:39 -HTTP METHOD : GET
2019-03-29 10:08:39 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2019-03-29 10:08:39 -参数 : [{limit=10, offset=0}]
2019-03-29 10:08:39 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2019-03-29 10:08:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:08:39 -<==      Total: 4
2019-03-29 10:08:39 -==>  Preparing: select count(*) from t_logistics_manage 
2019-03-29 10:08:39 -==> Parameters: 
2019-03-29 10:08:39 -<==      Total: 1
2019-03-29 10:08:39 -耗时 : 4
2019-03-29 10:08:39 -返回值 : com.bootdo.common.utils.PageUtils@127bb320
2019-03-29 10:08:45 -请求地址 : http://localhost/system/orderSettlement
2019-03-29 10:08:45 -HTTP METHOD : GET
2019-03-29 10:08:45 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2019-03-29 10:08:45 -参数 : []
2019-03-29 10:08:45 -耗时 : 1
2019-03-29 10:08:45 -返回值 : system/orderSettlement/orderSettlement
2019-03-29 10:08:45 -请求地址 : http://localhost/system/orderSettlement/list
2019-03-29 10:08:45 -HTTP METHOD : GET
2019-03-29 10:08:45 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2019-03-29 10:08:45 -参数 : [{limit=10, offset=0}]
2019-03-29 10:08:45 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2019-03-29 10:08:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:08:45 -<==      Total: 3
2019-03-29 10:08:45 -==>  Preparing: select count(*) from t_order_settlement 
2019-03-29 10:08:45 -==> Parameters: 
2019-03-29 10:08:45 -<==      Total: 1
2019-03-29 10:08:45 -耗时 : 4
2019-03-29 10:08:45 -返回值 : com.bootdo.common.utils.PageUtils@3bbd7d02
2019-03-29 10:08:45 -请求地址 : http://localhost/system/order/statistics
2019-03-29 10:08:45 -HTTP METHOD : GET
2019-03-29 10:08:45 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2019-03-29 10:08:45 -参数 : []
2019-03-29 10:08:45 -耗时 : 0
2019-03-29 10:08:45 -返回值 : system/order/statistics
2019-03-29 10:08:46 -请求地址 : http://localhost/system/order/statisticsList
2019-03-29 10:08:46 -HTTP METHOD : GET
2019-03-29 10:08:46 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2019-03-29 10:08:46 -参数 : [{limit=10, offset=0}]
2019-03-29 10:08:46 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2019-03-29 10:08:46 -==> Parameters: 
2019-03-29 10:08:46 -<==      Total: 2
2019-03-29 10:08:46 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2019-03-29 10:08:46 -==> Parameters: 
2019-03-29 10:08:46 -<==      Total: 1
2019-03-29 10:08:46 -耗时 : 5
2019-03-29 10:08:46 -返回值 : com.bootdo.common.utils.PageUtils@2e3b8be
2019-03-29 10:09:29 -Validating all active sessions...
2019-03-29 10:09:29 -Finished session validation.  No sessions were stopped.
2019-03-29 10:10:38 -请求地址 : http://localhost/system/customer
2019-03-29 10:10:38 -HTTP METHOD : GET
2019-03-29 10:10:38 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.Customer
2019-03-29 10:10:38 -参数 : []
2019-03-29 10:10:38 -耗时 : 1
2019-03-29 10:10:38 -返回值 : system/customer/customer
2019-03-29 10:10:38 -请求地址 : http://localhost/system/customer/list
2019-03-29 10:10:38 -HTTP METHOD : GET
2019-03-29 10:10:38 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.list
2019-03-29 10:10:38 -参数 : [{limit=10, offset=0, number=}]
2019-03-29 10:10:38 -==>  Preparing: select `id`,`name`,`number`,`telephone`,`email`,`address`,`company` from t_customer order by id desc limit ?, ? 
2019-03-29 10:10:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:10:38 -<==      Total: 1
2019-03-29 10:10:38 -==>  Preparing: select count(*) from t_customer 
2019-03-29 10:10:38 -==> Parameters: 
2019-03-29 10:10:38 -<==      Total: 1
2019-03-29 10:10:38 -耗时 : 4
2019-03-29 10:10:38 -返回值 : com.bootdo.common.utils.PageUtils@30355d6d
2019-03-29 10:10:42 -请求地址 : http://localhost/system/order/
2019-03-29 10:10:42 -HTTP METHOD : GET
2019-03-29 10:10:42 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2019-03-29 10:10:42 -参数 : []
2019-03-29 10:10:42 -耗时 : 0
2019-03-29 10:10:42 -返回值 : system/order/order
2019-03-29 10:10:43 -请求地址 : http://localhost/system/order/list
2019-03-29 10:10:43 -HTTP METHOD : GET
2019-03-29 10:10:43 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 10:10:43 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 10:10:43 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 10:10:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:10:43 -<==      Total: 4
2019-03-29 10:10:43 -==>  Preparing: select count(*) from t_order 
2019-03-29 10:10:43 -==> Parameters: 
2019-03-29 10:10:43 -<==      Total: 1
2019-03-29 10:10:43 -耗时 : 6
2019-03-29 10:10:43 -返回值 : com.bootdo.common.utils.PageUtils@15096046
2019-03-29 10:10:45 -请求地址 : http://localhost/system/order/add
2019-03-29 10:10:45 -HTTP METHOD : GET
2019-03-29 10:10:45 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2019-03-29 10:10:45 -参数 : []
2019-03-29 10:10:45 -耗时 : 0
2019-03-29 10:10:45 -返回值 : system/order/add
2019-03-29 10:11:38 -请求地址 : http://localhost/system/order/save
2019-03-29 10:11:38 -HTTP METHOD : POST
2019-03-29 10:11:38 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 10:11:38 -参数 : [com.bootdo.system.domain.OrderDO@669f0103]
2019-03-29 10:11:38 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 10:11:38 -==> Parameters: 1553825498991(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 18795881111(String), null, 2019-03-29 10:11:38.991(Timestamp), 0(Integer), 111(String), 11111(String), 手机(String)
2019-03-29 10:11:38 -{conn-10001, pstmt-20083} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 10:11:38 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 10:11:46 -请求地址 : http://localhost/sys/user/
2019-03-29 10:11:46 -HTTP METHOD : GET
2019-03-29 10:11:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-29 10:11:46 -参数 : [{}]
2019-03-29 10:11:46 -耗时 : 0
2019-03-29 10:11:46 -返回值 : system/user/user
2019-03-29 10:11:46 -请求地址 : http://localhost/sys/user/list
2019-03-29 10:11:46 -HTTP METHOD : GET
2019-03-29 10:11:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-29 10:11:46 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 10:11:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-29 10:11:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 10:11:46 -<==      Total: 2
2019-03-29 10:11:46 -==>  Preparing: select count(*) from sys_user 
2019-03-29 10:11:46 -==> Parameters: 
2019-03-29 10:11:46 -<==      Total: 1
2019-03-29 10:11:46 -耗时 : 6
2019-03-29 10:11:46 -返回值 : com.bootdo.common.utils.PageUtils@52221076
2019-03-29 10:11:53 -请求地址 : http://localhost/sys/role/edit/1
2019-03-29 10:11:53 -HTTP METHOD : GET
2019-03-29 10:11:53 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-29 10:11:53 -参数 : [1, {}]
2019-03-29 10:11:53 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-29 10:11:53 -==> Parameters: 1(Long)
2019-03-29 10:11:53 -<==      Total: 1
2019-03-29 10:11:53 -耗时 : 5
2019-03-29 10:11:53 -返回值 : system/role/edit
2019-03-29 10:11:53 -请求地址 : http://localhost/sys/menu/tree/1
2019-03-29 10:11:53 -HTTP METHOD : GET
2019-03-29 10:11:53 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-29 10:11:53 -参数 : [1]
2019-03-29 10:11:53 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-29 10:11:53 -==> Parameters: 
2019-03-29 10:11:53 -<==      Total: 83
2019-03-29 10:11:53 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-29 10:11:53 -==> Parameters: 1(Long)
2019-03-29 10:11:53 -<==      Total: 63
2019-03-29 10:11:53 -耗时 : 20
2019-03-29 10:11:53 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"152","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"152","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"152","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"152","parentId":"151","state":{"selected":false},"text":"客户信息管理"}],"hasChildren":true,"hasParent":false,"id":"151","parentId":"0","state":{"selected":false},"text":"客户管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"108","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"108","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"108","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"108","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"108","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"108","parentId":"107","state":{"selected":false},"text":"订单信息管理"}],"hasChildren":true,"hasParent":false,"id":"107","parentId":"0","state":{"selected":false},"text":"订单管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"106","state":{"selected":true},"text":"财务结算"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"106","state":{"selected":true},"text":"订单统计"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"财务管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"115","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"115","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"115","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"115","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"115","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"115","parentId":"105","state":{"selected":false},"text":"车辆信息管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"车辆管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"146","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"146","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"146","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"146","parentId":"103","state":{"selected":false},"text":"配送管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"116","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"116","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"116","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"103","state":{"selected":false},"text":"物流信息管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"物流管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"102","state":{"selected":true},"text":"库存管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"135","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"135","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"135","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"135","parentId":"102","state":{"selected":false},"text":"出库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"134","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"134","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"134","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"134","parentId":"102","state":{"selected":false},"text":"入库登记"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"114","state":{"selected":true},"text":"查看"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"114","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"114","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"114","state":{"selected":true},"text":"新增"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"114","state":{"selected":true},"text":"批量删除"}],"hasChildren":true,"hasParent":true,"id":"114","parentId":"102","state":{"selected":false},"text":"货物信息管理"}],"hasChildren":true,"hasParent":false,"id":"102","parentId":"0","state":{"selected":false},"text":"货物管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-29 10:18:29 -请求地址 : http://localhost/system/order/add
2019-03-29 10:18:29 -HTTP METHOD : GET
2019-03-29 10:18:29 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2019-03-29 10:18:29 -参数 : []
2019-03-29 10:18:29 -耗时 : 1
2019-03-29 10:18:29 -返回值 : system/order/add
2019-03-29 10:19:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 10:19:03 -==> Parameters: 1(Long)
2019-03-29 10:19:03 -<==      Total: 57
2019-03-29 10:19:03 -请求地址 : http://localhost/system/order/save
2019-03-29 10:19:03 -HTTP METHOD : POST
2019-03-29 10:19:03 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 10:19:03 -参数 : [com.bootdo.system.domain.OrderDO@45a7bb15]
2019-03-29 10:19:03 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 10:19:03 -==> Parameters: 1553825943410(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 惠新然(String), 南广学院(String), 18795882222(String), null, 2019-03-29 10:19:03.41(Timestamp), 0(Integer), 111(String), 11111(String), 手机(String)
2019-03-29 10:19:03 -{conn-10001, pstmt-20089} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 10:19:03 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 10:33:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 10:33:04 -==> Parameters: 1(Long)
2019-03-29 10:33:04 -<==      Total: 57
2019-03-29 10:33:04 -请求地址 : http://localhost/system/order/add
2019-03-29 10:33:04 -HTTP METHOD : GET
2019-03-29 10:33:04 -CLASS_METHOD : com.bootdo.system.controller.OrderController.add
2019-03-29 10:33:04 -参数 : []
2019-03-29 10:33:04 -耗时 : 1
2019-03-29 10:33:04 -返回值 : system/order/add
2019-03-29 10:33:20 -请求地址 : http://localhost/system/order/save
2019-03-29 10:33:20 -HTTP METHOD : POST
2019-03-29 10:33:20 -CLASS_METHOD : com.bootdo.system.controller.OrderController.save
2019-03-29 10:33:20 -参数 : [com.bootdo.system.domain.OrderDO@384c4dc7]
2019-03-29 10:33:20 -==>  Preparing: insert into t_order ( `order_sn`, `customer_number`, `customer_name`, `total_price`, `total_count`, `pay_date`, `consignee_name`, `consignee_address`, `consignee_telephone`, `user_id`, `create_date`, `status`, `description`, `good_number`, `good_name` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-29 10:33:20 -==> Parameters: 1553826800035(String), 惠新然(String), 20000.0(Double), 2(Integer), 2019-03-29 00:00:00.0(Timestamp), 123(String), 123(String), 123(String), null, 2019-03-29 10:33:20.035(Timestamp), 0(Integer), 123(String), 1234(String), 手机(String)
2019-03-29 10:33:20 -{conn-10001, pstmt-20090} execute error. insert into t_order
		(
			`order_sn`, 
			`customer_number`,
			`customer_name`, 
			`total_price`, 
			`total_count`, 
			`pay_date`, 
			`consignee_name`, 
			`consignee_address`, 
			`consignee_telephone`, 
			`user_id`, 
			`create_date`, 
			`status`, 
			`description`, 
			`good_number`, 
			`good_name`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-29 10:33:20 -
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may involve com.bootdo.system.dao.OrderDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into t_order   (    `order_sn`,     `customer_number`,    `customer_name`,     `total_price`,     `total_count`,     `pay_date`,     `consignee_name`,     `consignee_address`,     `consignee_telephone`,     `user_id`,     `create_date`,     `status`,     `description`,     `good_number`,     `good_name`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy93.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.save(Unknown Source)
	at com.bootdo.system.service.impl.OrderServiceImpl.save(OrderServiceImpl.java:52)
	at com.bootdo.system.controller.OrderController.save(OrderController.java:103)
	at com.bootdo.system.controller.OrderController$$FastClassBySpringCGLIB$$c0621953.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.OrderController$$EnhancerBySpringCGLIB$$e3fcca8e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy128.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2019-03-29 11:09:29 -Validating all active sessions...
2019-03-29 11:09:29 -Finished session validation.  [1] sessions were stopped.
2019-03-29 11:25:38 -请求地址 : http://localhost/login;JSESSIONID=db1add5e-740d-462b-b568-6a69a28d7266
2019-03-29 11:25:38 -HTTP METHOD : GET
2019-03-29 11:25:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-29 11:25:38 -参数 : []
2019-03-29 11:25:38 -耗时 : 0
2019-03-29 11:25:38 -返回值 : login
2019-03-29 11:25:38 -请求地址 : http://localhost/login
2019-03-29 11:25:38 -HTTP METHOD : GET
2019-03-29 11:25:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-29 11:25:38 -参数 : []
2019-03-29 11:25:38 -耗时 : 0
2019-03-29 11:25:38 -返回值 : login
2019-03-29 11:25:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 11:25:39 -==> Parameters: admin(String)
2019-03-29 11:25:39 -<==      Total: 1
2019-03-29 11:25:39 -请求地址 : http://localhost/login
2019-03-29 11:25:39 -HTTP METHOD : POST
2019-03-29 11:25:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-29 11:25:39 -参数 : [admin, 123456]
2019-03-29 11:25:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 11:25:39 -==> Parameters: admin(String)
2019-03-29 11:25:39 -<==      Total: 1
2019-03-29 11:25:39 -耗时 : 7
2019-03-29 11:25:39 -返回值 : {msg=操作成功, code=0}
2019-03-29 11:25:39 -请求地址 : http://localhost/index
2019-03-29 11:25:39 -HTTP METHOD : GET
2019-03-29 11:25:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-29 11:25:39 -参数 : [{}]
2019-03-29 11:25:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-29 11:25:39 -==> Parameters: 1(Long)
2019-03-29 11:25:39 -<==      Total: 20
2019-03-29 11:25:39 -耗时 : 11
2019-03-29 11:25:39 -返回值 : index_v1
2019-03-29 11:25:39 -请求地址 : http://localhost/main
2019-03-29 11:25:39 -HTTP METHOD : GET
2019-03-29 11:25:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 11:25:39 -参数 : []
2019-03-29 11:25:39 -耗时 : 1
2019-03-29 11:25:39 -返回值 : main
2019-03-29 11:25:39 -请求地址 : http://localhost/main
2019-03-29 11:25:39 -HTTP METHOD : GET
2019-03-29 11:25:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 11:25:39 -参数 : []
2019-03-29 11:25:39 -耗时 : 0
2019-03-29 11:25:39 -返回值 : main
2019-03-29 11:25:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 11:25:43 -==> Parameters: 1(Long)
2019-03-29 11:25:43 -<==      Total: 57
2019-03-29 11:25:43 -请求地址 : http://localhost/sys/user/
2019-03-29 11:25:43 -HTTP METHOD : GET
2019-03-29 11:25:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-29 11:25:43 -参数 : [{}]
2019-03-29 11:25:43 -耗时 : 1
2019-03-29 11:25:43 -返回值 : system/user/user
2019-03-29 11:25:43 -请求地址 : http://localhost/sys/user/list
2019-03-29 11:25:43 -HTTP METHOD : GET
2019-03-29 11:25:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-29 11:25:43 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 11:25:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-29 11:25:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 11:25:43 -<==      Total: 2
2019-03-29 11:25:43 -==>  Preparing: select count(*) from sys_user 
2019-03-29 11:25:43 -==> Parameters: 
2019-03-29 11:25:43 -<==      Total: 1
2019-03-29 11:25:43 -耗时 : 13
2019-03-29 11:25:43 -返回值 : com.bootdo.common.utils.PageUtils@3353c5e2
2019-03-29 11:25:45 -请求地址 : http://localhost/sys/role
2019-03-29 11:25:45 -HTTP METHOD : GET
2019-03-29 11:25:45 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-29 11:25:45 -参数 : []
2019-03-29 11:25:45 -耗时 : 1
2019-03-29 11:25:45 -返回值 : system/role/role
2019-03-29 11:25:45 -请求地址 : http://localhost/sys/role/list
2019-03-29 11:25:45 -HTTP METHOD : GET
2019-03-29 11:25:45 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-29 11:25:45 -参数 : []
2019-03-29 11:25:45 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-29 11:25:45 -==> Parameters: 
2019-03-29 11:25:45 -<==      Total: 2
2019-03-29 11:25:45 -耗时 : 4
2019-03-29 11:25:45 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-29 11:25:49 -请求地址 : http://localhost/system/order/
2019-03-29 11:25:49 -HTTP METHOD : GET
2019-03-29 11:25:49 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2019-03-29 11:25:49 -参数 : []
2019-03-29 11:25:49 -耗时 : 1
2019-03-29 11:25:49 -返回值 : system/order/order
2019-03-29 11:25:49 -请求地址 : http://localhost/system/order/list
2019-03-29 11:25:49 -HTTP METHOD : GET
2019-03-29 11:25:49 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 11:25:49 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 11:25:49 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 11:25:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 11:25:49 -<==      Total: 4
2019-03-29 11:25:49 -==>  Preparing: select count(*) from t_order 
2019-03-29 11:25:49 -==> Parameters: 
2019-03-29 11:25:49 -<==      Total: 1
2019-03-29 11:25:49 -耗时 : 5
2019-03-29 11:25:49 -返回值 : com.bootdo.common.utils.PageUtils@49f0428c
2019-03-29 12:09:29 -Validating all active sessions...
2019-03-29 12:09:29 -Finished session validation.  [1] sessions were stopped.
2019-03-29 13:09:29 -Validating all active sessions...
2019-03-29 13:09:29 -Finished session validation.  No sessions were stopped.
2019-03-29 13:55:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 13:55:22 -==> Parameters: admin(String)
2019-03-29 13:55:22 -<==      Total: 1
2019-03-29 13:55:22 -请求地址 : http://localhost/login
2019-03-29 13:55:22 -HTTP METHOD : POST
2019-03-29 13:55:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-29 13:55:22 -参数 : [admin, 123456]
2019-03-29 13:55:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 13:55:22 -==> Parameters: admin(String)
2019-03-29 13:55:22 -<==      Total: 1
2019-03-29 13:55:22 -耗时 : 1
2019-03-29 13:55:22 -返回值 : {msg=操作成功, code=0}
2019-03-29 13:55:22 -请求地址 : http://localhost/index
2019-03-29 13:55:22 -HTTP METHOD : GET
2019-03-29 13:55:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-29 13:55:22 -参数 : [{}]
2019-03-29 13:55:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-29 13:55:22 -==> Parameters: 1(Long)
2019-03-29 13:55:22 -<==      Total: 20
2019-03-29 13:55:22 -耗时 : 5
2019-03-29 13:55:22 -返回值 : index_v1
2019-03-29 13:55:22 -请求地址 : http://localhost/main
2019-03-29 13:55:22 -HTTP METHOD : GET
2019-03-29 13:55:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 13:55:22 -参数 : []
2019-03-29 13:55:22 -耗时 : 0
2019-03-29 13:55:22 -返回值 : main
2019-03-29 13:55:22 -请求地址 : http://localhost/main
2019-03-29 13:55:22 -HTTP METHOD : GET
2019-03-29 13:55:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 13:55:22 -参数 : []
2019-03-29 13:55:22 -耗时 : 1
2019-03-29 13:55:22 -返回值 : main
2019-03-29 14:04:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 14:04:05 -==> Parameters: 1(Long)
2019-03-29 14:04:05 -<==      Total: 57
2019-03-29 14:04:05 -请求地址 : http://localhost/sys/user/
2019-03-29 14:04:05 -HTTP METHOD : GET
2019-03-29 14:04:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-29 14:04:05 -参数 : [{}]
2019-03-29 14:04:05 -耗时 : 0
2019-03-29 14:04:05 -返回值 : system/user/user
2019-03-29 14:04:05 -请求地址 : http://localhost/sys/user/list
2019-03-29 14:04:05 -HTTP METHOD : GET
2019-03-29 14:04:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-29 14:04:05 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 14:04:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-29 14:04:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:04:05 -<==      Total: 2
2019-03-29 14:04:05 -==>  Preparing: select count(*) from sys_user 
2019-03-29 14:04:05 -==> Parameters: 
2019-03-29 14:04:05 -<==      Total: 1
2019-03-29 14:04:05 -耗时 : 6
2019-03-29 14:04:05 -返回值 : com.bootdo.common.utils.PageUtils@7662de02
2019-03-29 14:04:09 -请求地址 : http://localhost/system/customer
2019-03-29 14:04:09 -HTTP METHOD : GET
2019-03-29 14:04:09 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.Customer
2019-03-29 14:04:09 -参数 : []
2019-03-29 14:04:09 -耗时 : 1
2019-03-29 14:04:09 -返回值 : system/customer/customer
2019-03-29 14:04:09 -请求地址 : http://localhost/system/customer/list
2019-03-29 14:04:09 -HTTP METHOD : GET
2019-03-29 14:04:09 -CLASS_METHOD : com.bootdo.system.controller.CustomerController.list
2019-03-29 14:04:09 -参数 : [{limit=10, offset=0, number=}]
2019-03-29 14:04:09 -==>  Preparing: select `id`,`name`,`number`,`telephone`,`email`,`address`,`company` from t_customer order by id desc limit ?, ? 
2019-03-29 14:04:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:04:09 -<==      Total: 1
2019-03-29 14:04:09 -==>  Preparing: select count(*) from t_customer 
2019-03-29 14:04:09 -==> Parameters: 
2019-03-29 14:04:09 -<==      Total: 1
2019-03-29 14:04:09 -耗时 : 4
2019-03-29 14:04:09 -返回值 : com.bootdo.common.utils.PageUtils@3526e57
2019-03-29 14:04:15 -请求地址 : http://localhost/system/order/
2019-03-29 14:04:15 -HTTP METHOD : GET
2019-03-29 14:04:15 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2019-03-29 14:04:15 -参数 : []
2019-03-29 14:04:15 -耗时 : 2
2019-03-29 14:04:15 -返回值 : system/order/order
2019-03-29 14:04:16 -请求地址 : http://localhost/system/order/list
2019-03-29 14:04:16 -HTTP METHOD : GET
2019-03-29 14:04:16 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 14:04:16 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 14:04:16 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 14:04:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:04:16 -<==      Total: 4
2019-03-29 14:04:16 -==>  Preparing: select count(*) from t_order 
2019-03-29 14:04:16 -==> Parameters: 
2019-03-29 14:04:16 -<==      Total: 1
2019-03-29 14:04:16 -耗时 : 6
2019-03-29 14:04:16 -返回值 : com.bootdo.common.utils.PageUtils@7674ed77
2019-03-29 14:05:34 -请求地址 : http://localhost/system/storageInput
2019-03-29 14:05:34 -HTTP METHOD : GET
2019-03-29 14:05:34 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.StorageInput
2019-03-29 14:05:34 -参数 : []
2019-03-29 14:05:34 -耗时 : 2
2019-03-29 14:05:34 -返回值 : system/storageInput/storageInput
2019-03-29 14:05:34 -请求地址 : http://localhost/system/storageInput/list
2019-03-29 14:05:34 -HTTP METHOD : GET
2019-03-29 14:05:34 -CLASS_METHOD : com.bootdo.system.controller.StorageInputController.list
2019-03-29 14:05:34 -参数 : [{limit=10, offset=0}]
2019-03-29 14:05:34 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_input order by id desc limit ?, ? 
2019-03-29 14:05:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:05:34 -<==      Total: 5
2019-03-29 14:05:34 -==>  Preparing: select count(*) from t_storage_input 
2019-03-29 14:05:34 -==> Parameters: 
2019-03-29 14:05:34 -<==      Total: 1
2019-03-29 14:05:34 -耗时 : 7
2019-03-29 14:05:34 -返回值 : com.bootdo.common.utils.PageUtils@6d48dcd5
2019-03-29 14:05:38 -请求地址 : http://localhost/system/storageOutput
2019-03-29 14:05:38 -HTTP METHOD : GET
2019-03-29 14:05:38 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.StorageOutput
2019-03-29 14:05:38 -参数 : []
2019-03-29 14:05:38 -耗时 : 2
2019-03-29 14:05:38 -返回值 : system/storageOutput/storageOutput
2019-03-29 14:05:38 -请求地址 : http://localhost/system/storageOutput/list
2019-03-29 14:05:38 -HTTP METHOD : GET
2019-03-29 14:05:38 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2019-03-29 14:05:38 -参数 : [{limit=10, offset=0}]
2019-03-29 14:05:38 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2019-03-29 14:05:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:05:38 -<==      Total: 3
2019-03-29 14:05:38 -==>  Preparing: select count(*) from t_storage_output 
2019-03-29 14:05:38 -==> Parameters: 
2019-03-29 14:05:38 -<==      Total: 1
2019-03-29 14:05:38 -耗时 : 5
2019-03-29 14:05:38 -返回值 : com.bootdo.common.utils.PageUtils@525e34b4
2019-03-29 14:05:40 -请求地址 : http://localhost/system/storage
2019-03-29 14:05:40 -HTTP METHOD : GET
2019-03-29 14:05:40 -CLASS_METHOD : com.bootdo.system.controller.StorageController.Storage
2019-03-29 14:05:40 -参数 : []
2019-03-29 14:05:40 -耗时 : 1
2019-03-29 14:05:40 -返回值 : system/storage/storage
2019-03-29 14:05:41 -请求地址 : http://localhost/system/storage/list
2019-03-29 14:05:41 -HTTP METHOD : GET
2019-03-29 14:05:41 -CLASS_METHOD : com.bootdo.system.controller.StorageController.list
2019-03-29 14:05:41 -参数 : [{limit=10, offset=0}]
2019-03-29 14:05:41 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_count` from t_storage order by id desc limit ?, ? 
2019-03-29 14:05:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:05:41 -<==      Total: 3
2019-03-29 14:05:41 -==>  Preparing: select count(*) from t_storage 
2019-03-29 14:05:41 -==> Parameters: 
2019-03-29 14:05:41 -<==      Total: 1
2019-03-29 14:05:41 -耗时 : 6
2019-03-29 14:05:41 -返回值 : com.bootdo.common.utils.PageUtils@6077f3d5
2019-03-29 14:05:48 -请求地址 : http://localhost/system/storageOutput/remove
2019-03-29 14:05:48 -HTTP METHOD : POST
2019-03-29 14:05:48 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.remove
2019-03-29 14:05:48 -参数 : [3]
2019-03-29 14:05:48 -==>  Preparing: delete from t_storage_output where id = ? 
2019-03-29 14:05:48 -==> Parameters: 3(Long)
2019-03-29 14:05:48 -<==    Updates: 1
2019-03-29 14:05:48 -耗时 : 41
2019-03-29 14:05:48 -返回值 : {msg=操作成功, code=0}
2019-03-29 14:05:48 -请求地址 : http://localhost/system/storageOutput/list
2019-03-29 14:05:48 -HTTP METHOD : GET
2019-03-29 14:05:48 -CLASS_METHOD : com.bootdo.system.controller.StorageOutputController.list
2019-03-29 14:05:48 -参数 : [{limit=10, offset=0}]
2019-03-29 14:05:48 -==>  Preparing: select `id`,`good_name`,`good_number`,`good_price`,`good_count`,`create_date` from t_storage_output order by id desc limit ?, ? 
2019-03-29 14:05:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:05:48 -<==      Total: 2
2019-03-29 14:05:48 -==>  Preparing: select count(*) from t_storage_output 
2019-03-29 14:05:48 -==> Parameters: 
2019-03-29 14:05:48 -<==      Total: 1
2019-03-29 14:05:48 -耗时 : 7
2019-03-29 14:05:48 -返回值 : com.bootdo.common.utils.PageUtils@27c77fa2
2019-03-29 14:05:54 -请求地址 : http://localhost/system/car
2019-03-29 14:05:54 -HTTP METHOD : GET
2019-03-29 14:05:54 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2019-03-29 14:05:54 -参数 : []
2019-03-29 14:05:54 -耗时 : 2
2019-03-29 14:05:54 -返回值 : system/car/car
2019-03-29 14:05:54 -请求地址 : http://localhost/system/car/list
2019-03-29 14:05:54 -HTTP METHOD : GET
2019-03-29 14:05:54 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2019-03-29 14:05:54 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 14:05:54 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2019-03-29 14:05:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:05:54 -<==      Total: 2
2019-03-29 14:05:54 -==>  Preparing: select count(*) from t_car 
2019-03-29 14:05:54 -==> Parameters: 
2019-03-29 14:05:54 -<==      Total: 1
2019-03-29 14:05:54 -耗时 : 6
2019-03-29 14:05:54 -返回值 : com.bootdo.common.utils.PageUtils@548e08b0
2019-03-29 14:06:01 -请求地址 : http://localhost/sys/role
2019-03-29 14:06:01 -HTTP METHOD : GET
2019-03-29 14:06:01 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-29 14:06:01 -参数 : []
2019-03-29 14:06:01 -耗时 : 0
2019-03-29 14:06:01 -返回值 : system/role/role
2019-03-29 14:06:01 -请求地址 : http://localhost/sys/role/list
2019-03-29 14:06:01 -HTTP METHOD : GET
2019-03-29 14:06:01 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-29 14:06:01 -参数 : []
2019-03-29 14:06:01 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-29 14:06:01 -==> Parameters: 
2019-03-29 14:06:01 -<==      Total: 2
2019-03-29 14:06:01 -耗时 : 2
2019-03-29 14:06:01 -返回值 : [RoleDO{roleId=2, roleName='普通用户角色', roleSign='null', remark='', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-29 14:09:29 -Validating all active sessions...
2019-03-29 14:09:29 -Finished session validation.  No sessions were stopped.
2019-03-29 14:19:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 14:19:52 -==> Parameters: 1(Long)
2019-03-29 14:19:52 -<==      Total: 57
2019-03-29 14:19:52 -请求地址 : http://localhost/system/good
2019-03-29 14:19:52 -HTTP METHOD : GET
2019-03-29 14:19:52 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2019-03-29 14:19:52 -参数 : []
2019-03-29 14:19:52 -耗时 : 0
2019-03-29 14:19:52 -返回值 : system/good/good
2019-03-29 14:19:52 -请求地址 : http://localhost/system/good/list
2019-03-29 14:19:52 -HTTP METHOD : GET
2019-03-29 14:19:52 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2019-03-29 14:19:52 -参数 : [{limit=10, offset=0, title=}]
2019-03-29 14:19:52 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2019-03-29 14:19:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:19:52 -<==      Total: 5
2019-03-29 14:19:52 -==>  Preparing: select count(*) from t_good 
2019-03-29 14:19:52 -==> Parameters: 
2019-03-29 14:19:52 -<==      Total: 1
2019-03-29 14:19:52 -耗时 : 6
2019-03-29 14:19:52 -返回值 : com.bootdo.common.utils.PageUtils@557192bf
2019-03-29 14:20:18 -请求地址 : http://localhost/system/logistics
2019-03-29 14:20:18 -HTTP METHOD : GET
2019-03-29 14:20:18 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2019-03-29 14:20:18 -参数 : []
2019-03-29 14:20:18 -耗时 : 1
2019-03-29 14:20:18 -返回值 : system/logistics/logistics
2019-03-29 14:20:18 -请求地址 : http://localhost/system/logistics/list
2019-03-29 14:20:18 -HTTP METHOD : GET
2019-03-29 14:20:18 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 14:20:18 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 14:20:18 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 14:20:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:20:18 -<==      Total: 3
2019-03-29 14:20:18 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 14:20:18 -==> Parameters: 
2019-03-29 14:20:18 -<==      Total: 1
2019-03-29 14:20:18 -耗时 : 5
2019-03-29 14:20:18 -返回值 : com.bootdo.common.utils.PageUtils@2bb4e55b
2019-03-29 14:20:24 -请求地址 : http://localhost/system/logisticsManage
2019-03-29 14:20:24 -HTTP METHOD : GET
2019-03-29 14:20:24 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.LogisticsManage
2019-03-29 14:20:24 -参数 : []
2019-03-29 14:20:24 -耗时 : 1
2019-03-29 14:20:24 -返回值 : system/logisticsManage/logisticsManage
2019-03-29 14:20:24 -请求地址 : http://localhost/system/logisticsManage/list
2019-03-29 14:20:24 -HTTP METHOD : GET
2019-03-29 14:20:24 -CLASS_METHOD : com.bootdo.system.controller.LogisticsManageController.list
2019-03-29 14:20:24 -参数 : [{limit=10, offset=0}]
2019-03-29 14:20:24 -==>  Preparing: select `id`,`logistics_no`,`drivier_name`,`car_no`,`create_date`,`status` from t_logistics_manage order by id desc limit ?, ? 
2019-03-29 14:20:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:20:24 -<==      Total: 4
2019-03-29 14:20:24 -==>  Preparing: select count(*) from t_logistics_manage 
2019-03-29 14:20:24 -==> Parameters: 
2019-03-29 14:20:24 -<==      Total: 1
2019-03-29 14:20:24 -耗时 : 5
2019-03-29 14:20:24 -返回值 : com.bootdo.common.utils.PageUtils@79aaeb93
2019-03-29 14:20:28 -请求地址 : http://localhost/system/order/statistics
2019-03-29 14:20:28 -HTTP METHOD : GET
2019-03-29 14:20:28 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statistics
2019-03-29 14:20:28 -参数 : []
2019-03-29 14:20:28 -耗时 : 1
2019-03-29 14:20:28 -返回值 : system/order/statistics
2019-03-29 14:20:28 -请求地址 : http://localhost/system/order/statisticsList
2019-03-29 14:20:28 -HTTP METHOD : GET
2019-03-29 14:20:28 -CLASS_METHOD : com.bootdo.system.controller.OrderController.statisticsList
2019-03-29 14:20:28 -参数 : [{limit=10, offset=0}]
2019-03-29 14:20:28 -==>  Preparing: select customer_name,SUM(total_price) total_price,SUM(total_count) total_count from t_order where status =2 GROUP BY customer_name 
2019-03-29 14:20:28 -==> Parameters: 
2019-03-29 14:20:28 -<==      Total: 2
2019-03-29 14:20:28 -==>  Preparing: select count(*) from (select customer_name from t_order where status =2 GROUP BY customer_name) t 
2019-03-29 14:20:28 -==> Parameters: 
2019-03-29 14:20:28 -<==      Total: 1
2019-03-29 14:20:28 -耗时 : 7
2019-03-29 14:20:28 -返回值 : com.bootdo.common.utils.PageUtils@5bdad46
2019-03-29 14:20:31 -请求地址 : http://localhost/system/orderSettlement
2019-03-29 14:20:31 -HTTP METHOD : GET
2019-03-29 14:20:31 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.OrderSettlement
2019-03-29 14:20:31 -参数 : []
2019-03-29 14:20:31 -耗时 : 2
2019-03-29 14:20:31 -返回值 : system/orderSettlement/orderSettlement
2019-03-29 14:20:31 -请求地址 : http://localhost/system/orderSettlement/list
2019-03-29 14:20:31 -HTTP METHOD : GET
2019-03-29 14:20:31 -CLASS_METHOD : com.bootdo.system.controller.OrderSettlementController.list
2019-03-29 14:20:31 -参数 : [{limit=10, offset=0}]
2019-03-29 14:20:31 -==>  Preparing: select `id`,`order_sn`,`total_price`,`create_date`,`state` from t_order_settlement order by id desc limit ?, ? 
2019-03-29 14:20:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:20:31 -<==      Total: 3
2019-03-29 14:20:31 -==>  Preparing: select count(*) from t_order_settlement 
2019-03-29 14:20:31 -==> Parameters: 
2019-03-29 14:20:31 -<==      Total: 1
2019-03-29 14:20:31 -耗时 : 4
2019-03-29 14:20:31 -返回值 : com.bootdo.common.utils.PageUtils@345a0873
2019-03-29 14:20:59 -请求地址 : http://localhost/system/order/edit/4
2019-03-29 14:20:59 -HTTP METHOD : GET
2019-03-29 14:20:59 -CLASS_METHOD : com.bootdo.system.controller.OrderController.edit
2019-03-29 14:20:59 -参数 : [4, {}]
2019-03-29 14:20:59 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order where id = ? 
2019-03-29 14:20:59 -==> Parameters: 4(Long)
2019-03-29 14:20:59 -<==      Total: 1
2019-03-29 14:20:59 -耗时 : 6
2019-03-29 14:20:59 -返回值 : system/order/edit
2019-03-29 14:21:35 -请求地址 : http://localhost/login
2019-03-29 14:21:35 -HTTP METHOD : POST
2019-03-29 14:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-29 14:21:35 -参数 : [zys, 123456]
2019-03-29 14:21:35 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-29 14:21:35 -==> Parameters: zys(String)
2019-03-29 14:21:35 -<==      Total: 1
2019-03-29 14:21:35 -耗时 : 6
2019-03-29 14:21:35 -返回值 : {msg=操作成功, code=0}
2019-03-29 14:21:35 -请求地址 : http://localhost/index
2019-03-29 14:21:35 -HTTP METHOD : GET
2019-03-29 14:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-29 14:21:35 -参数 : [{}]
2019-03-29 14:21:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-29 14:21:35 -==> Parameters: 11(Long)
2019-03-29 14:21:35 -<==      Total: 8
2019-03-29 14:21:35 -耗时 : 6
2019-03-29 14:21:35 -返回值 : index_v1
2019-03-29 14:21:35 -请求地址 : http://localhost/main
2019-03-29 14:21:35 -HTTP METHOD : GET
2019-03-29 14:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 14:21:35 -参数 : []
2019-03-29 14:21:35 -耗时 : 0
2019-03-29 14:21:35 -返回值 : main
2019-03-29 14:21:35 -请求地址 : http://localhost/main
2019-03-29 14:21:35 -HTTP METHOD : GET
2019-03-29 14:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-29 14:21:35 -参数 : []
2019-03-29 14:21:35 -耗时 : 1
2019-03-29 14:21:35 -返回值 : main
2019-03-29 14:21:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-29 14:21:40 -==> Parameters: 11(Long)
2019-03-29 14:21:40 -<==      Total: 9
2019-03-29 14:21:40 -请求地址 : http://localhost/system/order/
2019-03-29 14:21:40 -HTTP METHOD : GET
2019-03-29 14:21:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.Order
2019-03-29 14:21:40 -参数 : []
2019-03-29 14:21:40 -耗时 : 1
2019-03-29 14:21:40 -返回值 : system/order/order
2019-03-29 14:21:40 -请求地址 : http://localhost/system/order/list
2019-03-29 14:21:40 -HTTP METHOD : GET
2019-03-29 14:21:40 -CLASS_METHOD : com.bootdo.system.controller.OrderController.list
2019-03-29 14:21:40 -参数 : [{limit=10, offset=0, orderSn=}]
2019-03-29 14:21:40 -==>  Preparing: select `id`,`order_sn`,`customer_number`,`customer_name`,`total_price`,`total_count`,`pay_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`user_id`,`create_date`,`status`,`description`,`good_number`,`good_name` from t_order order by id desc limit ?, ? 
2019-03-29 14:21:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:21:40 -<==      Total: 4
2019-03-29 14:21:40 -==>  Preparing: select count(*) from t_order 
2019-03-29 14:21:40 -==> Parameters: 
2019-03-29 14:21:40 -<==      Total: 1
2019-03-29 14:21:40 -耗时 : 4
2019-03-29 14:21:40 -返回值 : com.bootdo.common.utils.PageUtils@42bc2b73
2019-03-29 14:21:42 -请求地址 : http://localhost/system/good
2019-03-29 14:21:42 -HTTP METHOD : GET
2019-03-29 14:21:42 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2019-03-29 14:21:42 -参数 : []
2019-03-29 14:21:42 -耗时 : 2
2019-03-29 14:21:42 -返回值 : system/good/good
2019-03-29 14:21:42 -请求地址 : http://localhost/system/good/list
2019-03-29 14:21:42 -HTTP METHOD : GET
2019-03-29 14:21:42 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2019-03-29 14:21:42 -参数 : [{limit=10, offset=0, title=}]
2019-03-29 14:21:42 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2019-03-29 14:21:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:21:42 -<==      Total: 5
2019-03-29 14:21:42 -==>  Preparing: select count(*) from t_good 
2019-03-29 14:21:42 -==> Parameters: 
2019-03-29 14:21:42 -<==      Total: 1
2019-03-29 14:21:42 -耗时 : 6
2019-03-29 14:21:42 -返回值 : com.bootdo.common.utils.PageUtils@c7ea63
2019-03-29 14:21:47 -请求地址 : http://localhost/system/car
2019-03-29 14:21:47 -HTTP METHOD : GET
2019-03-29 14:21:47 -CLASS_METHOD : com.bootdo.system.controller.CarController.Car
2019-03-29 14:21:47 -参数 : []
2019-03-29 14:21:47 -耗时 : 2
2019-03-29 14:21:47 -返回值 : system/car/car
2019-03-29 14:21:47 -请求地址 : http://localhost/system/car/list
2019-03-29 14:21:47 -HTTP METHOD : GET
2019-03-29 14:21:47 -CLASS_METHOD : com.bootdo.system.controller.CarController.list
2019-03-29 14:21:47 -参数 : [{limit=10, offset=0, name=}]
2019-03-29 14:21:47 -==>  Preparing: select `id`,`type`,`name`,`no`,`driver_name`,`driver_telephone`,`driver_age`,`car_age`,`weight`,`status` from t_car order by id desc limit ?, ? 
2019-03-29 14:21:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:21:47 -<==      Total: 2
2019-03-29 14:21:47 -==>  Preparing: select count(*) from t_car 
2019-03-29 14:21:47 -==> Parameters: 
2019-03-29 14:21:47 -<==      Total: 1
2019-03-29 14:21:47 -耗时 : 3
2019-03-29 14:21:47 -返回值 : com.bootdo.common.utils.PageUtils@2364a6bd
2019-03-29 14:21:50 -请求地址 : http://localhost/system/logistics
2019-03-29 14:21:50 -HTTP METHOD : GET
2019-03-29 14:21:50 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.Logistics
2019-03-29 14:21:50 -参数 : []
2019-03-29 14:21:50 -耗时 : 2
2019-03-29 14:21:50 -返回值 : system/logistics/logistics
2019-03-29 14:21:50 -请求地址 : http://localhost/system/logistics/list
2019-03-29 14:21:50 -HTTP METHOD : GET
2019-03-29 14:21:50 -CLASS_METHOD : com.bootdo.system.controller.LogisticsController.list
2019-03-29 14:21:50 -参数 : [{limit=10, offset=0, no=}]
2019-03-29 14:21:50 -==>  Preparing: select `id`,`no`,`good_number`,`good_name`,`send_name`,`send_address`,`send_telephone`,`send_province`,`send_city`,`send_date`,`consignee_name`,`consignee_address`,`consignee_telephone`,`arrive_province`,`arrive_city`,`arrive_date`,`order_sn` from t_logistics order by id desc limit ?, ? 
2019-03-29 14:21:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:21:50 -<==      Total: 3
2019-03-29 14:21:50 -==>  Preparing: select count(*) from t_logistics 
2019-03-29 14:21:50 -==> Parameters: 
2019-03-29 14:21:50 -<==      Total: 1
2019-03-29 14:21:50 -耗时 : 5
2019-03-29 14:21:50 -返回值 : com.bootdo.common.utils.PageUtils@3ffd06fa
2019-03-29 14:25:40 -请求地址 : http://localhost/system/good
2019-03-29 14:25:40 -HTTP METHOD : GET
2019-03-29 14:25:40 -CLASS_METHOD : com.bootdo.system.controller.GoodController.Good
2019-03-29 14:25:40 -参数 : []
2019-03-29 14:25:40 -耗时 : 2
2019-03-29 14:25:40 -返回值 : system/good/good
2019-03-29 14:25:40 -请求地址 : http://localhost/system/good/list
2019-03-29 14:25:40 -HTTP METHOD : GET
2019-03-29 14:25:40 -CLASS_METHOD : com.bootdo.system.controller.GoodController.list
2019-03-29 14:25:40 -参数 : [{limit=10, offset=0, title=}]
2019-03-29 14:25:40 -==>  Preparing: select `id`,`title`,`type`,`number`,`price`,`weight`,`place`,`img`,`imgmore`,`create_by`,`create_date`,`remark`,`del_flag` from t_good order by id desc limit ?, ? 
2019-03-29 14:25:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-29 14:25:40 -<==      Total: 5
2019-03-29 14:25:40 -==>  Preparing: select count(*) from t_good 
2019-03-29 14:25:40 -==> Parameters: 
2019-03-29 14:25:40 -<==      Total: 1
2019-03-29 14:25:40 -耗时 : 6
2019-03-29 14:25:40 -返回值 : com.bootdo.common.utils.PageUtils@5b4da79e
